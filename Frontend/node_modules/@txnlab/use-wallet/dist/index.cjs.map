{"version":3,"sources":["../../../node_modules/.pnpm/@magic-sdk+types@24.18.1/node_modules/@magic-sdk/types/src/core/exception-types.ts","../../../node_modules/.pnpm/@magic-sdk+types@24.18.1/node_modules/@magic-sdk/types/src/core/json-rpc-types.ts","../../../node_modules/.pnpm/@magic-sdk+types@24.18.1/node_modules/@magic-sdk/types/src/core/message-types.ts","../../../node_modules/.pnpm/@magic-sdk+types@24.18.1/node_modules/@magic-sdk/types/src/core/deep-link-pages.ts","../../../node_modules/.pnpm/@magic-sdk+types@24.18.1/node_modules/@magic-sdk/types/src/modules/auth-types.ts","../../../node_modules/.pnpm/@magic-sdk+types@24.18.1/node_modules/@magic-sdk/types/src/modules/rpc-provider-types.ts","../../../node_modules/.pnpm/@magic-sdk+types@24.18.1/node_modules/@magic-sdk/types/src/modules/user-types.ts","../../../node_modules/.pnpm/@magic-sdk+types@24.18.1/node_modules/@magic-sdk/types/src/modules/nft-types.ts","../../../node_modules/.pnpm/@magic-sdk+types@24.18.1/node_modules/@magic-sdk/types/src/modules/wallet-types.ts","../../../node_modules/.pnpm/@magic-sdk+types@24.18.1/node_modules/@magic-sdk/types/src/modules/common-types.ts","../../../node_modules/.pnpm/@magic-sdk+provider@28.20.0_localforage@1.10.0/node_modules/@magic-sdk/provider/node_modules/eventemitter3/index.js","../../../node_modules/.pnpm/@magic-sdk+provider@28.20.0_localforage@1.10.0/node_modules/@magic-sdk/provider/src/util/semver.js","../../../node_modules/.pnpm/@magic-sdk+provider@28.20.0_localforage@1.10.0/node_modules/@magic-sdk/provider/src/util/base64-json.ts","../../../node_modules/.pnpm/@magic-sdk+provider@28.20.0_localforage@1.10.0/node_modules/@magic-sdk/provider/src/core/sdk-exceptions.ts","../../../node_modules/.pnpm/@magic-sdk+provider@28.20.0_localforage@1.10.0/node_modules/@magic-sdk/provider/src/util/type-guards.ts","../../../node_modules/.pnpm/@magic-sdk+provider@28.20.0_localforage@1.10.0/node_modules/@magic-sdk/provider/src/core/sdk-environment.ts","../../../node_modules/.pnpm/@magic-sdk+provider@28.20.0_localforage@1.10.0/node_modules/@magic-sdk/provider/src/modules/auth.ts","../../../node_modules/.pnpm/@magic-sdk+provider@28.20.0_localforage@1.10.0/node_modules/@magic-sdk/provider/src/modules/base-module.ts","../../../node_modules/.pnpm/@magic-sdk+provider@28.20.0_localforage@1.10.0/node_modules/@magic-sdk/provider/src/util/get-payload-id.ts","../../../node_modules/.pnpm/@magic-sdk+provider@28.20.0_localforage@1.10.0/node_modules/@magic-sdk/provider/src/core/json-rpc.ts","../../../node_modules/.pnpm/@magic-sdk+provider@28.20.0_localforage@1.10.0/node_modules/@magic-sdk/provider/src/util/promise-tools.ts","../../../node_modules/.pnpm/@magic-sdk+provider@28.20.0_localforage@1.10.0/node_modules/@magic-sdk/provider/src/util/events.ts","../../../node_modules/.pnpm/@magic-sdk+provider@28.20.0_localforage@1.10.0/node_modules/@magic-sdk/provider/src/util/version-check.ts","../../../node_modules/.pnpm/@magic-sdk+provider@28.20.0_localforage@1.10.0/node_modules/@magic-sdk/provider/src/modules/user.ts","../../../node_modules/.pnpm/@magic-sdk+provider@28.20.0_localforage@1.10.0/node_modules/@magic-sdk/provider/src/util/storage.ts","../../../node_modules/.pnpm/@magic-sdk+provider@28.20.0_localforage@1.10.0/node_modules/@magic-sdk/provider/src/util/uuid.ts","../../../node_modules/.pnpm/@magic-sdk+provider@28.20.0_localforage@1.10.0/node_modules/@magic-sdk/provider/src/util/web-crypto.ts","../../../node_modules/.pnpm/@magic-sdk+provider@28.20.0_localforage@1.10.0/node_modules/@magic-sdk/provider/src/util/device-share-web-crypto.ts","../../../node_modules/.pnpm/@magic-sdk+provider@28.20.0_localforage@1.10.0/node_modules/@magic-sdk/provider/src/util/url.ts","../../../node_modules/.pnpm/@magic-sdk+provider@28.20.0_localforage@1.10.0/node_modules/@magic-sdk/provider/src/modules/wallet.ts","../../../node_modules/.pnpm/@magic-sdk+provider@28.20.0_localforage@1.10.0/node_modules/@magic-sdk/provider/src/modules/third-party-wallets.ts","../../../node_modules/.pnpm/@magic-sdk+provider@28.20.0_localforage@1.10.0/node_modules/@magic-sdk/provider/src/modules/rpc-provider.ts","../../../node_modules/.pnpm/@magic-sdk+provider@28.20.0_localforage@1.10.0/node_modules/@magic-sdk/provider/src/modules/base-extension.ts","../../../node_modules/.pnpm/@magic-sdk+provider@28.20.0_localforage@1.10.0/node_modules/@magic-sdk/provider/src/modules/nft.ts","../../../node_modules/.pnpm/@magic-sdk+provider@28.20.0_localforage@1.10.0/node_modules/@magic-sdk/provider/src/core/sdk.ts","../../../node_modules/.pnpm/@magic-sdk+provider@28.20.0_localforage@1.10.0/node_modules/@magic-sdk/provider/src/core/view-controller.ts","../../../node_modules/.pnpm/@magic-sdk+commons@24.20.0_@magic-sdk+provider@28.20.0_localforage@1.10.0__@magic-sdk+types@24.18.1/node_modules/@magic-sdk/commons/src/index.ts","../../../node_modules/.pnpm/magic-sdk@28.21.1/node_modules/magic-sdk/node_modules/localforage/dist/localforage.js","../../../node_modules/.pnpm/magic-sdk@28.21.1/node_modules/magic-sdk/node_modules/src/_driver.ts","../../../node_modules/.pnpm/magic-sdk@28.21.1/node_modules/magic-sdk/node_modules/node_modules/localforage-driver-commons/_bundle/fesm5.js","../../../node_modules/.pnpm/magic-sdk@28.21.1/node_modules/magic-sdk/node_modules/src/Store.ts","../../../node_modules/.pnpm/magic-sdk@28.21.1/node_modules/magic-sdk/node_modules/src/_initStorage.ts","../../../node_modules/.pnpm/magic-sdk@28.21.1/node_modules/magic-sdk/node_modules/src/clear.ts","../../../node_modules/.pnpm/magic-sdk@28.21.1/node_modules/magic-sdk/node_modules/src/dropInstance.ts","../../../node_modules/.pnpm/magic-sdk@28.21.1/node_modules/magic-sdk/node_modules/src/getItem.ts","../../../node_modules/.pnpm/magic-sdk@28.21.1/node_modules/magic-sdk/node_modules/src/iterate.ts","../../../node_modules/.pnpm/magic-sdk@28.21.1/node_modules/magic-sdk/node_modules/src/key.ts","../../../node_modules/.pnpm/magic-sdk@28.21.1/node_modules/magic-sdk/node_modules/src/keys.ts","../../../node_modules/.pnpm/magic-sdk@28.21.1/node_modules/magic-sdk/node_modules/src/length.ts","../../../node_modules/.pnpm/magic-sdk@28.21.1/node_modules/magic-sdk/node_modules/src/removeItem.ts","../../../node_modules/.pnpm/magic-sdk@28.21.1/node_modules/magic-sdk/node_modules/src/setItem.ts","../../../node_modules/.pnpm/magic-sdk@28.21.1/node_modules/magic-sdk/node_modules/src/index.ts","../../../node_modules/.pnpm/magic-sdk@28.21.1/node_modules/magic-sdk/src/index.ts","../../../node_modules/.pnpm/magic-sdk@28.21.1/node_modules/magic-sdk/src/iframe-controller.ts","../../../node_modules/.pnpm/@magic-ext+algorand@23.20.0/node_modules/@magic-ext/algorand/src/index.ts","../src/index.ts","../src/logger.ts","../src/manager.ts","../src/network.ts","../src/storage.ts","../src/store.ts","../src/wallets/types.ts","../src/utils.ts","../src/wallets/walletconnect.ts","../src/wallets/base.ts","../src/wallets/biatec.ts","../src/wallets/custom.ts","../src/wallets/defly.ts","../src/wallets/avm-web-provider.ts","../src/wallets/defly-web.ts","../src/wallets/exodus.ts","../src/wallets/kibisis.ts","../src/wallets/kmd.ts","../src/wallets/lute.ts","../src/wallets/magic.ts","../src/wallets/mnemonic.ts","../src/wallets/pera.ts","../src/webpack.ts"],"sourcesContent":["export enum SDKErrorCode {\n  MissingApiKey = 'MISSING_API_KEY',\n  ModalNotReady = 'MODAL_NOT_READY',\n  ConnectionLost = 'CONNECTION_WAS_LOST',\n  MalformedResponse = 'MALFORMED_RESPONSE',\n  InvalidArgument = 'INVALID_ARGUMENT',\n  ExtensionNotInitialized = 'EXTENSION_NOT_INITIALIZED',\n  IncompatibleExtensions = 'INCOMPATIBLE_EXTENSIONS',\n}\n\nexport enum SDKWarningCode {\n  SyncWeb3Method = 'SYNC_WEB3_METHOD',\n  DuplicateIframe = 'DUPLICATE_IFRAME',\n  ReactNativeEndpointConfiguration = 'REACT_NATIVE_ENDPOINT_CONFIGURATION',\n  DeprecationNotice = 'DEPRECATION_NOTICE',\n  ProductAnnouncement = 'ANNOUNCEMENT',\n}\n\nexport enum RPCErrorCode {\n  // Standard JSON RPC 2.0 Error Codes\n  ParseError = -32700,\n  InvalidRequest = -32600,\n  MethodNotFound = -32601,\n  InvalidParams = -32602,\n  InternalError = -32603,\n\n  // Custom RPC Error Codes\n  MagicLinkFailedVerification = -10000,\n  MagicLinkExpired = -10001,\n  MagicLinkRateLimited = -10002,\n  MagicLinkInvalidRedirectURL = -10006,\n  UserAlreadyLoggedIn = -10003,\n  UpdateEmailFailed = -10004,\n  UserRequestEditEmail = -10005,\n  InactiveRecipient = -10010,\n  AccessDeniedToUser = -10011,\n  RedirectLoginComplete = -10015,\n}\n\nexport type ErrorCode = SDKErrorCode | RPCErrorCode;\nexport type WarningCode = SDKWarningCode;\n","import { RPCErrorCode } from './exception-types';\n\n// --- Request interfaces\n\nexport interface JsonRpcRequestPayload<TParams = any> {\n  jsonrpc: string;\n  id: string | number | null;\n  method: string;\n  params?: TParams;\n}\n\nexport interface JsonRpcRequestCallback {\n  /** Callback executed upon JSON RPC response. */\n  (err: JsonRpcError | null, result?: JsonRpcResponsePayload | null): void;\n}\n\nexport interface JsonRpcBatchRequestCallback {\n  /** Callback executed upon JSON RPC response. */\n  (err: JsonRpcError | null, result?: (JsonRpcResponsePayload | null)[] | null): void;\n}\n\n// --- Response interfaces\n\nexport interface JsonRpcError {\n  message: string;\n  code: RPCErrorCode;\n  data?: any;\n}\n\nexport interface JsonRpcResponsePayload<ResultType = any> {\n  jsonrpc: string;\n  id: string | number | null;\n  result?: ResultType | null;\n  error?: JsonRpcError | null;\n}\n\nexport interface UserInfo {\n  email?: string;\n}\n\nexport type ShowUIPromiEvents = {\n  disconnect: () => void;\n};\n\nexport interface WalletInfo {\n  walletType: string;\n}\n\nexport interface RequestUserInfoScope {\n  scope?: {\n    email?: 'required' | 'optional';\n  };\n}\n\nexport enum LocalStorageKeys {\n  PROVIDER = 'magic_3pw_provider',\n  ADDRESS = 'magic_3pw_address',\n  CHAIN_ID = 'magic_3pw_chainId',\n}\n\nexport enum ThirdPartyWalletEvents {\n  WalletConnected = 'wallet_connected',\n  WalletRejected = 'wallet_rejected',\n  Web3ModalSelected = 'web3modal_selected',\n}\n\nexport interface ConnectWithUIOptions {\n  autoPromptThirdPartyWallets?: boolean;\n}\n\nexport type ConnectWithUiEvents = {\n  'id-token-created': (params: { idToken: string }) => void;\n} & { [key in ThirdPartyWalletEvents]: () => void };\n\n// --- Payload methods\n\n/**\n * Enum of JSON RPC methods for interacting with the Magic SDK authentication\n * relayer.\n */\nexport enum MagicPayloadMethod {\n  LoginWithSms = 'magic_auth_login_with_sms',\n  LoginWithEmailOTP = 'magic_auth_login_with_email_otp',\n  LoginWithMagicLink = 'magic_auth_login_with_magic_link',\n  LoginWithCredential = 'magic_auth_login_with_credential',\n  SetAuthorizationToken = 'magic_auth_set_authorization_token',\n  GetIdToken = 'magic_auth_get_id_token',\n  GenerateIdToken = 'magic_auth_generate_id_token',\n  GetMetadata = 'magic_auth_get_metadata',\n  IsLoggedIn = 'magic_is_logged_in',\n  Logout = 'magic_auth_logout',\n  UpdateEmail = 'magic_auth_update_email',\n  UserSettings = 'magic_auth_settings',\n  UserSettingsTestMode = 'magic_auth_settings_testing_mode',\n  LoginWithSmsTestMode = 'magic_auth_login_with_sms_testing_mode',\n  LoginWithEmailOTPTestMode = 'magic_auth_login_with_email_otp_testing_mode',\n  LoginWithMagicLinkTestMode = 'magic_login_with_magic_link_testing_mode',\n  LoginWithCredentialTestMode = 'magic_auth_login_with_credential_testing_mode',\n  GetIdTokenTestMode = 'magic_auth_get_id_token_testing_mode',\n  GenerateIdTokenTestMode = 'magic_auth_generate_id_token_testing_mode',\n  GetMetadataTestMode = 'magic_auth_get_metadata_testing_mode',\n  IsLoggedInTestMode = 'magic_auth_is_logged_in_testing_mode',\n  LogoutTestMode = 'magic_auth_logout_testing_mode',\n  UpdateEmailTestMode = 'magic_auth_update_email_testing_mode',\n  IntermediaryEvent = 'magic_intermediary_event',\n  RequestAccounts = 'eth_requestAccounts',\n  GetInfo = 'magic_get_info',\n  ShowUI = 'magic_wallet',\n  NFTPurchase = 'magic_nft_purchase',\n  NFTCheckout = 'magic_nft_checkout',\n  NFTTransfer = 'magic_nft_transfer',\n  RequestUserInfoWithUI = 'mc_request_user_info',\n  Disconnect = 'mc_disconnect',\n  // UpdatePhoneNumber = 'magic_auth_update_phone_number',\n  // UpdatePhoneNumberTestMode = 'magic_auth_update_phone_number_testing_mode',\n  RecoverAccount = 'magic_auth_recover_account',\n  RecoverAccountTestMode = 'magic_auth_recover_account_testing_mode',\n  MagicBoxHeartBeat = 'magic_box_heart_beat',\n  AutoConnect = 'mc_auto_connect',\n  Login = 'mc_login',\n  EncryptV1 = 'magic_auth_encrypt_v1',\n  DecryptV1 = 'magic_auth_decrypt_v1',\n  ShowNFTs = 'magic_show_nfts',\n  ShowOnRamp = 'magic_show_fiat_onramp',\n  ShowSendTokensUI = 'magic_show_send_tokens_ui',\n  ShowAddress = 'magic_show_address',\n  ShowBalances = 'magic_show_balances',\n  SendGaslessTransaction = 'eth_sendGaslessTransaction',\n  RevealPK = 'magic_reveal_key',\n  EnableMFA = 'magic_auth_enable_mfa_flow',\n  DisableMFA = 'magic_auth_disable_mfa_flow',\n}\n\n// Methods to not route if connected to third party wallet\nexport const routeToMagicMethods = [\n  MagicPayloadMethod.IntermediaryEvent,\n  MagicPayloadMethod.NFTCheckout,\n  MagicPayloadMethod.Login,\n];\n","import { JsonRpcResponsePayload, JsonRpcError, JsonRpcRequestPayload } from './json-rpc-types';\n\nexport enum MagicIncomingWindowMessage {\n  MAGIC_HANDLE_RESPONSE = 'MAGIC_HANDLE_RESPONSE',\n  MAGIC_OVERLAY_READY = 'MAGIC_OVERLAY_READY',\n  MAGIC_SHOW_OVERLAY = 'MAGIC_SHOW_OVERLAY',\n  MAGIC_HIDE_OVERLAY = 'MAGIC_HIDE_OVERLAY',\n  MAGIC_HANDLE_EVENT = 'MAGIC_HANDLE_EVENT',\n  MAGIC_MG_BOX_SEND_RECEIPT = 'MAGIC_MG_BOX_SEND_RECEIPT',\n  MAGIC_SEND_PRODUCT_ANNOUNCEMENT = 'MAGIC_SEND_PRODUCT_ANNOUNCEMENT',\n  MAGIC_PONG = 'MAGIC_PONG',\n  MAGIC_POPUP_RESPONSE = 'MAGIC_POPUP_RESPONSE',\n  MAGIC_POPUP_OAUTH_VERIFY_RESPONSE = 'MAGIC_POPUP_OAUTH_VERIFY_RESPONSE',\n}\n\nexport enum MagicOutgoingWindowMessage {\n  MAGIC_HANDLE_REQUEST = 'MAGIC_HANDLE_REQUEST',\n  MAGIC_PING = 'MAGIC_PING',\n}\n\n/** The shape of responding window message datas from the Magic iframe context. */\nexport interface MagicMessageRequest {\n  msgType: string;\n  payload: JsonRpcRequestPayload | JsonRpcRequestPayload[];\n  rt?: string;\n  jwt?: string;\n  deviceShare?: string;\n}\n\n/** The shape of responding window message datas from the Magic iframe context. */\nexport interface MagicMessageResponse<ResultType = any> {\n  msgType: string;\n  response: Partial<JsonRpcError> & Partial<JsonRpcResponsePayload<ResultType>>;\n  rt?: string;\n  deviceShare?: string;\n}\n\n/** The expected message event returned by the Magic iframe context. */\nexport interface MagicMessageEvent extends Partial<MessageEvent> {\n  data: MagicMessageResponse;\n}\n","export enum DeepLinkPage {\n  UpdateEmail = 'update-email',\n  MFA = 'mfa',\n  Recovery = 'recovery',\n}\n","import { WalletEventOnReceived } from './wallet-types';\n\nexport interface LoginWithMagicLinkConfiguration {\n  /**\n   * The email address of the user attempting to login.\n   */\n  email: string;\n\n  /**\n   * When `true`, a pre-built modal interface will show to the user, directing\n   * them to check their email for the \"magic link\" to complete their\n   * authentication.\n   */\n  showUI?: boolean;\n\n  /**\n   * You can optionally provide a redirect URI that will be followed at the end\n   * of the magic link flow. Don't forget to invoke\n   * `magic.auth.loginWithCredential()` to complete the login from the route you\n   * configure here.\n   */\n  redirectURI?: string;\n\n  /**\n   * Enterprise users with a custom SMTP can create custom email templates\n   * from their dashboard. The default Magic loginWithMagicLink email will be\n   * overriden when a variation is passed here.\n   */\n  overrides?: {\n    variation?: string;\n  };\n\n  /**\n   * The number of seconds until the generated Decenteralized ID token will expire.\n   */\n  lifespan?: number;\n}\n\nexport interface LoginWithSmsConfiguration {\n  /**\n   * Specify the phone number of the user attempting to login.\n   */\n  phoneNumber: string;\n\n  /**\n   * When `true`, a pre-built modal interface will show to the user, directing\n   * them to check their SMS for the one time passcode (OTP) to complete their\n   * authentication.\n   *\n   * When `false`, developers will be able to implement their own custom UI to\n   * continue the SMS OTP flow.\n   */\n  showUI?: boolean;\n\n  /*\n   * The number of seconds until the generated Decenteralized ID token will expire.\n   */\n  lifespan?: number;\n}\nexport interface LoginWithEmailOTPConfiguration {\n  /**\n   * Specify the email address of the user attempting to login.\n   */\n  email: string;\n\n  /**\n   * When `true`, a pre-built modal interface will show to the user, directing\n   * them to check their email for the one time passcode (OTP) to complete their\n   * authentication.\n   *\n   * When `false`, developers will be able to implement their own custom UI to\n   * continue the email OTP flow.\n   */\n  showUI?: boolean;\n\n  /**\n   * Device Unrecognized UI will enforce showing up to secure user's login\n   *\n   * When set to true (default), an improved device recognition UI will be displayed to the user,\n   * prompting them to verify their login by checking their email for device approval. This feature\n   * enhances authentication security.\n   *\n   * This param will only be affect if showUI is false. When set to false,\n   * developers have the flexibility to implement their own customized UI to\n   * handle device check events, providing a more tailored user experience.\n   */\n  deviceCheckUI?: boolean;\n\n  /**\n   * Enterprise users with a custom SMTP can create custom email templates\n   * from their dashboard. The default Magic loginWithOTP email will be\n   * overriden when a variation is passed here.\n   */\n  overrides?: {\n    variation?: string;\n  };\n\n  /**\n   * The number of seconds until the generated Decenteralized ID token will expire.\n   */\n  lifespan?: number;\n}\n\nexport interface LoginWithCredentialConfiguration {\n  /**\n   * A credential token or a valid query string (prefixed with ? or #)\n   */\n  credentialOrQueryString?: string;\n\n  /**\n   * The number of seconds until the generated Decenteralized ID token will expire.\n   */\n  lifespan?: number;\n}\n\nexport interface EnableMFAConfiguration {\n  /**\n   * When `true`, a pre-built modal interface will show to the user, directing\n   * them to enable MFA usign Google Authenticator app.\n   *\n   * When `false`, developers will be able to implement their own custom UI to\n   * continue the enable MFA flow.\n   */\n  showUI?: boolean;\n}\n\nexport interface DisableMFAConfiguration {\n  /**\n   * When `true`, a pre-built modal interface will show to the user, directing\n   * them to disable MFA.\n   *\n   * When `false`, developers will be able to implement their own custom UI to\n   * continue the disable MFA flow.\n   */\n  showUI?: boolean;\n}\n\n/**\n * Auth Events Enum\n */\nexport enum LoginWithMagicLinkEventEmit {\n  Retry = 'retry',\n}\n\nexport enum LoginWithMagicLinkEventOnReceived {\n  EmailSent = 'email-sent',\n  EmailNotDeliverable = 'email-not-deliverable',\n}\n\nexport enum LoginWithEmailOTPEventEmit {\n  VerifyEmailOtp = 'verify-email-otp',\n  VerifyMFACode = 'verify-mfa-code',\n  LostDevice = 'lost-device',\n  VerifyRecoveryCode = 'verify-recovery-code',\n  Cancel = 'cancel',\n}\n\nexport enum LoginWithSmsOTPEventEmit {\n  VerifySmsOtp = 'verify-sms-otp',\n  Cancel = 'cancel',\n  Retry = 'retry',\n}\n\nexport enum LoginWithSmsOTPEventOnReceived {\n  SmsOTPSent = 'sms-otp-sent',\n  InvalidSmsOtp = 'invalid-sms-otp',\n  ExpiredSmsOtp = 'expired-sms-otp',\n}\n\nexport enum LoginWithEmailOTPEventOnReceived {\n  EmailOTPSent = 'email-otp-sent',\n  InvalidEmailOtp = 'invalid-email-otp',\n  InvalidMfaOtp = 'invalid-mfa-otp',\n  ExpiredEmailOtp = 'expired-email-otp',\n  MfaSentHandle = 'mfa-sent-handle',\n  RecoveryCodeSentHandle = 'recovery-code-sent-handle',\n  InvalidRecoveryCode = 'invalid-recovery-code',\n  RecoveryCodeSuccess = 'recovery-code-success',\n}\n\nexport enum DeviceVerificationEventEmit {\n  Retry = 'device-retry',\n}\n\nexport enum DeviceVerificationEventOnReceived {\n  DeviceApproved = 'device-approved',\n  DeviceNeedsApproval = 'device-needs-approval',\n  DeviceVerificationLinkExpired = 'device-verification-link-expired',\n  DeviceVerificationEmailSent = 'device-verification-email-sent',\n}\n\nexport enum RecencyCheckEventEmit {\n  Retry = 'Recency/auth-factor-retry',\n  Cancel = 'Recency/auth-factor-verification-cancel',\n  VerifyEmailOtp = 'Recency/auth-factor-verify-email-otp',\n  VerifyMFACode = 'Recency/verify-mfa-code',\n}\n\nexport enum RecencyCheckEventOnReceived {\n  PrimaryAuthFactorNeedsVerification = 'Recency/auth-factor-needs-verification',\n  PrimaryAuthFactorVerified = 'Recency/auth-factor-verified',\n  InvalidEmailOtp = 'Recency/auth-factor-invalid-email-otp',\n  EmailExpired = 'Recency/auth-factor-verification-email-expired',\n  EmailSent = 'Recency/auth-factor-verification-email-sent',\n  EmailNotDeliverable = 'Recency/auth-factor-verification-email-not-deliverable',\n}\n\nexport enum UpdateEmailEventEmit {\n  RetryWithNewEmail = 'UpdateEmail/retry-with-new-email',\n  Cancel = 'UpdateEmail/new-email-verification-cancel',\n  VerifyEmailOtp = 'UpdateEmail/new-email-verify-otp',\n}\n\nexport enum UpdateEmailEventOnReceived {\n  NewAuthFactorNeedsVerification = 'UpdateEmail/new-email-needs-verification',\n  EmailUpdated = 'UpdateEmail/email-updated',\n  InvalidEmailOtp = 'UpdateEmail/new-email-invalid-email-otp',\n  EmailExpired = 'UpdateEmail/new-email-verification-email-expired',\n  EmailSent = 'UpdateEmail/new-email-verification-email-sent',\n  EmailNotDeliverable = 'UpdateEmail/new-email-verification-email-not-deliverable',\n  InvalidEmail = 'UpdateEmail/new-email-invalid',\n  EmailAlreadyExists = 'UpdateEmail/new-email-already-exists',\n}\n\nexport enum AuthEventOnReceived {\n  IDTokenCreated = 'Auth/id-token-created',\n}\n\nexport enum FarcasterLoginEventEmit {\n  Cancel = 'Farcaster/cancel',\n}\n\nexport enum EnableMFAEventOnReceived {\n  MFASecretGenerated = 'mfa-secret-generated',\n  InvalidMFAOtp = 'invalid-mfa-otp',\n  MFARecoveryCodes = 'mfa-recovery-codes',\n}\nexport enum EnableMFAEventEmit {\n  VerifyMFACode = 'verify-mfa-code',\n  Cancel = 'cancel-mfa-setup',\n}\n\nexport enum DisableMFAEventOnReceived {\n  MFACodeRequested = 'mfa-code-requested',\n  InvalidMFAOtp = 'invalid-mfa-otp',\n  InvalidRecoveryCode = 'invalid-recovery-code',\n}\n\nexport enum DisableMFAEventEmit {\n  VerifyMFACode = 'verify-mfa-code',\n  LostDevice = 'lost-device',\n  Cancel = 'cancel-mfa-disable',\n}\n\n/**\n * EventHandlers\n */\nexport type LoginWithMagicLinkEventHandlers = {\n  // Event Received\n  [LoginWithMagicLinkEventOnReceived.EmailSent]: () => void;\n  [LoginWithMagicLinkEventOnReceived.EmailNotDeliverable]: () => void;\n\n  // Event sent\n  [LoginWithMagicLinkEventEmit.Retry]: () => void;\n} & DeviceVerificationEventHandlers;\n\nexport type LoginWithSmsOTPEventHandlers = {\n  // Event sent\n  [LoginWithSmsOTPEventEmit.VerifySmsOtp]: (otp: string) => void;\n  [LoginWithSmsOTPEventEmit.Cancel]: () => void;\n  [LoginWithSmsOTPEventEmit.Retry]: () => void;\n\n  // Event received\n  [LoginWithSmsOTPEventOnReceived.SmsOTPSent]: () => void;\n  [LoginWithSmsOTPEventOnReceived.InvalidSmsOtp]: () => void;\n  [LoginWithSmsOTPEventOnReceived.ExpiredSmsOtp]: () => void;\n} & DeviceVerificationEventHandlers;\n\nexport type LoginWithEmailOTPEventHandlers = {\n  // Event Received\n  [LoginWithEmailOTPEventOnReceived.EmailOTPSent]: () => void;\n  [LoginWithEmailOTPEventOnReceived.InvalidEmailOtp]: () => void;\n  [LoginWithEmailOTPEventOnReceived.InvalidMfaOtp]: () => void;\n  [LoginWithEmailOTPEventOnReceived.ExpiredEmailOtp]: () => void;\n  [LoginWithEmailOTPEventOnReceived.MfaSentHandle]: () => void;\n  [LoginWithEmailOTPEventOnReceived.RecoveryCodeSentHandle]: () => void;\n  [LoginWithEmailOTPEventOnReceived.InvalidRecoveryCode]: () => void;\n  [LoginWithEmailOTPEventOnReceived.RecoveryCodeSuccess]: () => void;\n  [AuthEventOnReceived.IDTokenCreated]: (idToken: string) => void;\n  [WalletEventOnReceived.WalletInfoFetched]: () => void;\n\n  // Event sent\n  [LoginWithEmailOTPEventEmit.VerifyEmailOtp]: (otp: string) => void;\n  [LoginWithEmailOTPEventEmit.VerifyMFACode]: (mfa: string) => void;\n  [LoginWithEmailOTPEventEmit.LostDevice]: () => void;\n  [LoginWithEmailOTPEventEmit.VerifyRecoveryCode]: (recoveryCode: string) => void;\n  [LoginWithEmailOTPEventEmit.Cancel]: () => void;\n} & DeviceVerificationEventHandlers;\n\ntype DeviceVerificationEventHandlers = {\n  // Event Received\n  [DeviceVerificationEventOnReceived.DeviceNeedsApproval]: () => void;\n  [DeviceVerificationEventOnReceived.DeviceVerificationEmailSent]: () => void;\n  [DeviceVerificationEventOnReceived.DeviceVerificationLinkExpired]: () => void;\n  [DeviceVerificationEventOnReceived.DeviceApproved]: () => void;\n\n  // Event sent\n  [DeviceVerificationEventEmit.Retry]: () => void;\n};\n\n/**\n * Update Email\n */\n\nexport type RecencyCheckEventHandlers = {\n  [RecencyCheckEventOnReceived.PrimaryAuthFactorNeedsVerification]: () => void;\n  [RecencyCheckEventOnReceived.PrimaryAuthFactorVerified]: () => void;\n  [RecencyCheckEventOnReceived.InvalidEmailOtp]: () => void;\n  [RecencyCheckEventOnReceived.EmailNotDeliverable]: () => void;\n  [RecencyCheckEventOnReceived.EmailExpired]: () => void;\n  [RecencyCheckEventOnReceived.EmailSent]: () => void;\n\n  [RecencyCheckEventEmit.Cancel]: () => void;\n  [RecencyCheckEventEmit.Retry]: () => void;\n  [RecencyCheckEventEmit.VerifyEmailOtp]: (otp: string) => void;\n  [RecencyCheckEventEmit.VerifyMFACode]: (mfa: string) => void;\n};\n\nexport type UpdateEmailEventHandlers = {\n  [UpdateEmailEventOnReceived.NewAuthFactorNeedsVerification]: () => void;\n  [UpdateEmailEventOnReceived.EmailUpdated]: () => void;\n  [UpdateEmailEventOnReceived.InvalidEmailOtp]: () => void;\n  [UpdateEmailEventOnReceived.EmailNotDeliverable]: () => void;\n  [UpdateEmailEventOnReceived.EmailExpired]: () => void;\n  [UpdateEmailEventOnReceived.EmailSent]: () => void;\n  [UpdateEmailEventOnReceived.InvalidEmail]: () => void;\n  [UpdateEmailEventOnReceived.EmailAlreadyExists]: () => void;\n\n  [UpdateEmailEventEmit.Cancel]: () => void;\n  [UpdateEmailEventEmit.RetryWithNewEmail]: (email?: string) => void;\n  [UpdateEmailEventEmit.VerifyEmailOtp]: (otp: string) => void;\n} & RecencyCheckEventHandlers;\n\n/**\n * Enable MFA\n */\n\nexport type EnableMFAEventHandlers = {\n  // Event Received\n  [EnableMFAEventOnReceived.MFASecretGenerated]: ({ QRCode, key }: { QRCode: string; key: string }) => void;\n  [EnableMFAEventOnReceived.InvalidMFAOtp]: ({ errorCode }: { errorCode: string }) => void;\n  [EnableMFAEventOnReceived.MFARecoveryCodes]: ({ recoveryCode }: { recoveryCode: string }) => void;\n\n  // Event sent\n  [EnableMFAEventEmit.VerifyMFACode]: (totp: string) => void;\n  [EnableMFAEventEmit.Cancel]: () => void;\n};\n\n/**\n * Disable MFA\n */\n\nexport type DisableMFAEventHandlers = {\n  // Event Received\n  [DisableMFAEventOnReceived.MFACodeRequested]: () => void;\n  [DisableMFAEventOnReceived.InvalidMFAOtp]: ({ errorCode }: { errorCode: string }) => void;\n  [DisableMFAEventOnReceived.InvalidRecoveryCode]: () => void;\n\n  // Event sent\n  [DisableMFAEventEmit.VerifyMFACode]: (totp: string) => void;\n  [DisableMFAEventEmit.LostDevice]: (recoveryCode: string) => void;\n  [DisableMFAEventEmit.Cancel]: () => void;\n};\n","export type EthNetworkName = 'mainnet' | 'goerli' | 'sepolia';\n\nexport enum EthChainType {\n  Harmony = 'HARMONY',\n}\n\nexport interface CustomNodeConfiguration {\n  rpcUrl: string;\n  chainId?: number;\n  chainType?: EthChainType;\n}\n\nexport type EthNetworkConfiguration = EthNetworkName | CustomNodeConfiguration;\n\nexport type ProviderEnableEvents = {\n  'id-token-created': (params: { idToken: string }) => void;\n};\n","import { RecencyCheckEventHandlers } from './auth-types';\nimport { DeepLinkPage } from '../core/deep-link-pages';\n\nexport interface GetIdTokenConfiguration {\n  /**\n   * The number of seconds until the generated ID token will expire.\n   */\n  lifespan?: number;\n}\n\nexport interface GenerateIdTokenConfiguration extends GetIdTokenConfiguration {\n  /**\n   * An optional piece of data to sign with the token. Note, however, that the\n   * unsigned data _will not_ be encoded in the token, only an encrypted\n   * signature of the data.\n   */\n  attachment?: string;\n}\n\nexport enum UserEventsEmit {\n  ClosedByUser = 'closed-by-user',\n}\n\nexport enum UserEventsOnReceived {\n  ClosedByUser = 'closed-by-user-on-received',\n}\n\nexport interface MagicUserMetadata {\n  issuer: string | null;\n  publicAddress: string | null;\n  email: string | null;\n  phoneNumber: string | null;\n  isMfaEnabled: boolean;\n  recoveryFactors: [RecoveryFactor] | [];\n  walletType: string;\n}\n\nexport enum RecoveryFactorEventOnReceived {\n  EnterNewPhoneNumber = 'enter-new-phone-number',\n  EnterOtpCode = 'enter-otp-code',\n  RecoveryFactorAlreadyExists = 'recovery-factor-already-exists',\n  MalformedPhoneNumber = 'malformed-phone-number',\n  InvalidOtpCode = 'invalid-otp-code',\n}\n\nexport enum RecoveryFactorEventEmit {\n  SendNewPhoneNumber = 'send-new-phone-number',\n  SendOtpCode = 'send-otp-code',\n  Cancel = 'cancel',\n  StartEditPhoneNumber = 'start-edit-phone-number',\n}\n\ntype RecoveryFactor = {\n  type: RecoveryMethodType;\n  value: string;\n};\n\nexport type RecoveryFactorEventHandlers = {\n  // Event Received\n  [RecoveryFactorEventEmit.SendNewPhoneNumber]: (phone_number: string) => void;\n  [RecoveryFactorEventEmit.SendOtpCode]: (otp: string) => void;\n  [RecoveryFactorEventEmit.StartEditPhoneNumber]: () => void;\n  [RecoveryFactorEventEmit.Cancel]: () => void;\n\n  // Event sent\n  [RecoveryFactorEventOnReceived.EnterNewPhoneNumber]: () => void;\n  [RecoveryFactorEventOnReceived.EnterOtpCode]: () => void;\n  [RecoveryFactorEventOnReceived.RecoveryFactorAlreadyExists]: () => void;\n  [RecoveryFactorEventOnReceived.MalformedPhoneNumber]: () => void;\n  [RecoveryFactorEventOnReceived.InvalidOtpCode]: () => void;\n} & RecencyCheckEventHandlers;\n\nexport enum RecoveryMethodType {\n  PhoneNumber = 'phone_number',\n}\n\nexport interface UpdateEmailConfiguration {\n  /**\n   * The new email address to update to\n   */\n  email: string;\n\n  /**\n   * When `true`, a pre-built pending modal interface will\n   * guide the user to check their new, followed by old emails\n   * for confirmation emails.\n   */\n  showUI?: boolean;\n}\n\nexport interface UpdateWebAuthnInfoConfiguration {\n  /**\n   *  WebAuthn info id\n   */\n  id: string;\n\n  /**\n   *  nickname that user attempts to update to the webauth device associate to the id.\n   */\n  nickname: string;\n}\n\nexport interface RecoverAccountConfiguration {\n  /**\n   * The email to recover\n   */\n  email: string;\n  showUI: boolean;\n}\n\nexport interface ShowSettingsConfiguration {\n  /**\n   * deep linking destination\n   */\n  page: DeepLinkPage;\n  showUI?: boolean;\n}\n\nexport enum RecoverAccountEventOnReceived {\n  SmsOtpSent = 'sms-otp-sent',\n  LoginThrottled = 'login-throttled',\n  InvalidSmsOtp = 'invalid-sms-otp',\n  SmsVerified = 'sms-verified',\n  AccountRecovered = 'account-recovered',\n  UpdateEmailRequired = 'update-email-required',\n}\n\nexport enum RecoverAccountEventEmit {\n  Cancel = 'cancel',\n  VerifyOtp = 'verify-otp-code',\n  ResendSms = 'resend-sms-otp',\n  UpdateEmail = 'update-email',\n}\n\nexport type RecoverAccountEventHandlers = {\n  // Event Received\n  [RecoverAccountEventEmit.Cancel]: () => void;\n  [RecoverAccountEventEmit.VerifyOtp]: (otp: string) => void;\n  [RecoverAccountEventEmit.ResendSms]: () => void;\n  [RecoverAccountEventEmit.UpdateEmail]: (email: string) => void;\n\n  // Event sent\n  [RecoverAccountEventOnReceived.SmsOtpSent]: ({ phoneNumber }: { phoneNumber: string }) => void;\n  [RecoverAccountEventOnReceived.LoginThrottled]: (error: string) => void;\n  [RecoverAccountEventOnReceived.InvalidSmsOtp]: ({\n    errorMessage,\n    errorCode,\n  }: {\n    errorMessage: string;\n    errorCode: string;\n  }) => void;\n  [RecoverAccountEventOnReceived.SmsVerified]: () => void;\n  [RecoverAccountEventOnReceived.AccountRecovered]: () => void;\n  [RecoverAccountEventOnReceived.UpdateEmailRequired]: () => void;\n};\n","export type NFTResponseStatus = 'cancelled' | 'pending' | 'processed' | 'declined' | 'expired';\n\nexport type NFTResponse = {\n  status: NFTResponseStatus;\n};\n\nexport interface NFTPurchaseRequest {\n  nft: {\n    name: string;\n    imageUrl: string;\n    blockchainNftId: string;\n    contractAddress: string;\n    network: string;\n    platform: string;\n    type: string;\n  };\n  identityPrefill: {\n    firstName: string;\n    lastName: string;\n    dateOfBirth: string; // YYYY-MM-DD\n    emailAddress: string;\n    phone: string;\n    address: {\n      street1: string;\n      street2: string;\n      city: string;\n      regionCode: string;\n      postalCode: string;\n      countryCode: string;\n    };\n  };\n}\n\nexport type NFTPurchaseResponse = NFTResponse & {\n  errorMessage?: string;\n};\n\nexport interface NFTCheckoutRequest {\n  // given by magic / found in the developer dashboard in future\n  contractId: string;\n  // in contract, if ERC1155… for ERC721, use token ID = 0\n  tokenId: string;\n  name: string;\n  imageUrl: string;\n  quantity?: number; // default is 1\n  walletAddress?: string; // default is user's wallet address\n  // If enabled, the user will be able to pay with crypto. the default is false\n  isCryptoCheckoutEnabled?: boolean;\n  walletProvider?: 'magic' | 'web3modal';\n}\n\nexport type NFTCheckoutResponse = NFTResponse;\n\nexport type NFTCheckoutEvents = {\n  disconnect: () => void;\n  'nft-checkout-initiated': (rawTransaction: string) => void;\n};\n\nexport interface NFTTransferRequest {\n  tokenId: string;\n  contractAddress: string;\n  quantity?: number;\n  recipient?: string;\n}\n\nexport type NFTTransferResponse = NFTResponse;\n\nexport enum NftCheckoutIntermediaryEvents {\n  Success = 'nft-checkout-success',\n  Failure = 'nft-checkout-failure',\n  Initiated = 'nft-checkout-initiated',\n  Disconnect = 'disconnect',\n}\n\nexport type NftCheckoutEventHandler = {\n  [NftCheckoutIntermediaryEvents.Initiated]: (rawTransaction: string) => void;\n  [NftCheckoutIntermediaryEvents.Success]: (signedTransaction: string) => void;\n  [NftCheckoutIntermediaryEvents.Failure]: () => void;\n};\n","export type GasApiResponse = {\n  request_id: string;\n  state: string;\n  success: boolean;\n};\n\nexport type AccessListEntry = { address: string; storageKeys: Array<string> };\n\n/**\n *  An ordered collection of [[AccessList]] entries.\n */\nexport type AccessList = Array<AccessListEntry>;\n\nexport interface GaslessTransactionRequest {\n  /**\n   *  The transaction type.\n   */\n  type?: number;\n\n  /**\n   *  The target of the transaction.\n   */\n  to?: string;\n\n  /**\n   *  The sender of the transaction.\n   */\n  from?: string;\n\n  /**\n   *  The nonce of the transaction, used to prevent replay attacks.\n   */\n\n  nonce?: number;\n\n  /**\n   *  The maximum amount of gas to allow this transaction to consime.\n   */\n  gasLimit?: bigint;\n\n  /**\n   *  The gas price to use for legacy transactions or transactions on\n   *  legacy networks.\n   *\n   *  Most of the time the ``max*FeePerGas`` is preferred.\n   */\n  gasPrice?: bigint;\n\n  /**\n   *  The [[link-eip-1559]] maximum priority fee to pay per gas.\n   */\n  maxPriorityFeePerGas?: bigint;\n\n  /**\n   *  The [[link-eip-1559]] maximum total fee to pay per gas. The actual\n   *  value used is protocol enforced to be the block's base fee.\n   */\n  maxFeePerGas?: bigint;\n\n  /**\n   *  The transaction data.\n   */\n  data?: string;\n\n  /**\n   *  The transaction value (in wei).\n   */\n  value?: bigint;\n\n  /**\n   *  The chain ID for the network this transaction is valid on.\n   */\n  chainId?: bigint;\n\n  /**\n   *  The [[link-eip-2930]] access list. Storage slots included in the access\n   *  list are //warmed// by pre-loading them, so their initial cost to\n   *  fetch is guaranteed, but then each additional access is cheaper.\n   */\n  accessList?: AccessList;\n\n  /**\n   *  A custom object, which can be passed along for network-specific\n   *  values.\n   */\n  customData?: any;\n}\n\nexport enum WalletEventOnReceived {\n  WalletInfoFetched = 'Wallet/wallet-info-fetched',\n}\n","export enum UiEventsEmit {\n  CloseMagicWindow = 'close-magic-window',\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","/* eslint-disable */\n/* istanbul ignore file */\n\n// DO NOT CHANGE THIS FILE.\n//\n// We have to bundle `semver` ourselves due to a long-standing cyclic dependency\n// which causes Rollup to break the `satisfies` function.\n//\n// See:\n//   - https://github.com/magiclabs/magic-js/issues/198\n//   - https://github.com/rollup/plugins/issues/879\n//   - https://github.com/npm/node-semver/issues/318\n//   - https://github.com/npm/node-semver/issues/381\n\nfunction createCommonjsModule(e){const r={exports:{}};return e(r,r.exports),r.exports}const SEMVER_SPEC_VERSION=\"2.0.0\",MAX_LENGTH$2=256,MAX_SAFE_INTEGER$1=Number.MAX_SAFE_INTEGER||9007199254740991,MAX_SAFE_COMPONENT_LENGTH=16,constants={SEMVER_SPEC_VERSION:\"2.0.0\",MAX_LENGTH:256,MAX_SAFE_INTEGER:MAX_SAFE_INTEGER$1,MAX_SAFE_COMPONENT_LENGTH:16},debug=\"object\"==typeof process&&process.env&&process.env.NODE_DEBUG&&/\\bsemver\\b/i.test(process.env.NODE_DEBUG)?(...e)=>console.error(\"SEMVER\",...e):()=>{},debug_1=debug,re_1=createCommonjsModule(function(e,r){const{MAX_SAFE_COMPONENT_LENGTH:t}=constants,s=(r=e.exports={}).re=[],i=r.src=[],o=r.t={};let a=0;const n=(e,r,t)=>{const n=a++;debug_1(n,r),o[e]=n,i[n]=r,s[n]=new RegExp(r,t?\"g\":void 0)};n(\"NUMERICIDENTIFIER\",\"0|[1-9]\\\\d*\"),n(\"NUMERICIDENTIFIERLOOSE\",\"[0-9]+\"),n(\"NONNUMERICIDENTIFIER\",\"\\\\d*[a-zA-Z-][a-zA-Z0-9-]*\"),n(\"MAINVERSION\",`(${i[o.NUMERICIDENTIFIER]})\\\\.`+`(${i[o.NUMERICIDENTIFIER]})\\\\.`+`(${i[o.NUMERICIDENTIFIER]})`),n(\"MAINVERSIONLOOSE\",`(${i[o.NUMERICIDENTIFIERLOOSE]})\\\\.`+`(${i[o.NUMERICIDENTIFIERLOOSE]})\\\\.`+`(${i[o.NUMERICIDENTIFIERLOOSE]})`),n(\"PRERELEASEIDENTIFIER\",`(?:${i[o.NUMERICIDENTIFIER]}|${i[o.NONNUMERICIDENTIFIER]})`),n(\"PRERELEASEIDENTIFIERLOOSE\",`(?:${i[o.NUMERICIDENTIFIERLOOSE]}|${i[o.NONNUMERICIDENTIFIER]})`),n(\"PRERELEASE\",`(?:-(${i[o.PRERELEASEIDENTIFIER]}(?:\\\\.${i[o.PRERELEASEIDENTIFIER]})*))`),n(\"PRERELEASELOOSE\",`(?:-?(${i[o.PRERELEASEIDENTIFIERLOOSE]}(?:\\\\.${i[o.PRERELEASEIDENTIFIERLOOSE]})*))`),n(\"BUILDIDENTIFIER\",\"[0-9A-Za-z-]+\"),n(\"BUILD\",`(?:\\\\+(${i[o.BUILDIDENTIFIER]}(?:\\\\.${i[o.BUILDIDENTIFIER]})*))`),n(\"FULLPLAIN\",`v?${i[o.MAINVERSION]}${i[o.PRERELEASE]}?${i[o.BUILD]}?`),n(\"FULL\",`^${i[o.FULLPLAIN]}$`),n(\"LOOSEPLAIN\",`[v=\\\\s]*${i[o.MAINVERSIONLOOSE]}${i[o.PRERELEASELOOSE]}?${i[o.BUILD]}?`),n(\"LOOSE\",`^${i[o.LOOSEPLAIN]}$`),n(\"GTLT\",\"((?:<|>)?=?)\"),n(\"XRANGEIDENTIFIERLOOSE\",`${i[o.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`),n(\"XRANGEIDENTIFIER\",`${i[o.NUMERICIDENTIFIER]}|x|X|\\\\*`),n(\"XRANGEPLAIN\",`[v=\\\\s]*(${i[o.XRANGEIDENTIFIER]})`+`(?:\\\\.(${i[o.XRANGEIDENTIFIER]})`+`(?:\\\\.(${i[o.XRANGEIDENTIFIER]})`+`(?:${i[o.PRERELEASE]})?${i[o.BUILD]}?`+\")?)?\"),n(\"XRANGEPLAINLOOSE\",`[v=\\\\s]*(${i[o.XRANGEIDENTIFIERLOOSE]})`+`(?:\\\\.(${i[o.XRANGEIDENTIFIERLOOSE]})`+`(?:\\\\.(${i[o.XRANGEIDENTIFIERLOOSE]})`+`(?:${i[o.PRERELEASELOOSE]})?${i[o.BUILD]}?`+\")?)?\"),n(\"XRANGE\",`^${i[o.GTLT]}\\\\s*${i[o.XRANGEPLAIN]}$`),n(\"XRANGELOOSE\",`^${i[o.GTLT]}\\\\s*${i[o.XRANGEPLAINLOOSE]}$`),n(\"COERCE\",`(^|[^\\\\d])(\\\\d{1,${t}})`+`(?:\\\\.(\\\\d{1,${t}}))?`+`(?:\\\\.(\\\\d{1,${t}}))?`+\"(?:$|[^\\\\d])\"),n(\"COERCERTL\",i[o.COERCE],!0),n(\"LONETILDE\",\"(?:~>?)\"),n(\"TILDETRIM\",`(\\\\s*)${i[o.LONETILDE]}\\\\s+`,!0),r.tildeTrimReplace=\"$1~\",n(\"TILDE\",`^${i[o.LONETILDE]}${i[o.XRANGEPLAIN]}$`),n(\"TILDELOOSE\",`^${i[o.LONETILDE]}${i[o.XRANGEPLAINLOOSE]}$`),n(\"LONECARET\",\"(?:\\\\^)\"),n(\"CARETTRIM\",`(\\\\s*)${i[o.LONECARET]}\\\\s+`,!0),r.caretTrimReplace=\"$1^\",n(\"CARET\",`^${i[o.LONECARET]}${i[o.XRANGEPLAIN]}$`),n(\"CARETLOOSE\",`^${i[o.LONECARET]}${i[o.XRANGEPLAINLOOSE]}$`),n(\"COMPARATORLOOSE\",`^${i[o.GTLT]}\\\\s*(${i[o.LOOSEPLAIN]})$|^$`),n(\"COMPARATOR\",`^${i[o.GTLT]}\\\\s*(${i[o.FULLPLAIN]})$|^$`),n(\"COMPARATORTRIM\",`(\\\\s*)${i[o.GTLT]}\\\\s*(${i[o.LOOSEPLAIN]}|${i[o.XRANGEPLAIN]})`,!0),r.comparatorTrimReplace=\"$1$2$3\",n(\"HYPHENRANGE\",`^\\\\s*(${i[o.XRANGEPLAIN]})`+\"\\\\s+-\\\\s+\"+`(${i[o.XRANGEPLAIN]})`+\"\\\\s*$\"),n(\"HYPHENRANGELOOSE\",`^\\\\s*(${i[o.XRANGEPLAINLOOSE]})`+\"\\\\s+-\\\\s+\"+`(${i[o.XRANGEPLAINLOOSE]})`+\"\\\\s*$\"),n(\"STAR\",\"(<|>)?=?\\\\s*\\\\*\"),n(\"GTE0\",\"^\\\\s*>=\\\\s*0.0.0\\\\s*$\"),n(\"GTE0PRE\",\"^\\\\s*>=\\\\s*0.0.0-0\\\\s*$\")}),numeric=/^[0-9]+$/,compareIdentifiers$1=(e,r)=>{const t=numeric.test(e),s=numeric.test(r);return t&&s&&(e=+e,r=+r),e===r?0:t&&!s?-1:s&&!t?1:e<r?-1:1},rcompareIdentifiers=(e,r)=>compareIdentifiers$1(r,e),identifiers={compareIdentifiers:compareIdentifiers$1,rcompareIdentifiers:rcompareIdentifiers},{MAX_LENGTH:MAX_LENGTH$1,MAX_SAFE_INTEGER:MAX_SAFE_INTEGER}=constants,{re:re$4,t:t$4}=re_1,{compareIdentifiers:compareIdentifiers}=identifiers;class SemVer{constructor(e,r){if(r&&\"object\"==typeof r||(r={loose:!!r,includePrerelease:!1}),e instanceof SemVer){if(e.loose===!!r.loose&&e.includePrerelease===!!r.includePrerelease)return e;e=e.version}else if(\"string\"!=typeof e)throw new TypeError(`Invalid Version: ${e}`);if(e.length>MAX_LENGTH$1)throw new TypeError(`version is longer than ${MAX_LENGTH$1} characters`);debug_1(\"SemVer\",e,r),this.options=r,this.loose=!!r.loose,this.includePrerelease=!!r.includePrerelease;const t=e.trim().match(r.loose?re$4[t$4.LOOSE]:re$4[t$4.FULL]);if(!t)throw new TypeError(`Invalid Version: ${e}`);if(this.raw=e,this.major=+t[1],this.minor=+t[2],this.patch=+t[3],this.major>MAX_SAFE_INTEGER||this.major<0)throw new TypeError(\"Invalid major version\");if(this.minor>MAX_SAFE_INTEGER||this.minor<0)throw new TypeError(\"Invalid minor version\");if(this.patch>MAX_SAFE_INTEGER||this.patch<0)throw new TypeError(\"Invalid patch version\");t[4]?this.prerelease=t[4].split(\".\").map(e=>{if(/^[0-9]+$/.test(e)){const r=+e;if(r>=0&&r<MAX_SAFE_INTEGER)return r}return e}):this.prerelease=[],this.build=t[5]?t[5].split(\".\"):[],this.format()}format(){return this.version=`${this.major}.${this.minor}.${this.patch}`,this.prerelease.length&&(this.version+=`-${this.prerelease.join(\".\")}`),this.version}toString(){return this.version}compare(e){if(debug_1(\"SemVer.compare\",this.version,this.options,e),!(e instanceof SemVer)){if(\"string\"==typeof e&&e===this.version)return 0;e=new SemVer(e,this.options)}return e.version===this.version?0:this.compareMain(e)||this.comparePre(e)}compareMain(e){return e instanceof SemVer||(e=new SemVer(e,this.options)),compareIdentifiers(this.major,e.major)||compareIdentifiers(this.minor,e.minor)||compareIdentifiers(this.patch,e.patch)}comparePre(e){if(e instanceof SemVer||(e=new SemVer(e,this.options)),this.prerelease.length&&!e.prerelease.length)return-1;if(!this.prerelease.length&&e.prerelease.length)return 1;if(!this.prerelease.length&&!e.prerelease.length)return 0;let r=0;do{const t=this.prerelease[r],s=e.prerelease[r];if(debug_1(\"prerelease compare\",r,t,s),void 0===t&&void 0===s)return 0;if(void 0===s)return 1;if(void 0===t)return-1;if(t!==s)return compareIdentifiers(t,s)}while(++r)}compareBuild(e){e instanceof SemVer||(e=new SemVer(e,this.options));let r=0;do{const t=this.build[r],s=e.build[r];if(debug_1(\"prerelease compare\",r,t,s),void 0===t&&void 0===s)return 0;if(void 0===s)return 1;if(void 0===t)return-1;if(t!==s)return compareIdentifiers(t,s)}while(++r)}inc(e,r){switch(e){case\"premajor\":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc(\"pre\",r);break;case\"preminor\":this.prerelease.length=0,this.patch=0,this.minor++,this.inc(\"pre\",r);break;case\"prepatch\":this.prerelease.length=0,this.inc(\"patch\",r),this.inc(\"pre\",r);break;case\"prerelease\":0===this.prerelease.length&&this.inc(\"patch\",r),this.inc(\"pre\",r);break;case\"major\":0===this.minor&&0===this.patch&&0!==this.prerelease.length||this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case\"minor\":0===this.patch&&0!==this.prerelease.length||this.minor++,this.patch=0,this.prerelease=[];break;case\"patch\":0===this.prerelease.length&&this.patch++,this.prerelease=[];break;case\"pre\":if(0===this.prerelease.length)this.prerelease=[0];else{let e=this.prerelease.length;for(;--e>=0;)\"number\"==typeof this.prerelease[e]&&(this.prerelease[e]++,e=-2);-1===e&&this.prerelease.push(0)}r&&(this.prerelease[0]===r?isNaN(this.prerelease[1])&&(this.prerelease=[r,0]):this.prerelease=[r,0]);break;default:throw new Error(`invalid increment argument: ${e}`)}return this.format(),this.raw=this.version,this}}const compare=(e,r,t)=>new SemVer(e,t).compare(new SemVer(r,t)),compare_1=compare,eq=(e,r,t)=>0===compare_1(e,r,t),eq_1=eq,neq=(e,r,t)=>0!==compare_1(e,r,t),neq_1=neq,gt=(e,r,t)=>compare_1(e,r,t)>0,gt_1=gt,gte=(e,r,t)=>compare_1(e,r,t)>=0,gte_1=gte,lt=(e,r,t)=>compare_1(e,r,t)<0,lt_1=lt,lte=(e,r,t)=>compare_1(e,r,t)<=0,lte_1=lte,cmp=(e,r,t,s)=>{switch(r){case\"===\":return\"object\"==typeof e&&(e=e.version),\"object\"==typeof t&&(t=t.version),e===t;case\"!==\":return\"object\"==typeof e&&(e=e.version),\"object\"==typeof t&&(t=t.version),e!==t;case\"\":case\"=\":case\"==\":return eq_1(e,t,s);case\"!=\":return neq_1(e,t,s);case\">\":return gt_1(e,t,s);case\">=\":return gte_1(e,t,s);case\"<\":return lt_1(e,t,s);case\"<=\":return lte_1(e,t,s);default:throw new TypeError(`Invalid operator: ${r}`)}},cmp_1=cmp,ANY=Symbol(\"SemVer ANY\");class Comparator{static get ANY(){return ANY}constructor(e,r){if(r&&\"object\"==typeof r||(r={loose:!!r,includePrerelease:!1}),e instanceof Comparator){if(e.loose===!!r.loose)return e;e=e.value}debug_1(\"comparator\",e,r),this.options=r,this.loose=!!r.loose,this.parse(e),this.semver===ANY?this.value=\"\":this.value=this.operator+this.semver.version,debug_1(\"comp\",this)}parse(e){const r=this.options.loose?re$3[t$3.COMPARATORLOOSE]:re$3[t$3.COMPARATOR],t=e.match(r);if(!t)throw new TypeError(`Invalid comparator: ${e}`);this.operator=void 0!==t[1]?t[1]:\"\",\"=\"===this.operator&&(this.operator=\"\"),t[2]?this.semver=new SemVer(t[2],this.options.loose):this.semver=ANY}toString(){return this.value}test(e){if(debug_1(\"Comparator.test\",e,this.options.loose),this.semver===ANY||e===ANY)return!0;if(\"string\"==typeof e)try{e=new SemVer(e,this.options)}catch(e){return!1}return cmp_1(e,this.operator,this.semver,this.options)}intersects(e,r){if(!(e instanceof Comparator))throw new TypeError(\"a Comparator is required\");if(r&&\"object\"==typeof r||(r={loose:!!r,includePrerelease:!1}),\"\"===this.operator)return\"\"===this.value||new Range(e.value,r).test(this.value);if(\"\"===e.operator)return\"\"===e.value||new Range(this.value,r).test(e.semver);const t=!(\">=\"!==this.operator&&\">\"!==this.operator||\">=\"!==e.operator&&\">\"!==e.operator),s=!(\"<=\"!==this.operator&&\"<\"!==this.operator||\"<=\"!==e.operator&&\"<\"!==e.operator),i=this.semver.version===e.semver.version,o=!(\">=\"!==this.operator&&\"<=\"!==this.operator||\">=\"!==e.operator&&\"<=\"!==e.operator),a=cmp_1(this.semver,\"<\",e.semver,r)&&(\">=\"===this.operator||\">\"===this.operator)&&(\"<=\"===e.operator||\"<\"===e.operator),n=cmp_1(this.semver,\">\",e.semver,r)&&(\"<=\"===this.operator||\"<\"===this.operator)&&(\">=\"===e.operator||\">\"===e.operator);return t||s||i&&o||a||n}}const{re:re$3,t:t$3}=re_1;class Range{constructor(e,r){if(r&&\"object\"==typeof r||(r={loose:!!r,includePrerelease:!1}),e instanceof Range)return e.loose===!!r.loose&&e.includePrerelease===!!r.includePrerelease?e:new Range(e.raw,r);if(e instanceof Comparator)return this.raw=e.value,this.set=[[e]],this.format(),this;if(this.options=r,this.loose=!!r.loose,this.includePrerelease=!!r.includePrerelease,this.raw=e,this.set=e.split(/\\s*\\|\\|\\s*/).map(e=>this.parseRange(e.trim())).filter(e=>e.length),!this.set.length)throw new TypeError(`Invalid SemVer Range: ${e}`);this.format()}format(){return this.range=this.set.map(e=>e.join(\" \").trim()).join(\"||\").trim(),this.range}toString(){return this.range}parseRange(e){const{loose:r}=this.options;e=e.trim();const t=r?re$2[t$2.HYPHENRANGELOOSE]:re$2[t$2.HYPHENRANGE];e=e.replace(t,hyphenReplace(this.options.includePrerelease)),debug_1(\"hyphen replace\",e),e=e.replace(re$2[t$2.COMPARATORTRIM],comparatorTrimReplace),debug_1(\"comparator trim\",e,re$2[t$2.COMPARATORTRIM]),e=(e=(e=e.replace(re$2[t$2.TILDETRIM],tildeTrimReplace)).replace(re$2[t$2.CARETTRIM],caretTrimReplace)).split(/\\s+/).join(\" \");const s=r?re$2[t$2.COMPARATORLOOSE]:re$2[t$2.COMPARATOR];return e.split(\" \").map(e=>parseComparator(e,this.options)).join(\" \").split(/\\s+/).map(e=>replaceGTE0(e,this.options)).filter(this.options.loose?e=>!!e.match(s):()=>!0).map(e=>new Comparator(e,this.options))}intersects(e,r){if(!(e instanceof Range))throw new TypeError(\"a Range is required\");return this.set.some(t=>isSatisfiable(t,r)&&e.set.some(e=>isSatisfiable(e,r)&&t.every(t=>e.every(e=>t.intersects(e,r)))))}test(e){if(!e)return!1;if(\"string\"==typeof e)try{e=new SemVer(e,this.options)}catch(e){return!1}for(let r=0;r<this.set.length;r++)if(testSet(this.set[r],e,this.options))return!0;return!1}}const{re:re$2,t:t$2,comparatorTrimReplace:comparatorTrimReplace,tildeTrimReplace:tildeTrimReplace,caretTrimReplace:caretTrimReplace}=re_1,isSatisfiable=(e,r)=>{let t=!0;const s=e.slice();let i=s.pop();for(;t&&s.length;)t=s.every(e=>i.intersects(e,r)),i=s.pop();return t},parseComparator=(e,r)=>(debug_1(\"comp\",e,r),e=replaceCarets(e,r),debug_1(\"caret\",e),e=replaceTildes(e,r),debug_1(\"tildes\",e),e=replaceXRanges(e,r),debug_1(\"xrange\",e),e=replaceStars(e,r),debug_1(\"stars\",e),e),isX=e=>!e||\"x\"===e.toLowerCase()||\"*\"===e,replaceTildes=(e,r)=>e.trim().split(/\\s+/).map(e=>replaceTilde(e,r)).join(\" \"),replaceTilde=(e,r)=>{const t=r.loose?re$2[t$2.TILDELOOSE]:re$2[t$2.TILDE];return e.replace(t,(r,t,s,i,o)=>{let a;return debug_1(\"tilde\",e,r,t,s,i,o),isX(t)?a=\"\":isX(s)?a=`>=${t}.0.0 <${+t+1}.0.0-0`:isX(i)?a=`>=${t}.${s}.0 <${t}.${+s+1}.0-0`:o?(debug_1(\"replaceTilde pr\",o),a=`>=${t}.${s}.${i}-${o} <${t}.${+s+1}.0-0`):a=`>=${t}.${s}.${i} <${t}.${+s+1}.0-0`,debug_1(\"tilde return\",a),a})},replaceCarets=(e,r)=>e.trim().split(/\\s+/).map(e=>replaceCaret(e,r)).join(\" \"),replaceCaret=(e,r)=>{debug_1(\"caret\",e,r);const t=r.loose?re$2[t$2.CARETLOOSE]:re$2[t$2.CARET],s=r.includePrerelease?\"-0\":\"\";return e.replace(t,(r,t,i,o,a)=>{let n;return debug_1(\"caret\",e,r,t,i,o,a),isX(t)?n=\"\":isX(i)?n=`>=${t}.0.0${s} <${+t+1}.0.0-0`:isX(o)?n=\"0\"===t?`>=${t}.${i}.0${s} <${t}.${+i+1}.0-0`:`>=${t}.${i}.0${s} <${+t+1}.0.0-0`:a?(debug_1(\"replaceCaret pr\",a),n=\"0\"===t?\"0\"===i?`>=${t}.${i}.${o}-${a} <${t}.${i}.${+o+1}-0`:`>=${t}.${i}.${o}-${a} <${t}.${+i+1}.0-0`:`>=${t}.${i}.${o}-${a} <${+t+1}.0.0-0`):(debug_1(\"no pr\"),n=\"0\"===t?\"0\"===i?`>=${t}.${i}.${o}${s} <${t}.${i}.${+o+1}-0`:`>=${t}.${i}.${o}${s} <${t}.${+i+1}.0-0`:`>=${t}.${i}.${o} <${+t+1}.0.0-0`),debug_1(\"caret return\",n),n})},replaceXRanges=(e,r)=>(debug_1(\"replaceXRanges\",e,r),e.split(/\\s+/).map(e=>replaceXRange(e,r)).join(\" \")),replaceXRange=(e,r)=>{e=e.trim();const t=r.loose?re$2[t$2.XRANGELOOSE]:re$2[t$2.XRANGE];return e.replace(t,(t,s,i,o,a,n)=>{debug_1(\"xRange\",e,t,s,i,o,a,n);const E=isX(i),p=E||isX(o),l=p||isX(a),c=l;return\"=\"===s&&c&&(s=\"\"),n=r.includePrerelease?\"-0\":\"\",E?t=\">\"===s||\"<\"===s?\"<0.0.0-0\":\"*\":s&&c?(p&&(o=0),a=0,\">\"===s?(s=\">=\",p?(i=+i+1,o=0,a=0):(o=+o+1,a=0)):\"<=\"===s&&(s=\"<\",p?i=+i+1:o=+o+1),\"<\"===s&&(n=\"-0\"),t=`${s+i}.${o}.${a}${n}`):p?t=`>=${i}.0.0${n} <${+i+1}.0.0-0`:l&&(t=`>=${i}.${o}.0${n} <${i}.${+o+1}.0-0`),debug_1(\"xRange return\",t),t})},replaceStars=(e,r)=>(debug_1(\"replaceStars\",e,r),e.trim().replace(re$2[t$2.STAR],\"\")),replaceGTE0=(e,r)=>(debug_1(\"replaceGTE0\",e,r),e.trim().replace(re$2[r.includePrerelease?t$2.GTE0PRE:t$2.GTE0],\"\")),hyphenReplace=e=>(r,t,s,i,o,a,n,E,p,l,c,$,h)=>`${t=isX(s)?\"\":isX(i)?`>=${s}.0.0${e?\"-0\":\"\"}`:isX(o)?`>=${s}.${i}.0${e?\"-0\":\"\"}`:a?`>=${t}`:`>=${t}${e?\"-0\":\"\"}`} ${E=isX(p)?\"\":isX(l)?`<${+p+1}.0.0-0`:isX(c)?`<${p}.${+l+1}.0-0`:$?`<=${p}.${l}.${c}-${$}`:e?`<${p}.${l}.${+c+1}-0`:`<=${E}`}`.trim(),testSet=(e,r,t)=>{for(let t=0;t<e.length;t++)if(!e[t].test(r))return!1;if(r.prerelease.length&&!t.includePrerelease){for(let t=0;t<e.length;t++)if(debug_1(e[t].semver),e[t].semver!==Comparator.ANY&&e[t].semver.prerelease.length>0){const s=e[t].semver;if(s.major===r.major&&s.minor===r.minor&&s.patch===r.patch)return!0}return!1}return!0};export const satisfies=(e,r,t)=>{try{r=new Range(r,t)}catch(e){return!1}return r.test(e)};const satisfies_1=satisfies,{MAX_LENGTH:MAX_LENGTH}=constants,{re:re$1,t:t$1}=re_1,parse=(e,r)=>{if(r&&\"object\"==typeof r||(r={loose:!!r,includePrerelease:!1}),e instanceof SemVer)return e;if(\"string\"!=typeof e)return null;if(e.length>MAX_LENGTH)return null;if(!(r.loose?re$1[t$1.LOOSE]:re$1[t$1.FULL]).test(e))return null;try{return new SemVer(e,r)}catch(e){return null}},parse_1=parse,{re:re,t:t}=re_1;export const coerce=(e,r)=>{if(e instanceof SemVer)return e;if(\"number\"==typeof e&&(e=String(e)),\"string\"!=typeof e)return null;let s=null;if((r=r||{}).rtl){let r;for(;(r=re[t.COERCERTL].exec(e))&&(!s||s.index+s[0].length!==e.length);)s&&r.index+r[0].length===s.index+s[0].length||(s=r),re[t.COERCERTL].lastIndex=r.index+r[1].length+r[2].length;re[t.COERCERTL].lastIndex=-1}else s=e.match(re[t.COERCE]);return null===s?null:parse_1(`${s[2]}.${s[3]||\"0\"}.${s[4]||\"0\"}`,r)};\n","function percentToByte(p: string) {\n  return String.fromCharCode(parseInt(p.slice(1), 16));\n}\n\nfunction byteToPercent(b: string) {\n  return `%${`00${b.charCodeAt(0).toString(16)}`.slice(-2)}`;\n}\n\n/**\n * Encodes a Base64 string. Safe for UTF-8 characters.\n * Original source is from the `universal-base64` NPM package.\n *\n * @source https://github.com/blakeembrey/universal-base64/blob/master/src/browser.ts\n */\nfunction btoaUTF8(str: string): string {\n  return btoa(encodeURIComponent(str).replace(/%[0-9A-F]{2}/g, percentToByte));\n}\n\n/**\n * Decodes a Base64 string. Safe for UTF-8 characters.\n * Original source is from the `universal-base64` NPM package.\n *\n * @source https://github.com/blakeembrey/universal-base64/blob/master/src/browser.ts\n */\nfunction atobUTF8(str: string): string {\n  return decodeURIComponent(Array.from(atob(str), byteToPercent).join(''));\n}\n\n/**\n * Given a JSON-serializable object, encode as a Base64 string.\n */\nexport function encodeJSON<T>(options: T): string {\n  return btoaUTF8(JSON.stringify(options));\n}\n\n/**\n * Given a Base64 JSON string, decode a JavaScript object.\n */\nexport function decodeJSON<T>(queryString: string): T {\n  return JSON.parse(atobUTF8(queryString));\n}\n","import { JsonRpcError, RPCErrorCode, SDKErrorCode, SDKWarningCode } from '@magic-sdk/types';\nimport { isJsonRpcErrorCode } from '../util/type-guards';\nimport { SDKEnvironment } from './sdk-environment';\nimport { Extension } from '../modules/base-extension';\n\n// --- Error/warning classes\n\n/**\n * This error type represents internal SDK errors. This could be developer\n * mistakes (or Magic's mistakes), or execution errors unrelated to standard\n * JavaScript exceptions.\n */\nexport class MagicSDKError extends Error {\n  __proto__ = Error;\n\n  constructor(public code: SDKErrorCode, public rawMessage: string) {\n    super(`Magic SDK Error: [${code}] ${rawMessage}`);\n    Object.setPrototypeOf(this, MagicSDKError.prototype);\n  }\n}\n\n/**\n * This error type communicates exceptions that occur during execution in the\n * Magic `<iframe>` context.\n */\nexport class MagicRPCError extends Error {\n  __proto__ = Error;\n\n  public code: RPCErrorCode | number;\n  public rawMessage: string;\n  public data: any;\n\n  constructor(sourceError?: JsonRpcError | null) {\n    super();\n\n    const codeNormalized = Number(sourceError?.code);\n    this.rawMessage = sourceError?.message || 'Internal error';\n    this.code = isJsonRpcErrorCode(codeNormalized) ? codeNormalized : RPCErrorCode.InternalError;\n    this.message = `Magic RPC Error: [${this.code}] ${this.rawMessage}`;\n    this.data = sourceError?.data || undefined;\n\n    Object.setPrototypeOf(this, MagicRPCError.prototype);\n  }\n}\n\n/**\n * In contrast to `SDKError` objects, this \"warning\" type communicates important\n * context that does not rise to the level of an exception. These should be\n * logged rather than thrown.\n */\nexport class MagicSDKWarning {\n  public message: string;\n\n  constructor(public code: SDKWarningCode, public rawMessage: string) {\n    this.message = `Magic SDK Warning: [${code}] ${rawMessage}`;\n  }\n\n  /**\n   * Logs this warning to the console.\n   */\n  public log() {\n    console.warn(this.message);\n  }\n}\n\n/**\n * This error type is reserved for communicating errors that arise during\n * execution of Magic SDK Extension methods. Compare this to the `SDKError`\n * type, specifically in context of Extensions.\n */\nexport class MagicExtensionError<TData = any> extends Error {\n  __proto__ = Error;\n\n  constructor(ext: Extension<string>, public code: string | number, public rawMessage: string, public data: TData) {\n    super(`Magic Extension Error (${ext.name}): [${code}] ${rawMessage}`);\n    Object.setPrototypeOf(this, MagicExtensionError.prototype);\n  }\n}\n\n/**\n * In contrast to `MagicExtensionError` objects, this \"warning\" type\n * communicates important context that does not rise to the level of an\n * exception. These should be logged rather than thrown.\n */\nexport class MagicExtensionWarning {\n  public message: string;\n\n  constructor(ext: Extension<string>, public code: string | number, public rawMessage: string) {\n    this.message = `Magic Extension Warning (${ext.name}): [${code}] ${rawMessage}`;\n  }\n\n  /**\n   * Logs this warning to the console.\n   */\n  public log() {\n    console.warn(this.message);\n  }\n}\n\n// --- SDK error factories\n\nexport function createMissingApiKeyError() {\n  return new MagicSDKError(\n    SDKErrorCode.MissingApiKey,\n    'Please provide an API key that you acquired from the Magic developer dashboard.',\n  );\n}\n\nexport function createModalNotReadyError() {\n  return new MagicSDKError(SDKErrorCode.ModalNotReady, 'Modal is not ready.');\n}\n\nexport function createMalformedResponseError() {\n  return new MagicSDKError(SDKErrorCode.MalformedResponse, 'Response from the Magic iframe is malformed.');\n}\n\nexport function createExtensionNotInitializedError(member: string) {\n  return new MagicSDKError(\n    SDKErrorCode.ExtensionNotInitialized,\n    `Extensions must be initialized with a Magic SDK instance before \\`Extension.${member}\\` can be accessed. Do not invoke \\`Extension.${member}\\` inside an extension constructor.`,\n  );\n}\n\nexport function createIncompatibleExtensionsError(extensions: Extension<string>[]) {\n  let msg = `Some extensions are incompatible with \\`${SDKEnvironment.sdkName}@${SDKEnvironment.version}\\`:`;\n\n  extensions\n    .filter((ext) => typeof ext.compat !== 'undefined' && ext.compat !== null)\n    .forEach((ext) => {\n      const compat = ext.compat![SDKEnvironment.sdkName];\n\n      /* istanbul ignore else */\n      if (typeof compat === 'string') {\n        msg += `\\n  - Extension \\`${ext.name}\\` supports version(s) \\`${compat}\\``;\n      } else if (!compat) {\n        msg += `\\n  - Extension \\`${ext.name}\\` does not support ${SDKEnvironment.platform} environments.`;\n      }\n\n      // Else case is irrelevant here here\n      // (we filter out extensions with missing `compat` field)\n    });\n\n  return new MagicSDKError(SDKErrorCode.IncompatibleExtensions, msg);\n}\n\nexport function createInvalidArgumentError(options: {\n  procedure: string;\n  argument: number;\n  expected: string;\n  received: string;\n}) {\n  /**\n   * Parses the argument index (given by `argument`) to attach the correct ordinal suffix.\n   * (i.e.: 1st, 2nd, 3rd, 4th, etc.)\n   */\n  const ordinalSuffix = (i: number) => {\n    const iAdjusted = i + 1; // Argument is zero-indexed.\n    const j = iAdjusted % 10;\n    const k = iAdjusted % 100;\n    if (j === 1 && k !== 11) return `${iAdjusted}st`;\n    if (j === 2 && k !== 12) return `${iAdjusted}nd`;\n    if (j === 3 && k !== 13) return `${iAdjusted}rd`;\n    return `${iAdjusted}th`;\n  };\n\n  return new MagicSDKError(\n    SDKErrorCode.InvalidArgument,\n    `Invalid ${ordinalSuffix(options.argument)} argument given to \\`${options.procedure}\\`.\\n` +\n      `  Expected: \\`${options.expected}\\`\\n` +\n      `  Received: \\`${options.received}\\``,\n  );\n}\n\n// --- SDK warning factories\n\nexport function createDuplicateIframeWarning() {\n  return new MagicSDKWarning(SDKWarningCode.DuplicateIframe, 'Duplicate iframes found.');\n}\n\nexport function createSynchronousWeb3MethodWarning() {\n  return new MagicSDKWarning(\n    SDKWarningCode.SyncWeb3Method,\n    'Non-async web3 methods are deprecated in web3 > 1.0 and are not supported by the Magic web3 provider. Please use an async method instead.',\n  );\n}\n\nexport function createReactNativeEndpointConfigurationWarning() {\n  return new MagicSDKWarning(\n    SDKWarningCode.ReactNativeEndpointConfiguration,\n    `CUSTOM DOMAINS ARE NOT SUPPORTED WHEN USING MAGIC SDK WITH REACT NATIVE! The \\`endpoint\\` parameter SHOULD NOT be provided. The Magic \\`<iframe>\\` is automatically wrapped by a WebView pointed at \\`${SDKEnvironment.defaultEndpoint}\\`. Changing this default behavior will lead to unexpected results and potentially security-threatening bugs.`,\n  );\n}\n\nexport function createDeprecationWarning(options: {\n  method: string;\n  removalVersions: {\n    [P in\n      | 'magic-sdk'\n      | '@magic-sdk/react-native'\n      | '@magic-sdk/react-native-bare'\n      | '@magic-sdk/react-native-expo']: string;\n  };\n  useInstead?: string;\n}) {\n  const { method, removalVersions, useInstead } = options;\n\n  const removalVersion = removalVersions[SDKEnvironment.sdkName];\n  const useInsteadSuffix = useInstead ? ` Use \\`${useInstead}\\` instead.` : '';\n  const message = `\\`${method}\\` will be removed from \\`${SDKEnvironment.sdkName}\\` in version \\`${removalVersion}\\`.${useInsteadSuffix}`;\n\n  return new MagicSDKWarning(SDKWarningCode.DeprecationNotice, message);\n}\n","/**\n * This file contains our type guards.\n *\n * Type guards are a feature of TypeScript which narrow the type signature of\n * intesection types (types that can be one thing or another).\n *\n * @see\n * https://www.typescriptlang.org/docs/handbook/advanced-types.html#type-guards-and-differentiating-types\n */\n\nimport { JsonRpcRequestPayload, JsonRpcResponsePayload, MagicPayloadMethod, RPCErrorCode } from '@magic-sdk/types';\n\n/**\n * Assert `value` is `undefined`.\n */\nfunction isUndefined(value: any): value is undefined {\n  return typeof value === 'undefined';\n}\n\n/**\n * Assert `value` is `null`.\n */\nfunction isNull(value: any): value is null {\n  return value === null;\n}\n\n/**\n * Assert `value` is `null` or `undefined`.\n */\nfunction isNil(value: any): value is null | undefined {\n  return isNull(value) || isUndefined(value);\n}\n\n/**\n * Assert `value` is a `JsonRpcRequestPayload` object.\n */\nexport function isJsonRpcRequestPayload(value?: JsonRpcRequestPayload): value is JsonRpcRequestPayload {\n  if (isNil(value)) return false;\n  return (\n    !isUndefined(value.jsonrpc) && !isUndefined(value.id) && !isUndefined(value.method) && !isUndefined(value.params)\n  );\n}\n\n/**\n * Assert `value` is a `JsonRpcResponsePayload` object.\n */\nexport function isJsonRpcResponsePayload(value: any): value is JsonRpcResponsePayload {\n  if (isNil(value)) return false;\n  return (\n    !isUndefined(value.jsonrpc) && !isUndefined(value.id) && (!isUndefined(value.result) || !isUndefined(value.error))\n  );\n}\n\n/**\n * Assert `value` is a Magic SDK payload method identifier.\n */\nexport function isMagicPayloadMethod(value?: any): value is MagicPayloadMethod {\n  if (isNil(value)) return false;\n  return typeof value === 'string' && Object.values(MagicPayloadMethod).includes(value as any);\n}\n\n/**\n * Assert `value` is an expected JSON RPC error code.\n */\nexport function isJsonRpcErrorCode(value?: any): value is RPCErrorCode {\n  if (isNil(value)) return false;\n  return typeof value === 'number' && Object.values(RPCErrorCode).includes(value);\n}\n\n/**\n * Assert `value` is an empty, plain object.\n */\nexport function isEmpty(value?: any): value is {} {\n  if (!value) return true;\n\n  for (const key in value) {\n    /* istanbul ignore else */\n    if (Object.hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","import type localForage from 'localforage';\nimport type { ViewController } from './view-controller';\nimport type { SDKBase } from './sdk';\nimport type { WithExtensions } from '../modules/base-extension';\n\ntype ConstructorOf<C> = { new (...args: any[]): C };\n\n/**\n * A structure containing details about the current environment.\n * This is guaranteed to be populated before the SDK is instantiated.\n */\nexport interface SDKEnvironment {\n  sdkName: 'magic-sdk' | '@magic-sdk/react-native' | '@magic-sdk/react-native-bare' | '@magic-sdk/react-native-expo';\n  version: string;\n  platform: 'web' | 'react-native';\n  defaultEndpoint: string;\n  ViewController: ConstructorOf<ViewController>;\n  configureStorage: () => Promise<typeof localForage>;\n  bundleId?: string | null;\n}\n\nexport const SDKEnvironment: SDKEnvironment = {} as any;\n\nexport function createSDK<SDK extends SDKBase>(\n  SDKBaseCtor: ConstructorOf<SDK>,\n  environment: SDKEnvironment,\n): WithExtensions<SDK> {\n  Object.assign(SDKEnvironment, environment);\n  return SDKBaseCtor as any;\n}\n\nexport const sdkNameToEnvName = {\n  'magic-sdk': 'magic-sdk' as const,\n  '@magic-sdk/react-native': 'magic-sdk-rn' as const,\n  '@magic-sdk/react-native-bare': 'magic-sdk-rn-bare' as const,\n  '@magic-sdk/react-native-expo': 'magic-sdk-rn-expo' as const,\n};\n","import {\n  MagicPayloadMethod,\n  LoginWithMagicLinkConfiguration,\n  LoginWithSmsConfiguration,\n  LoginWithEmailOTPConfiguration,\n  LoginWithEmailOTPEventHandlers,\n  LoginWithMagicLinkEventHandlers,\n  UpdateEmailConfiguration,\n  DeviceVerificationEventEmit,\n  LoginWithEmailOTPEventEmit,\n  UpdateEmailEventHandlers,\n  UpdateEmailEventEmit,\n  RecencyCheckEventEmit,\n  LoginWithSmsOTPEventEmit,\n  LoginWithSmsOTPEventHandlers,\n  LoginWithCredentialConfiguration,\n} from '@magic-sdk/types';\nimport { BaseModule } from './base-module';\nimport { createJsonRpcRequestPayload } from '../core/json-rpc';\nimport { SDKEnvironment } from '../core/sdk-environment';\nimport { isMajorVersionAtLeast } from '../util/version-check';\nimport { createDeprecationWarning } from '../core/sdk-exceptions';\n\nexport const ProductConsolidationMethodRemovalVersions = {\n  'magic-sdk': 'v18.0.0',\n  '@magic-sdk/react-native': 'v14.0.0',\n  '@magic-sdk/react-native-bare': 'v19.0.0',\n  '@magic-sdk/react-native-expo': 'v19.0.0',\n};\n\nexport class AuthModule extends BaseModule {\n  /**\n   * Initiate the \"magic link\" login flow for a user. If the flow is successful,\n   * this method will return a Decentralized ID token (with a default lifespan\n   * of 15 minutes).\n   */\n  public loginWithMagicLink(configuration: LoginWithMagicLinkConfiguration) {\n    const isRNMobilePackage =\n      SDKEnvironment.sdkName === '@magic-sdk/react-native' ||\n      SDKEnvironment.sdkName === '@magic-sdk/react-native-bare' ||\n      SDKEnvironment.sdkName === '@magic-sdk/react-native-expo';\n\n    // RN SDK major version is greater than or equal to v19\n    if (isRNMobilePackage && isMajorVersionAtLeast(SDKEnvironment.version, 19)) {\n      throw new Error(\n        'loginWithMagicLink() is deprecated for this package, please utlize a passcode method like loginWithSMS or loginWithEmailOTP instead.',\n      );\n    } else if (isRNMobilePackage) {\n      // RN SDK major version is less than v19\n      createDeprecationWarning({\n        method: 'auth.loginWithMagicLink()',\n        removalVersions: ProductConsolidationMethodRemovalVersions,\n        useInstead: 'auth.loginWithEmailOTP()',\n      }).log();\n    }\n\n    const { email, showUI = true, redirectURI, overrides, lifespan } = configuration;\n\n    const requestPayload = createJsonRpcRequestPayload(\n      this.sdk.testMode ? MagicPayloadMethod.LoginWithMagicLinkTestMode : MagicPayloadMethod.LoginWithMagicLink,\n      [{ email, showUI, redirectURI, overrides, lifespan }],\n    );\n    return this.request<string | null, LoginWithMagicLinkEventHandlers>(requestPayload);\n  }\n\n  /**\n   * Initiate an SMS login flow for a user. If successful,\n   * this method will return a Decenteralized ID token (with a default lifespan\n   * of 15 minutes)\n   */\n  public loginWithSMS(configuration: LoginWithSmsConfiguration) {\n    const { phoneNumber, showUI = true, lifespan } = configuration;\n    const requestPayload = createJsonRpcRequestPayload(\n      this.sdk.testMode ? MagicPayloadMethod.LoginWithSmsTestMode : MagicPayloadMethod.LoginWithSms,\n      [{ phoneNumber, showUI, lifespan }],\n    );\n\n    const handle = this.request<string | null, LoginWithSmsOTPEventHandlers>(requestPayload);\n\n    if (!showUI && handle) {\n      handle.on(LoginWithSmsOTPEventEmit.VerifySmsOtp, (otp: string) => {\n        this.createIntermediaryEvent(LoginWithSmsOTPEventEmit.VerifySmsOtp, requestPayload.id as string)(otp);\n      });\n\n      handle.on(LoginWithSmsOTPEventEmit.Cancel, () => {\n        this.createIntermediaryEvent(LoginWithSmsOTPEventEmit.Cancel, requestPayload.id as string)();\n      });\n    }\n\n    return handle;\n  }\n\n  /**\n   * Initiate an Email with OTP login flow for a user. If successful,\n   * this method will return a Decenteralized ID token (with a default lifespan\n   * of 15 minutes)\n   */\n  public loginWithEmailOTP(configuration: LoginWithEmailOTPConfiguration) {\n    const { email, showUI, deviceCheckUI, overrides, lifespan } = configuration;\n    const requestPayload = createJsonRpcRequestPayload(\n      this.sdk.testMode ? MagicPayloadMethod.LoginWithEmailOTPTestMode : MagicPayloadMethod.LoginWithEmailOTP,\n      [{ email, showUI, deviceCheckUI, overrides, lifespan }],\n    );\n    const handle = this.request<string | null, LoginWithEmailOTPEventHandlers>(requestPayload);\n    if (!deviceCheckUI && handle) {\n      handle.on(DeviceVerificationEventEmit.Retry, () => {\n        this.createIntermediaryEvent(DeviceVerificationEventEmit.Retry, requestPayload.id as any)();\n      });\n    }\n    if (!showUI && handle) {\n      handle.on(LoginWithEmailOTPEventEmit.VerifyEmailOtp, (otp: string) => {\n        this.createIntermediaryEvent(LoginWithEmailOTPEventEmit.VerifyEmailOtp, requestPayload.id as any)(otp);\n      });\n      handle.on(LoginWithEmailOTPEventEmit.VerifyMFACode, (mfa: string) => {\n        this.createIntermediaryEvent(LoginWithEmailOTPEventEmit.VerifyMFACode, requestPayload.id as string)(mfa);\n      });\n      handle.on(LoginWithEmailOTPEventEmit.LostDevice, () => {\n        this.createIntermediaryEvent(LoginWithEmailOTPEventEmit.LostDevice, requestPayload.id as string)();\n      });\n      handle.on(LoginWithEmailOTPEventEmit.VerifyRecoveryCode, (recoveryCode: string) => {\n        this.createIntermediaryEvent(\n          LoginWithEmailOTPEventEmit.VerifyRecoveryCode,\n          requestPayload.id as string,\n        )(recoveryCode);\n      });\n      handle.on(LoginWithEmailOTPEventEmit.Cancel, () => {\n        this.createIntermediaryEvent(LoginWithEmailOTPEventEmit.Cancel, requestPayload.id as any)();\n      });\n    }\n    return handle;\n  }\n\n  /**\n   * Log a user in with a special one-time-use credential token. This is\n   * currently used during magic link flows with a configured redirect to\n   * hydrate the user session at the end of the flow. If the flow is successful,\n   * this method will return a Decentralized ID token (with a default lifespan\n   * of 15 minutes).\n   *\n   * If no argument is provided, a credential is automatically parsed from\n   * `window.location.search`.\n   */\n  public loginWithCredential(configuration?: LoginWithCredentialConfiguration) {\n    const { credentialOrQueryString, lifespan } = configuration || {};\n    let credentialResolved = credentialOrQueryString ?? '';\n\n    if (!credentialOrQueryString && SDKEnvironment.platform === 'web') {\n      credentialResolved = window.location.search;\n\n      // Remove the query from the redirect callback as a precaution.\n      const urlWithoutQuery = window.location.origin + window.location.pathname;\n      window.history.replaceState(null, '', urlWithoutQuery);\n    }\n\n    const requestPayload = createJsonRpcRequestPayload(\n      this.sdk.testMode ? MagicPayloadMethod.LoginWithCredentialTestMode : MagicPayloadMethod.LoginWithCredential,\n      [credentialResolved, lifespan],\n    );\n\n    return this.request<string | null>(requestPayload);\n  }\n\n  // Custom Auth\n  public setAuthorizationToken(jwt: string) {\n    const requestPayload = createJsonRpcRequestPayload(MagicPayloadMethod.SetAuthorizationToken, [{ jwt }]);\n    return this.request<boolean>(requestPayload);\n  }\n\n  public updateEmailWithUI(configuration: UpdateEmailConfiguration) {\n    const { email, showUI = true } = configuration;\n    const requestPayload = createJsonRpcRequestPayload(\n      this.sdk.testMode ? MagicPayloadMethod.UpdateEmailTestMode : MagicPayloadMethod.UpdateEmail,\n      [{ email, showUI }],\n    );\n\n    const handle = this.request<string | null, UpdateEmailEventHandlers>(requestPayload);\n\n    if (!showUI) {\n      handle.on(RecencyCheckEventEmit.Retry, () => {\n        this.createIntermediaryEvent(RecencyCheckEventEmit.Retry, requestPayload.id as any)();\n      });\n      handle.on(RecencyCheckEventEmit.Cancel, () => {\n        this.createIntermediaryEvent(RecencyCheckEventEmit.Cancel, requestPayload.id as any)();\n      });\n      handle.on(RecencyCheckEventEmit.VerifyEmailOtp, (otp: string) => {\n        this.createIntermediaryEvent(RecencyCheckEventEmit.VerifyEmailOtp, requestPayload.id as string)(otp);\n      });\n      handle.on(RecencyCheckEventEmit.VerifyMFACode, (mfa: string) => {\n        this.createIntermediaryEvent(RecencyCheckEventEmit.VerifyMFACode, requestPayload.id as string)(mfa);\n      });\n      handle.on(UpdateEmailEventEmit.RetryWithNewEmail, (newEmail?) => {\n        this.createIntermediaryEvent(UpdateEmailEventEmit.RetryWithNewEmail, requestPayload.id as any)(newEmail);\n      });\n      handle.on(UpdateEmailEventEmit.Cancel, () => {\n        this.createIntermediaryEvent(UpdateEmailEventEmit.Cancel, requestPayload.id as any)();\n      });\n      handle.on(UpdateEmailEventEmit.VerifyEmailOtp, (otp: string) => {\n        this.createIntermediaryEvent(UpdateEmailEventEmit.VerifyEmailOtp, requestPayload.id as any)(otp);\n      });\n    }\n    return handle;\n  }\n}\n","import {\n  JsonRpcRequestPayload,\n  MagicOutgoingWindowMessage,\n  MagicIncomingWindowMessage,\n  MagicPayloadMethod,\n  IntermediaryEvents,\n  routeToMagicMethods,\n} from '@magic-sdk/types';\nimport { createMalformedResponseError, MagicRPCError } from '../core/sdk-exceptions';\nimport type { SDKBase } from '../core/sdk';\nimport { createJsonRpcRequestPayload, standardizeJsonRpcRequestPayload } from '../core/json-rpc';\nimport { createPromiEvent } from '../util/promise-tools';\nimport type { ViewController } from '../core/view-controller';\nimport type { EventsDefinition } from '../util/events';\n\nexport class BaseModule {\n  constructor(protected sdk: SDKBase) {}\n\n  /**\n   * The `ViewController` for the SDK instance registered to this module.\n   */\n  protected get overlay(): ViewController {\n    return (this.sdk as any).overlay;\n  }\n\n  /**\n   * Emits promisified requests to the Magic `<iframe>` context.\n   */\n  protected request<ResultType = any, Events extends EventsDefinition = void>(payload: Partial<JsonRpcRequestPayload>) {\n    if (this.sdk.thirdPartyWallets.isConnected && !routeToMagicMethods.includes(payload.method as MagicPayloadMethod)) {\n      const promiEvent = createPromiEvent<ResultType, Events>((resolve, reject) => {\n        this.sdk.thirdPartyWallets.requestOverride(payload).then(resolve).catch(reject);\n      });\n      return promiEvent;\n    }\n\n    const responsePromise = this.overlay.post<ResultType>(\n      MagicOutgoingWindowMessage.MAGIC_HANDLE_REQUEST,\n      standardizeJsonRpcRequestPayload(payload),\n    );\n\n    // PromiEvent-ify the response.\n    const promiEvent = createPromiEvent<ResultType, Events>((resolve, reject) => {\n      responsePromise\n        .then(res => {\n          cleanupEvents();\n          if (res.hasError) reject(new MagicRPCError(res.payload.error));\n          else if (res.hasResult) resolve(res.payload.result as ResultType);\n          else throw createMalformedResponseError();\n        })\n        .catch(err => {\n          cleanupEvents();\n          reject(err);\n        });\n    });\n\n    // Listen for events from the `<iframe>` associated with the current payload\n    // and emit those to `PromiEvent` subscribers.\n    const cleanupEvents = this.overlay.on(MagicIncomingWindowMessage.MAGIC_HANDLE_EVENT, evt => {\n      const { response } = evt.data;\n\n      if (response.id === payload.id && response.result?.event) {\n        const { event, params = [] } = response.result;\n        promiEvent.emit(event, ...params);\n      }\n    });\n\n    return promiEvent;\n  }\n\n  // Creates an intermediary event which takes a typed event and a payload ID\n  protected createIntermediaryEvent<T = Function>(eventType: IntermediaryEvents, payloadId: string) {\n    const e = (args: any) => {\n      const res = createJsonRpcRequestPayload(MagicPayloadMethod.IntermediaryEvent, [{ payloadId, eventType, args }]);\n      this.request(res);\n    };\n    return e as unknown as T;\n  }\n}\n","function* createIntGenerator(): Generator<number, number, void> {\n  let index = 0;\n\n  while (true) {\n    /* istanbul ignore next */\n    if (index < Number.MAX_SAFE_INTEGER) yield ++index;\n    else index = 0;\n  }\n}\n\nconst intGenerator = createIntGenerator();\n\n/**\n * Get an integer ID for attaching to a JSON RPC request payload.\n */\nexport function getPayloadId(): number {\n  return intGenerator.next().value;\n}\n","import { JsonRpcRequestPayload, JsonRpcResponsePayload, JsonRpcError } from '@magic-sdk/types';\nimport { isJsonRpcResponsePayload } from '../util/type-guards';\nimport { getPayloadId } from '../util/get-payload-id';\n\nconst payloadPreprocessedSymbol = Symbol('Payload pre-processed by Magic SDK');\n\n/**\n * To avoid \"pre-processing\" a payload more than once (and needlessly\n * incrementing our payload ID generator), we attach a symbol to detect a\n * payloads we've already visited.\n */\nfunction markPayloadAsPreprocessed<T extends Partial<JsonRpcRequestPayload>>(payload: T): T {\n  Object.defineProperty(payload, payloadPreprocessedSymbol, {\n    value: true,\n    enumerable: false,\n  });\n\n  return payload;\n}\n\n/**\n * Returns `true` if the payload has been visited by our \"pre-processing,\" in\n * `standardizeJsonRpcRequestPayload(...)`.\n */\nfunction isPayloadPreprocessed<T extends Partial<JsonRpcRequestPayload>>(payload: T) {\n  return !!(payload as any)[payloadPreprocessedSymbol];\n}\n\n/**\n * Returns a full `JsonRpcRequestPayload` from a potentially incomplete payload\n * object. This method mutates the given `payload` to preserve compatibility\n * with external libraries that perform their own `JsonRpcRequestPayload.id`\n * check to associate responses (such as `web3`).\n *\n * This function is no-op if the payload has already been processed before.\n */\nexport function standardizeJsonRpcRequestPayload(payload: Partial<JsonRpcRequestPayload>) {\n  if (!isPayloadPreprocessed(payload)) {\n    payload.jsonrpc = payload.jsonrpc ?? '2.0';\n    payload.id = getPayloadId();\n    payload.method = payload.method ?? 'noop';\n    payload.params = payload.params ?? [];\n\n    markPayloadAsPreprocessed(payload);\n  }\n\n  return payload as JsonRpcRequestPayload;\n}\n\n/**\n * Build a valid JSON RPC payload for emitting to the Magic SDK iframe relayer.\n */\nexport function createJsonRpcRequestPayload(method: string, params: any[] = []): JsonRpcRequestPayload {\n  return markPayloadAsPreprocessed({\n    params,\n    method,\n    jsonrpc: '2.0',\n    id: getPayloadId(),\n  });\n}\n\n/**\n * Formats and standardizes a JSON RPC 2.0 response from a number of potential\n * sources.\n */\nexport class JsonRpcResponse<ResultType = any> {\n  private readonly _jsonrpc: string;\n  private readonly _id: string | number | null;\n  private _result?: ResultType | null;\n  private _error?: JsonRpcError | null;\n\n  constructor(responsePayload: JsonRpcResponsePayload);\n  constructor(response: JsonRpcResponse<ResultType>);\n  constructor(requestPayload: JsonRpcRequestPayload);\n  constructor(responseOrPayload: JsonRpcResponsePayload | JsonRpcResponse<ResultType> | JsonRpcRequestPayload) {\n    if (responseOrPayload instanceof JsonRpcResponse) {\n      this._jsonrpc = responseOrPayload.payload.jsonrpc;\n      this._id = responseOrPayload.payload.id;\n      this._result = responseOrPayload.payload.result;\n      this._error = responseOrPayload.payload.error;\n    } else if (isJsonRpcResponsePayload(responseOrPayload)) {\n      this._jsonrpc = responseOrPayload.jsonrpc;\n      this._id = responseOrPayload.id;\n      this._result = responseOrPayload.result;\n      this._error = responseOrPayload.error;\n    } else {\n      this._jsonrpc = responseOrPayload.jsonrpc;\n      this._id = responseOrPayload.id;\n      this._result = undefined;\n      this._error = undefined;\n    }\n  }\n\n  public applyError(error?: JsonRpcError | null) {\n    this._error = error;\n    return this;\n  }\n\n  public applyResult(result?: ResultType | null) {\n    this._result = result;\n    return this;\n  }\n\n  public get hasError() {\n    return typeof this._error !== 'undefined' && this._error !== null;\n  }\n\n  public get hasResult() {\n    return typeof this._result !== 'undefined';\n  }\n\n  public get payload(): JsonRpcResponsePayload {\n    return {\n      jsonrpc: this._jsonrpc,\n      id: this._id,\n      result: this._result,\n      error: this._error,\n    };\n  }\n}\n","import { UserEventsEmit, UserEventsOnReceived } from '@magic-sdk/types';\nimport { TypedEmitter, EventsDefinition, createTypedEmitter } from './events';\n\n/**\n * Extends `Promise` with a polymorphic `this` type to accomodate arbitrary\n * `Promise` API extensions.\n */\ninterface ExtendedPromise<T> extends Promise<T> {\n  then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,\n  ): ExtendedPromise<TResult1 | TResult2> & this;\n\n  catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,\n  ): ExtendedPromise<T | TResult> & this;\n\n  finally(onfinally?: (() => void) | undefined | null): ExtendedPromise<T> & this;\n}\n\n/**\n * A `Promise` and `EventEmitter` all in one!\n */\nexport type PromiEvent<TResult, TEvents extends EventsDefinition = void> = ExtendedPromise<TResult> &\n  TypedEmitter<TEvents extends void ? DefaultEvents<TResult> : TEvents & DefaultEvents<TResult>>;\n\n/**\n * Default events attached to every `PromiEvent`.\n */\ntype DefaultEvents<TResult> = {\n  done: (result: TResult) => void;\n  error: (reason: any) => void;\n  settled: () => void;\n  [UserEventsEmit.ClosedByUser]: () => void;\n};\n\n/**\n * A `Promise` executor with can be optionally asynchronous.\n */\ntype AsyncPromiseExecutor<TResult> = (\n  resolve: (value: TResult | PromiseLike<TResult>) => void,\n  reject: (reason?: any) => void,\n) => void | Promise<void>;\n\nconst promiEventBrand = Symbol('isPromiEvent');\n\n/**\n * Returns `true` if the given `value` is a `PromiEvent`.\n */\nexport function isPromiEvent(value: any): value is PromiEvent<any> {\n  return !!value[promiEventBrand];\n}\n\n/**\n * Create a native JavaScript `Promise` overloaded with strongly-typed methods\n * from `EventEmitter`.\n */\nexport function createPromiEvent<TResult, TEvents extends EventsDefinition = void>(\n  executor: AsyncPromiseExecutor<TResult>,\n): PromiEvent<TResult, TEvents extends void ? DefaultEvents<TResult> : TEvents & DefaultEvents<TResult>> {\n  const promise = createPromise(executor);\n  const { createBoundEmitterMethod, createChainingEmitterMethod } = createTypedEmitter<\n    TEvents & DefaultEvents<TResult>\n  >();\n\n  // We save the original `Promise` methods to the following symbols so we can\n  // access them internally.\n  const thenSymbol = Symbol('Promise.then');\n  const catchSymbol = Symbol('Promise.catch');\n  const finallySymbol = Symbol('Promise.finally');\n\n  /**\n   * Ensures the next object in the `PromiEvent` chain is overloaded with\n   * `EventEmitter` methods.\n   */\n  const createChainingPromiseMethod =\n    (method: typeof thenSymbol | typeof catchSymbol | typeof finallySymbol, source: Promise<any>) =>\n    (...args: any[]) => {\n      const nextPromise = (source as any)[method].apply(source, args);\n      return promiEvent(nextPromise);\n    };\n\n  /**\n   * Builds a `PromiEvent` by assigning `EventEmitter` methods to a native\n   * `Promise` object.\n   */\n  const promiEvent = (source: any) => {\n    return Object.assign(source, {\n      [promiEventBrand]: true,\n\n      [thenSymbol]: source[thenSymbol] || source.then,\n      [catchSymbol]: source[catchSymbol] || source.catch,\n      [finallySymbol]: source[finallySymbol] || source.finally,\n\n      then: createChainingPromiseMethod(thenSymbol, source),\n      catch: createChainingPromiseMethod(catchSymbol, source),\n      finally: createChainingPromiseMethod(finallySymbol, source),\n\n      on: createChainingEmitterMethod('on', source),\n      once: createChainingEmitterMethod('once', source),\n      addListener: createChainingEmitterMethod('addListener', source),\n\n      off: createChainingEmitterMethod('off', source),\n      removeListener: createChainingEmitterMethod('removeListener', source),\n      removeAllListeners: createChainingEmitterMethod('removeAllListeners', source),\n\n      emit: createBoundEmitterMethod('emit'),\n      eventNames: createBoundEmitterMethod('eventNames'),\n      listeners: createBoundEmitterMethod('listeners'),\n      listenerCount: createBoundEmitterMethod('listenerCount'),\n    });\n  };\n\n  const result = promiEvent(\n    promise.then(\n      (resolved) => {\n        // Emit default completion events and resolve result.\n        result.emit('done', resolved);\n        result.emit('settled');\n        return resolved;\n      },\n\n      (err) => {\n        // Emit default error events and re-throw.\n        result.emit('error', err);\n        result.emit('settled');\n        throw err;\n      },\n    ),\n  );\n\n  result.on(UserEventsOnReceived.ClosedByUser, () => {\n    result.emit(UserEventsEmit.ClosedByUser);\n  });\n  return result;\n}\n\n/**\n * Creates a `Promise` with an **async executor** that automatically catches\n * errors occurring within the executor. Nesting promises in this way is usually\n * deemed an _anti-pattern_, but it's useful and clean when promisifying the\n * event-based code that's inherent to JSON RPC.\n *\n * So, here we solve the issue of nested promises by ensuring that no errors\n * mistakenly go unhandled!\n */\nexport function createPromise<TResult>(executor: AsyncPromiseExecutor<TResult>) {\n  return new Promise<TResult>((resolve, reject) => {\n    const result = executor(resolve, reject);\n    Promise.resolve(result).catch(reject);\n  });\n}\n","import EventEmitter from 'eventemitter3';\n\nexport type EventsDefinition = { [K in string | symbol]: (...args: any[]) => void } | void;\n\n/**\n * An extension of `EventEmitter` (provided by `eventemitter3`) with an adjusted\n * type interface that supports the unique structure of Magic SDK modules.\n */\nexport class TypedEmitter<Events extends EventsDefinition = void> extends EventEmitter<\n  Events extends void ? string | symbol : Events\n> {}\n\ntype ChainingMethods = 'on' | 'once' | 'addListener' | 'off' | 'removeListener' | 'removeAllListeners';\ntype NonChainingMethods = 'emit' | 'eventNames' | 'listeners' | 'listenerCount';\n\ntype ReplaceReturnType<T extends (...a: any) => any, TNewReturn> = (...a: Parameters<T>) => TNewReturn;\n\n/**\n * Creates a `TypedEmitter` instance and returns helper functions for easily\n * mixing `TypedEmitter` methods into other objects.\n */\nexport function createTypedEmitter<Events extends EventsDefinition = void>() {\n  const emitter = new TypedEmitter<Events>();\n\n  const createChainingEmitterMethod = <T1 extends ChainingMethods, T2>(\n    method: T1,\n    source: T2,\n  ): ReplaceReturnType<TypedEmitter[T1], T2> => {\n    return (...args: any[]) => {\n      (emitter as any)[method].apply(emitter, args);\n      return source;\n    };\n  };\n\n  const createBoundEmitterMethod = <T extends NonChainingMethods>(method: T): TypedEmitter[T] => {\n    return (...args: any[]) => {\n      return (emitter as any)[method].apply(emitter, args);\n    };\n  };\n\n  return {\n    emitter,\n    createChainingEmitterMethod,\n    createBoundEmitterMethod,\n  };\n}\n","export function isMajorVersionAtLeast(version: string, majorVersion: number): boolean {\n  // Split the version string into major, minor, and patch versions\n  const [major] = version.split('.').map(Number);\n\n  // Check if the major version is at least the required major version\n  return major >= majorVersion;\n}\n","import {\n  GetIdTokenConfiguration,\n  MagicPayloadMethod,\n  MagicUserMetadata,\n  GenerateIdTokenConfiguration,\n  UserInfo,\n  RequestUserInfoScope,\n  RecoverAccountConfiguration,\n  ShowSettingsConfiguration,\n  EnableMFAConfiguration,\n  EnableMFAEventEmit,\n  EnableMFAEventHandlers,\n  DisableMFAConfiguration,\n  DisableMFAEventHandlers,\n  DisableMFAEventEmit,\n  RecencyCheckEventEmit,\n  RecoveryFactorEventHandlers,\n  RecoveryFactorEventEmit,\n  RecoverAccountEventHandlers,\n  RecoverAccountEventEmit,\n  UpdateEmailEventHandlers,\n  UpdateEmailEventEmit,\n} from '@magic-sdk/types';\nimport { getItem, setItem, removeItem } from '../util/storage';\nimport { BaseModule } from './base-module';\nimport { createJsonRpcRequestPayload } from '../core/json-rpc';\nimport { createDeprecationWarning } from '../core/sdk-exceptions';\nimport { ProductConsolidationMethodRemovalVersions } from './auth';\nimport { clearDeviceShares } from '../util/device-share-web-crypto';\nimport { createPromiEvent } from '../util';\n\ntype UserLoggedOutCallback = (loggedOut: boolean) => void;\n\nexport class UserModule extends BaseModule {\n  public getIdToken(configuration?: GetIdTokenConfiguration) {\n    const requestPayload = createJsonRpcRequestPayload(\n      this.sdk.testMode ? MagicPayloadMethod.GetIdTokenTestMode : MagicPayloadMethod.GetIdToken,\n      [configuration],\n    );\n    return this.request<string>(requestPayload);\n  }\n\n  public generateIdToken(configuration?: GenerateIdTokenConfiguration) {\n    const requestPayload = createJsonRpcRequestPayload(\n      this.sdk.testMode ? MagicPayloadMethod.GenerateIdTokenTestMode : MagicPayloadMethod.GenerateIdToken,\n      [configuration],\n    );\n    return this.request<string>(requestPayload);\n  }\n\n  public getInfo() {\n    const requestPayload = createJsonRpcRequestPayload(MagicPayloadMethod.GetInfo, []);\n    return this.request<MagicUserMetadata>(requestPayload);\n  }\n\n  public isLoggedIn() {\n    return createPromiEvent<boolean, any>(async (resolve, reject) => {\n      try {\n        let cachedIsLoggedIn = false;\n        if (this.sdk.useStorageCache) {\n          cachedIsLoggedIn = (await getItem(this.localForageIsLoggedInKey)) === 'true';\n\n          // if isLoggedIn is true on storage, optimistically resolve with true\n          // if it is false, we use `usr.isLoggedIn` as the source of truth.\n          if (cachedIsLoggedIn) {\n            resolve(true);\n          }\n        }\n\n        const requestPayload = createJsonRpcRequestPayload(\n          this.sdk.testMode ? MagicPayloadMethod.IsLoggedInTestMode : MagicPayloadMethod.IsLoggedIn,\n        );\n        const isLoggedInResponse = await this.request<boolean>(requestPayload);\n        if (this.sdk.useStorageCache) {\n          if (isLoggedInResponse) {\n            setItem(this.localForageIsLoggedInKey, true);\n          } else {\n            removeItem(this.localForageIsLoggedInKey);\n          }\n          if (cachedIsLoggedIn && !isLoggedInResponse) {\n            this.emitUserLoggedOut(true);\n          }\n        }\n        resolve(isLoggedInResponse);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  public logout() {\n    removeItem(this.localForageIsLoggedInKey);\n    clearDeviceShares();\n\n    return createPromiEvent<boolean, any>(async (resolve, reject) => {\n      try {\n        const requestPayload = createJsonRpcRequestPayload(\n          this.sdk.testMode ? MagicPayloadMethod.LogoutTestMode : MagicPayloadMethod.Logout,\n        );\n        const response = await this.request<boolean>(requestPayload);\n        if (this.sdk.useStorageCache) {\n          this.emitUserLoggedOut(response);\n        }\n        resolve(response);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  /* Request email address from logged in user */\n  public requestInfoWithUI(scope?: RequestUserInfoScope) {\n    const requestPayload = createJsonRpcRequestPayload(MagicPayloadMethod.RequestUserInfoWithUI, scope ? [scope] : []);\n    return this.request<UserInfo>(requestPayload);\n  }\n\n  public showSettings(configuration?: ShowSettingsConfiguration) {\n    const { showUI = true } = configuration || {};\n    const requestPayload = createJsonRpcRequestPayload(\n      this.sdk.testMode ? MagicPayloadMethod.UserSettingsTestMode : MagicPayloadMethod.UserSettings,\n      [configuration],\n    );\n    const handle = this.request<string | null, RecoveryFactorEventHandlers>(requestPayload);\n    if (!showUI && handle) {\n      handle.on(RecoveryFactorEventEmit.SendNewPhoneNumber, (phone_number: string) => {\n        this.createIntermediaryEvent(\n          RecoveryFactorEventEmit.SendNewPhoneNumber,\n          requestPayload.id as string,\n        )(phone_number);\n      });\n      handle.on(RecoveryFactorEventEmit.SendOtpCode, (otp: string) => {\n        this.createIntermediaryEvent(RecoveryFactorEventEmit.SendOtpCode, requestPayload.id as string)(otp);\n      });\n      handle.on(RecoveryFactorEventEmit.StartEditPhoneNumber, () => {\n        this.createIntermediaryEvent(RecoveryFactorEventEmit.StartEditPhoneNumber, requestPayload.id as string)();\n      });\n      handle.on(RecoveryFactorEventEmit.Cancel, () => {\n        this.createIntermediaryEvent(RecoveryFactorEventEmit.Cancel, requestPayload.id as string)();\n      });\n      handle.on(RecencyCheckEventEmit.VerifyEmailOtp, (otp: string) => {\n        this.createIntermediaryEvent(RecencyCheckEventEmit.VerifyEmailOtp, requestPayload.id as string)(otp);\n      });\n    }\n    return handle;\n  }\n\n  public recoverAccount(configuration: RecoverAccountConfiguration) {\n    const { email, showUI } = configuration;\n    const requestPayload = createJsonRpcRequestPayload(\n      this.sdk.testMode ? MagicPayloadMethod.RecoverAccountTestMode : MagicPayloadMethod.RecoverAccount,\n      [{ email, showUI }],\n    );\n    const handle = this.request<string | boolean | null, RecoverAccountEventHandlers & UpdateEmailEventHandlers>(\n      requestPayload,\n    );\n\n    if (!showUI && handle) {\n      handle.on(RecoverAccountEventEmit.Cancel, () => {\n        this.createIntermediaryEvent(RecoverAccountEventEmit.Cancel, requestPayload.id as string)();\n      });\n      handle.on(RecoverAccountEventEmit.ResendSms, () => {\n        this.createIntermediaryEvent(RecoverAccountEventEmit.ResendSms, requestPayload.id as string)();\n      });\n      handle.on(RecoverAccountEventEmit.VerifyOtp, (otp: string) => {\n        this.createIntermediaryEvent(RecoverAccountEventEmit.VerifyOtp, requestPayload.id as string)(otp);\n      });\n      handle.on(RecoverAccountEventEmit.UpdateEmail, (newEmail: string) => {\n        this.createIntermediaryEvent(RecoverAccountEventEmit.UpdateEmail, requestPayload.id as string)(newEmail);\n      });\n\n      handle.on(UpdateEmailEventEmit.Cancel, () => {\n        this.createIntermediaryEvent(UpdateEmailEventEmit.Cancel, requestPayload.id as string)();\n      });\n      handle.on(UpdateEmailEventEmit.RetryWithNewEmail, (newEmail?) => {\n        this.createIntermediaryEvent(UpdateEmailEventEmit.RetryWithNewEmail, requestPayload.id as string)(newEmail);\n      });\n\n      handle.on(UpdateEmailEventEmit.VerifyEmailOtp, (otp: string) => {\n        this.createIntermediaryEvent(UpdateEmailEventEmit.VerifyEmailOtp, requestPayload.id as string)(otp);\n      });\n    }\n\n    return handle;\n  }\n\n  public revealPrivateKey() {\n    const requestPayload = createJsonRpcRequestPayload(MagicPayloadMethod.RevealPK);\n    return this.request<boolean>(requestPayload);\n  }\n\n  // Deprecating\n  public getMetadata() {\n    createDeprecationWarning({\n      method: 'user.getMetadata()',\n      removalVersions: ProductConsolidationMethodRemovalVersions,\n      useInstead: 'user.getInfo()',\n    }).log();\n    const requestPayload = createJsonRpcRequestPayload(\n      this.sdk.testMode ? MagicPayloadMethod.GetMetadataTestMode : MagicPayloadMethod.GetMetadata,\n    );\n    return this.request<MagicUserMetadata>(requestPayload);\n  }\n\n  public onUserLoggedOut(callback: UserLoggedOutCallback): void {\n    this.userLoggedOutCallbacks.push(callback);\n  }\n\n  public enableMFA(configuration: EnableMFAConfiguration) {\n    const { showUI = true } = configuration;\n    const requestPayload = createJsonRpcRequestPayload(MagicPayloadMethod.EnableMFA, [{ showUI }]);\n    const handle = this.request<string | boolean | null, EnableMFAEventHandlers>(requestPayload);\n\n    if (!showUI && handle) {\n      handle.on(EnableMFAEventEmit.VerifyMFACode, (totp: string) => {\n        this.createIntermediaryEvent(EnableMFAEventEmit.VerifyMFACode, requestPayload.id as string)(totp);\n      });\n\n      handle.on(EnableMFAEventEmit.Cancel, () => {\n        this.createIntermediaryEvent(EnableMFAEventEmit.Cancel, requestPayload.id as string)();\n      });\n    }\n    return handle;\n  }\n\n  public disableMFA(configuration: DisableMFAConfiguration) {\n    const { showUI = true } = configuration;\n\n    const requestPayload = createJsonRpcRequestPayload(MagicPayloadMethod.DisableMFA, [{ showUI }]);\n    const handle = this.request<string | boolean | null, DisableMFAEventHandlers>(requestPayload);\n\n    if (!showUI && handle) {\n      handle.on(DisableMFAEventEmit.VerifyMFACode, (totp: string) => {\n        this.createIntermediaryEvent(DisableMFAEventEmit.VerifyMFACode, requestPayload.id as string)(totp);\n      });\n\n      handle.on(DisableMFAEventEmit.LostDevice, (recoveryCode: string) => {\n        this.createIntermediaryEvent(DisableMFAEventEmit.LostDevice, requestPayload.id as string)(recoveryCode);\n      });\n\n      handle.on(DisableMFAEventEmit.Cancel, () => {\n        this.createIntermediaryEvent(DisableMFAEventEmit.Cancel, requestPayload.id as string)();\n      });\n    }\n    return handle;\n  }\n\n  // Private members\n  private emitUserLoggedOut(loggedOut: boolean): void {\n    this.userLoggedOutCallbacks.forEach((callback) => {\n      callback(loggedOut);\n    });\n  }\n\n  private localForageIsLoggedInKey = 'magic_auth_is_logged_in';\n  private userLoggedOutCallbacks: UserLoggedOutCallback[] = [];\n}\n","import { SDKEnvironment } from '../core/sdk-environment';\n\n/* global  LocalForage LocalForageDbMethods */\nlet lf: LocalForage;\n\n/**\n * Proxies `localforage` methods with strong-typing.\n */\nfunction proxyLocalForageMethod<TMethod extends keyof LocalForageDbMethods>(method: TMethod): LocalForage[TMethod] {\n  return async (...args: any[]) => {\n    /* istanbul ignore else */\n    if (!lf) lf = await SDKEnvironment.configureStorage();\n    await lf.ready();\n    return (lf[method] as any)(...args);\n  };\n}\n\nexport const getItem = proxyLocalForageMethod('getItem');\nexport const setItem = proxyLocalForageMethod('setItem');\nexport const removeItem = proxyLocalForageMethod('removeItem');\nexport const clear = proxyLocalForageMethod('clear');\nexport const length = proxyLocalForageMethod('length');\nexport const key = proxyLocalForageMethod('key');\nexport const keys = proxyLocalForageMethod('keys');\nexport const iterate = proxyLocalForageMethod('iterate');\n","export function uuid() {\n  const u = window.crypto.getRandomValues(new Uint8Array(16));\n\n  // set the version bit to v4\n  u[6] = (u[6] & 0x0f) | 0x40;\n\n  // set the variant bit to \"don't care\" (yes, the RFC\n  // calls it that)\n  u[8] = (u[8] & 0xbf) | 0x80;\n\n  // hex encode them and add the dashes\n  let uid = '';\n  uid += u[0].toString(16);\n  uid += u[1].toString(16);\n  uid += u[2].toString(16);\n  uid += u[3].toString(16);\n  uid += '-';\n\n  uid += u[4].toString(16);\n  uid += u[5].toString(16);\n  uid += '-';\n\n  uid += u[6].toString(16);\n  uid += u[7].toString(16);\n  uid += '-';\n\n  uid += u[8].toString(16);\n  uid += u[9].toString(16);\n  uid += '-';\n\n  uid += u[10].toString(16);\n  uid += u[11].toString(16);\n  uid += u[12].toString(16);\n  uid += u[13].toString(16);\n  uid += u[14].toString(16);\n  uid += u[15].toString(16);\n\n  return uid;\n}\n","import { setItem, getItem, removeItem } from './storage';\nimport { uuid } from './uuid';\n\nexport const STORE_KEY_PRIVATE_KEY = 'STORE_KEY_PRIVATE_KEY';\nexport const STORE_KEY_PUBLIC_JWK = 'STORE_KEY_PUBLIC_JWK';\nconst ALGO_NAME = 'ECDSA';\nconst ALGO_CURVE = 'P-256';\n\nconst EC_GEN_PARAMS: EcKeyGenParams = {\n  name: ALGO_NAME,\n  namedCurve: ALGO_CURVE,\n};\n\nexport function isWebCryptoSupported() {\n  const hasCrypto = typeof window !== 'undefined' && !!(window.crypto as any);\n  const hasSubtleCrypto = hasCrypto && !!(window.crypto.subtle as any);\n\n  return hasCrypto && hasSubtleCrypto;\n}\n\nexport function clearKeys() {\n  removeItem(STORE_KEY_PUBLIC_JWK);\n  removeItem(STORE_KEY_PRIVATE_KEY);\n}\n\nexport async function createJwt() {\n  // will return undefiend is webcrypto is not supported\n  const publicJwk = await getPublicKey();\n\n  if (!publicJwk) {\n    console.info('unable to create public key or webcrypto is unsupported');\n    return undefined;\n  }\n\n  const { subtle } = window.crypto;\n  const privateJwk = await getItem<CryptoKey>(STORE_KEY_PRIVATE_KEY);\n\n  if (!privateJwk || !subtle) {\n    console.info('unable to find private key or webcrypto unsupported');\n    return undefined;\n  }\n\n  const claims = {\n    iat: Math.floor(new Date().getTime() / 1000),\n    jti: uuid(),\n  };\n\n  const headers = {\n    typ: 'dpop+jwt',\n    alg: 'ES256',\n    jwk: publicJwk,\n  };\n\n  const jws = {\n    protected: strToUrlBase64(JSON.stringify(headers)),\n    claims: strToUrlBase64(JSON.stringify(claims)),\n  };\n\n  const data = strToUint8(`${jws.protected}.${jws.claims}`);\n  const sigType = { name: ALGO_NAME, hash: { name: 'SHA-256' } };\n\n  const sig = uint8ToUrlBase64(new Uint8Array(await subtle.sign(sigType, privateJwk, data)));\n  return `${jws.protected}.${jws.claims}.${sig}`;\n}\n\nasync function getPublicKey() {\n  if (!isWebCryptoSupported()) {\n    console.info('webcrypto is not supported');\n    return undefined;\n  }\n\n  if (!(await getItem(STORE_KEY_PUBLIC_JWK))) {\n    await generateWCKP();\n  }\n\n  return getItem(STORE_KEY_PUBLIC_JWK) as JsonWebKey;\n}\n\nasync function generateWCKP() {\n  // to avoid a nasty babel bug we have to hoist this above the await ourselves\n  // https://github.com/rpetrich/babel-plugin-transform-async-to-promises/issues/20\n  const { subtle } = window.crypto;\n  const kp = await subtle.generateKey(\n    EC_GEN_PARAMS,\n    false, // need to export the public key, while keep private key non-extractable\n    ['sign'],\n  );\n\n  const jwkPublicKey = await subtle.exportKey('jwk', kp.publicKey!);\n\n  // persist keys\n  await setItem(STORE_KEY_PRIVATE_KEY, kp.privateKey!);\n  // persist the jwk public key since it needs to be exported anyways\n  await setItem(STORE_KEY_PUBLIC_JWK, jwkPublicKey);\n}\n\nfunction strToUrlBase64(str: string) {\n  return binToUrlBase64(utf8ToBinaryString(str));\n}\n\nfunction strToUint8(str: string) {\n  return new TextEncoder().encode(str);\n}\n\nfunction binToUrlBase64(bin: string) {\n  return btoa(bin).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+/g, '');\n}\n\nfunction utf8ToBinaryString(str: string) {\n  const escstr = encodeURIComponent(str);\n  // replaces any uri escape sequence, such as %0A,\n  // with binary escape, such as 0x0A\n  return escstr.replace(/%([0-9A-F]{2})/g, (_, p1) => String.fromCharCode(parseInt(p1, 16)));\n}\n\nfunction uint8ToUrlBase64(uint8: Uint8Array) {\n  let bin = '';\n  uint8.forEach((code) => {\n    bin += String.fromCharCode(code);\n  });\n  return binToUrlBase64(bin);\n}\n","import { getItem, iterate, removeItem, setItem } from './storage';\nimport { isWebCryptoSupported } from './web-crypto';\n\nexport const DEVICE_SHARE_KEY = 'ds';\nexport const ENCRYPTION_KEY_KEY = 'ek';\nexport const INITIALIZATION_VECTOR_KEY = 'iv';\n\nconst ALGO_NAME = 'AES-GCM'; // for encryption\nconst ALGO_LENGTH = 256;\n\nexport async function clearDeviceShares() {\n  const keysToRemove: string[] = [];\n  await iterate((value, key, iterationNumber) => {\n    if (key.startsWith(`${DEVICE_SHARE_KEY}_`)) {\n      keysToRemove.push(key);\n    }\n  });\n  for (const key of keysToRemove) {\n    await removeItem(key);\n  }\n}\n\nfunction arrayBufferToBase64(buffer: ArrayBuffer) {\n  let binary = '';\n  const bytes = new Uint8Array(buffer);\n  const len = bytes.byteLength;\n  for (let i = 0; i < len; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return window.btoa(binary);\n}\n\nexport function base64ToArrayBuffer(base64: string) {\n  const binaryString = window.atob(base64);\n  const len = binaryString.length;\n  const bytes = new Uint8Array(len);\n  for (let i = 0; i < len; i++) {\n    bytes[i] = binaryString.charCodeAt(i);\n  }\n  return bytes.buffer;\n}\n\nasync function getOrCreateInitVector() {\n  if (!isWebCryptoSupported()) {\n    console.info('webcrypto is not supported');\n    return undefined;\n  }\n  const { crypto } = window;\n  const existingIv = (await getItem(INITIALIZATION_VECTOR_KEY)) as Uint8Array;\n  if (existingIv) {\n    return existingIv;\n  }\n\n  const iv = crypto.getRandomValues(new Uint8Array(12)); // 12 bytes for AES-GCM\n  return iv;\n}\n\nasync function getOrCreateEncryptionKey() {\n  if (!isWebCryptoSupported()) {\n    console.info('webcrypto is not supported');\n    return undefined;\n  }\n  const { subtle } = window.crypto;\n  const existingKey = (await getItem(ENCRYPTION_KEY_KEY)) as CryptoKey;\n  if (existingKey) {\n    return existingKey;\n  }\n\n  const key = await subtle.generateKey(\n    { name: ALGO_NAME, length: ALGO_LENGTH },\n    false, // non-extractable\n    ['encrypt', 'decrypt'],\n  );\n  return key;\n}\n\nexport async function encryptAndPersistDeviceShare(deviceShareBase64: string, networkHash: string): Promise<void> {\n  const iv = await getOrCreateInitVector();\n  const encryptionKey = await getOrCreateEncryptionKey();\n\n  if (!iv || !encryptionKey || !deviceShareBase64) {\n    return;\n  }\n  const decodedDeviceShare = base64ToArrayBuffer(deviceShareBase64);\n\n  const { subtle } = window.crypto;\n\n  const encryptedData = await subtle.encrypt(\n    {\n      name: ALGO_NAME,\n      iv,\n    },\n    encryptionKey,\n    decodedDeviceShare,\n  );\n\n  // The encrypted device share we store is a base64 encoded string representation\n  // of the magic kms encrypted client share encrypted with webcrypto\n  const encryptedDeviceShare = arrayBufferToBase64(encryptedData);\n\n  await setItem(`${DEVICE_SHARE_KEY}_${networkHash}`, encryptedDeviceShare);\n  await setItem(ENCRYPTION_KEY_KEY, encryptionKey);\n  await setItem(INITIALIZATION_VECTOR_KEY, iv);\n}\n\nexport async function getDecryptedDeviceShare(networkHash: string): Promise<string | undefined> {\n  const encryptedDeviceShare = await getItem<string>(`${DEVICE_SHARE_KEY}_${networkHash}`);\n  const iv = (await getItem(INITIALIZATION_VECTOR_KEY)) as Uint8Array; // use existing encryption key and initialization vector\n  const encryptionKey = (await getItem(ENCRYPTION_KEY_KEY)) as CryptoKey;\n\n  if (!iv || !encryptedDeviceShare || !encryptionKey || !isWebCryptoSupported()) {\n    return undefined;\n  }\n\n  const { subtle } = window.crypto;\n  const ab = await subtle.decrypt({ name: ALGO_NAME, iv }, encryptionKey, base64ToArrayBuffer(encryptedDeviceShare));\n\n  return arrayBufferToBase64(ab);\n}\n","/**\n * Builds a `URL` object safely.\n */\nexport function createURL(url: string, base?: string): URL {\n  // Safari raises an error if `undefined` is given to the second argument of\n  // the `URL` constructor.\n  return base ? new URL(url, base) : new URL(url);\n}\n","import {\n  GasApiResponse,\n  MagicPayloadMethod,\n  GaslessTransactionRequest,\n  RequestUserInfoScope,\n  UserInfo,\n  WalletInfo,\n  ConnectWithUIOptions,\n  ConnectWithUiEvents,\n  ShowUIPromiEvents,\n} from '@magic-sdk/types';\nimport { BaseModule } from './base-module';\nimport { createJsonRpcRequestPayload } from '../core/json-rpc';\nimport { createDeprecationWarning } from '../core/sdk-exceptions';\nimport { ProductConsolidationMethodRemovalVersions } from './auth';\nimport { createPromiEvent } from '../util';\nimport { clearDeviceShares } from '../util/device-share-web-crypto';\n\ntype ShowUiConfig = {\n  onramperParams?: { [key: string]: string };\n};\n\nexport class WalletModule extends BaseModule {\n  /* Prompt Magic's Login Form */\n  public connectWithUI(options?: ConnectWithUIOptions) {\n    const promiEvent = createPromiEvent<string[], ConnectWithUiEvents>(async (resolve, reject) => {\n      try {\n        const loginRequestPayload = createJsonRpcRequestPayload(MagicPayloadMethod.Login, [\n          {\n            enabledWallets: this.sdk.thirdPartyWallets.enabledWallets,\n            ...options,\n          },\n        ]);\n\n        const loginRequest = this.request<string[], ConnectWithUiEvents>(loginRequestPayload);\n\n        this.sdk.thirdPartyWallets.eventListeners.forEach(({ event, callback }) => {\n          loginRequest.on(event, () => callback(loginRequestPayload.id as string));\n        });\n\n        loginRequest.on('id-token-created' as any, (params: { idToken: string }) => {\n          promiEvent.emit('id-token-created', params);\n        });\n\n        const result = await loginRequest;\n        if ((result as any).error) reject(result);\n        resolve(result);\n      } catch (error) {\n        reject(error);\n      }\n    });\n    return promiEvent;\n  }\n\n  /* Prompt Magic's Wallet UI (not available for users logged in with third party wallets) */\n  public showUI(config?: ShowUiConfig) {\n    return this.request<boolean, ShowUIPromiEvents>(createJsonRpcRequestPayload(MagicPayloadMethod.ShowUI, [config]));\n  }\n\n  public showAddress() {\n    return this.request<boolean>(createJsonRpcRequestPayload(MagicPayloadMethod.ShowAddress));\n  }\n\n  public showSendTokensUI() {\n    return this.request<boolean>(createJsonRpcRequestPayload(MagicPayloadMethod.ShowSendTokensUI));\n  }\n\n  public showOnRamp() {\n    return this.request<boolean>(createJsonRpcRequestPayload(MagicPayloadMethod.ShowOnRamp));\n  }\n\n  public showNFTs() {\n    return this.request<boolean>(createJsonRpcRequestPayload(MagicPayloadMethod.ShowNFTs));\n  }\n\n  public showBalances() {\n    return this.request<boolean>(createJsonRpcRequestPayload(MagicPayloadMethod.ShowBalances));\n  }\n\n  public sendGaslessTransaction(address: string, transaction: GaslessTransactionRequest) {\n    return this.request<GasApiResponse>(\n      createJsonRpcRequestPayload(MagicPayloadMethod.SendGaslessTransaction, [address, transaction]),\n    );\n  }\n\n  /* Get user info such as the wallet type they are logged in with */\n  // deprecating\n  public getInfo() {\n    createDeprecationWarning({\n      method: 'wallet.getInfo()',\n      removalVersions: ProductConsolidationMethodRemovalVersions,\n      useInstead: 'user.getInfo()',\n    }).log();\n    const requestPayload = createJsonRpcRequestPayload(MagicPayloadMethod.GetInfo, []);\n    return this.request<WalletInfo>(requestPayload);\n  }\n\n  /* Logout user */\n  // deprecating\n  public disconnect() {\n    createDeprecationWarning({\n      method: 'wallet.disconnect()',\n      removalVersions: ProductConsolidationMethodRemovalVersions,\n      useInstead: 'user.logout()',\n    }).log();\n    clearDeviceShares();\n    const requestPayload = createJsonRpcRequestPayload(MagicPayloadMethod.Disconnect);\n    return this.request<boolean>(requestPayload);\n  }\n\n  /* Request email address from logged in user */\n  // deprecating\n  public requestUserInfoWithUI(scope?: RequestUserInfoScope) {\n    createDeprecationWarning({\n      method: 'wallet.requestUserInfoWithUI()',\n      removalVersions: ProductConsolidationMethodRemovalVersions,\n      useInstead: 'user.requestUserInfoWithUI()',\n    }).log();\n    const requestPayload = createJsonRpcRequestPayload(MagicPayloadMethod.RequestUserInfoWithUI, scope ? [scope] : []);\n    return this.request<UserInfo>(requestPayload);\n  }\n}\n","import {\n  JsonRpcRequestPayload,\n  LocalStorageKeys,\n  MagicPayloadMethod,\n  MagicUserMetadata,\n  ThirdPartyWalletEvents,\n} from '@magic-sdk/types';\nimport { BaseModule } from './base-module';\nimport { PromiEvent, createPromiEvent } from '../util';\n\nexport class ThirdPartyWalletsModule extends BaseModule {\n  public eventListeners: { event: ThirdPartyWalletEvents; callback: (payloadId: string) => Promise<void> }[] = [];\n  public enabledWallets: Record<string, boolean> = {};\n  public isConnected = false;\n\n  public resetThirdPartyWalletState() {\n    localStorage.removeItem(LocalStorageKeys.PROVIDER);\n    localStorage.removeItem(LocalStorageKeys.ADDRESS);\n    localStorage.removeItem(LocalStorageKeys.CHAIN_ID);\n    this.isConnected = false;\n  }\n\n  public requestOverride(payload: Partial<JsonRpcRequestPayload>) {\n    // Handle method overrides if login/getInfo/isLoggedIn/logout\n    if (payload.method === MagicPayloadMethod.Login) {\n      this.resetThirdPartyWalletState();\n      return super.request(payload);\n    }\n    if (payload.method === MagicPayloadMethod.GetInfo) {\n      return this.getInfo(payload);\n    }\n    if (payload.method === MagicPayloadMethod.IsLoggedIn) {\n      return this.isLoggedIn(payload);\n    }\n    if (payload.method === MagicPayloadMethod.Logout) {\n      return this.logout(payload);\n    }\n    // Route all other requests to 3pw provider\n    switch (localStorage.getItem(LocalStorageKeys.PROVIDER)) {\n      case 'web3modal':\n        return this.web3modalRequest(payload);\n      // Fallback to default request\n      default:\n        this.resetThirdPartyWalletState();\n        return super.request(payload);\n    }\n  }\n\n  /* Core Method Overrides */\n\n  private isLoggedIn(payload: Partial<JsonRpcRequestPayload>): PromiEvent<boolean> {\n    switch (localStorage.getItem(LocalStorageKeys.PROVIDER)) {\n      case 'web3modal':\n        return this.web3modalIsLoggedIn();\n      default:\n        this.resetThirdPartyWalletState();\n        return super.request(payload);\n    }\n  }\n\n  private getInfo(payload: Partial<JsonRpcRequestPayload>): PromiEvent<MagicUserMetadata> {\n    switch (localStorage.getItem(LocalStorageKeys.PROVIDER)) {\n      case 'web3modal':\n        return this.web3modalGetInfo();\n      default:\n        this.resetThirdPartyWalletState();\n        return super.request(payload);\n    }\n  }\n\n  private logout(payload: Partial<JsonRpcRequestPayload>): PromiEvent<boolean> {\n    const provider = localStorage.getItem(LocalStorageKeys.PROVIDER);\n    this.resetThirdPartyWalletState();\n    switch (provider) {\n      case 'web3modal': {\n        return this.web3modalLogout();\n      }\n      default:\n        return super.request(payload);\n    }\n  }\n\n  /* Web3Modal Methods */\n\n  private web3modalRequest(payload: Partial<JsonRpcRequestPayload>) {\n    return createPromiEvent<unknown>((resolve, reject) => {\n      // @ts-expect-error Property 'web3modal' does not exist on type 'SDKBase'.\n      this.sdk.web3modal.modal.getWalletProvider().request(payload).then(resolve).catch(reject);\n    });\n  }\n\n  private web3modalIsLoggedIn() {\n    return createPromiEvent<boolean>(resolve => {\n      // @ts-expect-error Property 'web3modal' does not exist on type 'SDKBase'.\n      const walletStatus = this.sdk.web3modal.modal.getStatus();\n      if (walletStatus === 'connected') {\n        resolve(true);\n      }\n      if (walletStatus === 'disconnected') {\n        this.resetThirdPartyWalletState();\n        resolve(false);\n      }\n      if (walletStatus === 'reconnecting') {\n        // @ts-expect-error Property 'web3modal' does not exist on type 'SDKBase'.\n        const unsubscribeFromProviderEvents = this.sdk.web3modal.modal.subscribeProvider(({ status }) => {\n          if (status === 'connected') {\n            unsubscribeFromProviderEvents();\n            resolve(true);\n          }\n          if (status === 'disconnected') {\n            unsubscribeFromProviderEvents();\n            this.resetThirdPartyWalletState();\n            resolve(false);\n          }\n        });\n      }\n    });\n  }\n\n  private formatWeb3modalGetInfoResponse() {\n    // @ts-expect-error Property 'web3modal' does not exist on type 'SDKBase'.\n    const walletType = this.sdk.web3modal.modal.getWalletInfo()?.name;\n    // @ts-expect-error Property 'web3modal' does not exist on type 'SDKBase'.\n    const userAddress = this.sdk.web3modal.modal.getAddress();\n    return {\n      publicAddress: userAddress as string,\n      email: null,\n      issuer: `did:ethr:${userAddress}`,\n      phoneNumber: null,\n      isMfaEnabled: false,\n      recoveryFactors: [] as [],\n      walletType: walletType || 'web3modal',\n    };\n  }\n\n  private web3modalGetInfo() {\n    return createPromiEvent<MagicUserMetadata>((resolve, reject) => {\n      // @ts-expect-error Property 'web3modal' does not exist on type 'SDKBase'.\n      const walletStatus = this.sdk.web3modal.modal.getStatus();\n      if (walletStatus === 'connected') {\n        resolve(this.formatWeb3modalGetInfoResponse());\n      }\n\n      if (walletStatus === 'disconnected') {\n        this.resetThirdPartyWalletState();\n        reject('Magic RPC Error: [-32603] Internal error: User denied account access.');\n      }\n\n      if (walletStatus === 'reconnecting') {\n        // @ts-expect-error Property 'web3modal' does not exist on type 'SDKBase'.\n        const unsubscribeFromProviderEvents = this.sdk.web3modal.modal.subscribeProvider(({ status }) => {\n          if (status === 'connected') {\n            unsubscribeFromProviderEvents();\n            resolve(this.formatWeb3modalGetInfoResponse());\n          }\n          if (status === 'disconnected') {\n            unsubscribeFromProviderEvents();\n            this.resetThirdPartyWalletState();\n            reject('Magic RPC Error: [-32603] Internal error: User denied account access.');\n          }\n        });\n      }\n    });\n  }\n\n  private web3modalLogout(): PromiEvent<boolean> {\n    return createPromiEvent<boolean>(async resolve => {\n      try {\n        // @ts-expect-error Property 'web3modal' does not exist on type 'SDKBase'.\n        await this.sdk.web3modal.modal.disconnect();\n      } catch (error) {\n        console.error(error);\n      }\n      resolve(true);\n    });\n  }\n}\n","import {\n  JsonRpcRequestPayload,\n  JsonRpcRequestCallback,\n  MagicOutgoingWindowMessage,\n  JsonRpcBatchRequestCallback,\n  JsonRpcResponsePayload,\n  ProviderEnableEvents,\n  MagicPayloadMethod,\n} from '@magic-sdk/types';\nimport { BaseModule } from './base-module';\nimport { createInvalidArgumentError, MagicRPCError, createSynchronousWeb3MethodWarning } from '../core/sdk-exceptions';\nimport { createJsonRpcRequestPayload, standardizeJsonRpcRequestPayload, JsonRpcResponse } from '../core/json-rpc';\nimport { PromiEvent } from '../util/promise-tools';\nimport { createTypedEmitter, EventsDefinition, TypedEmitter } from '../util/events';\n\nconst { createBoundEmitterMethod, createChainingEmitterMethod } = createTypedEmitter();\n\n/** */\nexport class RPCProviderModule extends BaseModule implements TypedEmitter {\n  // Implements EIP 1193:\n  // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1193.md\n\n  public readonly isMagic = true;\n\n  public sendAsync(payload: Partial<JsonRpcRequestPayload>, onRequestComplete: JsonRpcRequestCallback): void;\n  public sendAsync(payload: Partial<JsonRpcRequestPayload>[], onRequestComplete: JsonRpcBatchRequestCallback): void;\n  public sendAsync(\n    payload: Partial<JsonRpcRequestPayload> | Partial<JsonRpcRequestPayload>[],\n    onRequestComplete: JsonRpcRequestCallback | JsonRpcBatchRequestCallback,\n  ): void;\n\n  public sendAsync(\n    payload: Partial<JsonRpcRequestPayload> | Partial<JsonRpcRequestPayload>[],\n    onRequestComplete: JsonRpcRequestCallback | JsonRpcBatchRequestCallback,\n  ): void {\n    if (!onRequestComplete) {\n      throw createInvalidArgumentError({\n        procedure: 'Magic.rpcProvider.sendAsync',\n        argument: 1,\n        expected: 'function',\n        received: onRequestComplete === null ? 'null' : typeof onRequestComplete,\n      });\n    }\n\n    if (Array.isArray(payload)) {\n      this.overlay\n        .post(\n          MagicOutgoingWindowMessage.MAGIC_HANDLE_REQUEST,\n          payload.map(p => {\n            const standardizedPayload = standardizeJsonRpcRequestPayload(p);\n            this.prefixPayloadMethodForTestMode(standardizedPayload);\n            return standardizedPayload;\n          }),\n        )\n        .then(batchResponse => {\n          (onRequestComplete as JsonRpcBatchRequestCallback)(\n            null,\n            batchResponse.map(response => ({\n              ...response.payload,\n              error: response.hasError ? new MagicRPCError(response.payload.error) : null,\n            })),\n          );\n        });\n    } else {\n      const finalPayload = standardizeJsonRpcRequestPayload(payload);\n      this.prefixPayloadMethodForTestMode(finalPayload);\n      this.overlay.post(MagicOutgoingWindowMessage.MAGIC_HANDLE_REQUEST, finalPayload).then(response => {\n        (onRequestComplete as JsonRpcRequestCallback)(\n          response.hasError ? new MagicRPCError(response.payload.error) : null,\n          response.payload,\n        );\n      });\n    }\n  }\n\n  public send<ResultType = any>(method: string, params?: any[]): PromiEvent<ResultType>;\n  public send(\n    payload: JsonRpcRequestPayload | JsonRpcRequestPayload[],\n    onRequestComplete: JsonRpcRequestCallback,\n  ): void;\n  public send<ResultType>(payload: JsonRpcRequestPayload, none: void): JsonRpcResponsePayload<ResultType>;\n\n  public send<ResultType = any>(\n    payloadOrMethod: string | JsonRpcRequestPayload | JsonRpcRequestPayload[],\n    onRequestCompleteOrParams: JsonRpcRequestCallback | any[] | void,\n  ): PromiEvent<ResultType> | JsonRpcResponsePayload<ResultType> | void {\n    // Case #1\n    // Web3 >= 1.0.0-beta.38 calls `send` with method and parameters.\n    if (typeof payloadOrMethod === 'string') {\n      const payload = createJsonRpcRequestPayload(\n        payloadOrMethod,\n        Array.isArray(onRequestCompleteOrParams) ? onRequestCompleteOrParams : [],\n      );\n      return this.request(payload) as any;\n    }\n\n    // Case #2\n    // Web3 <= 1.0.0-beta.37 uses `send` with a callback for async queries.\n    if (Array.isArray(payloadOrMethod) || !!onRequestCompleteOrParams) {\n      this.sendAsync(payloadOrMethod, onRequestCompleteOrParams as any);\n      return;\n    }\n\n    // Case #3\n    // Legacy synchronous methods (unsupported).\n    const warning = createSynchronousWeb3MethodWarning();\n    warning.log();\n    return new JsonRpcResponse(payloadOrMethod).applyError({\n      code: -32603,\n      message: warning.rawMessage,\n    }).payload;\n  }\n\n  public enable() {\n    const requestPayload = createJsonRpcRequestPayload(MagicPayloadMethod.Login);\n    return this.request<string[], ProviderEnableEvents>(requestPayload);\n  }\n\n  /**\n   * Here, we wrap `BaseModule.request` with an additional check\n   * to determine if the RPC method requires a test-mode prefix.\n   */\n  protected request<ResultType = any, Events extends EventsDefinition = void>(payload: Partial<JsonRpcRequestPayload>) {\n    this.prefixPayloadMethodForTestMode(payload);\n    return super.request<ResultType, Events>(payload);\n  }\n\n  /**\n   * Prefixes Ethereum RPC methods with a `testMode` identifier. This is done so\n   * that Magic's <iframe> can handle signing methods using test-specific keys.\n   */\n  private prefixPayloadMethodForTestMode(payload: Partial<JsonRpcRequestPayload>) {\n    const testModePrefix = 'testMode/eth/';\n\n    // In test mode, we prefix all RPC methods with `test/` so that the\n    // Magic <iframe> can handle them without requiring network calls.\n    if (this.sdk.testMode) {\n      payload.method = `${testModePrefix}${payload.method}`;\n    }\n  }\n\n  public on = createChainingEmitterMethod('on', this);\n  public once = createChainingEmitterMethod('once', this);\n  public addListener = createChainingEmitterMethod('addListener', this);\n\n  public off = createChainingEmitterMethod('off', this);\n  public removeListener = createChainingEmitterMethod('removeListener', this);\n  public removeAllListeners = createChainingEmitterMethod('removeAllListeners', this);\n\n  public emit = createBoundEmitterMethod('emit');\n  public eventNames = createBoundEmitterMethod('eventNames');\n  public listeners = createBoundEmitterMethod('listeners');\n  public listenerCount = createBoundEmitterMethod('listenerCount');\n}\n","import { createJsonRpcRequestPayload, standardizeJsonRpcRequestPayload } from '../core/json-rpc';\nimport { BaseModule } from './base-module';\nimport { SDKBase, MagicSDKAdditionalConfiguration, MagicSDKExtensionsOption } from '../core/sdk';\nimport { createExtensionNotInitializedError, MagicExtensionError, MagicExtensionWarning } from '../core/sdk-exceptions';\nimport { createPromiEvent, encodeJSON, decodeJSON, storage, isPromiEvent } from '../util';\n\ntype AnonymousExtension = 'anonymous extension';\n\ninterface BaseExtension<TName extends string = AnonymousExtension> extends BaseModule {\n  /**\n   * A structure describing the platform and version compatiblity of this\n   * extension.\n   */\n  compat?: {\n    'magic-sdk': boolean | string;\n    '@magic-sdk/react-native': boolean | string;\n    '@magic-sdk/react-native-bare': boolean | string;\n    '@magic-sdk/react-native-expo': boolean | string;\n  };\n}\n\nconst sdkAccessFields = ['request', 'overlay', 'sdk'];\n\n/**\n * From the `BaseExtension`-derived instance, get the prototype\n * chain up to and including the `BaseModule` class.\n */\nfunction getPrototypeChain<T extends BaseExtension<string>>(instance: T) {\n  let currentProto = Object.getPrototypeOf(instance);\n  const protos = [currentProto];\n\n  while (currentProto !== BaseModule.prototype) {\n    currentProto = Object.getPrototypeOf(currentProto);\n    protos.push(currentProto);\n  }\n\n  return protos;\n}\n\nabstract class BaseExtension<TName extends string = AnonymousExtension> extends BaseModule {\n  public abstract readonly name: TName;\n\n  private __sdk_access_field_descriptors__ = new Map<\n    string,\n    { descriptor: PropertyDescriptor; isPrototypeField: boolean }\n  >();\n  private __is_initialized__ = false;\n\n  protected utils = {\n    createPromiEvent,\n    isPromiEvent,\n    encodeJSON,\n    decodeJSON,\n    createJsonRpcRequestPayload,\n    standardizeJsonRpcRequestPayload,\n    storage,\n  };\n\n  constructor() {\n    super(undefined as any);\n\n    // Disallow SDK access before initialization...\n\n    const allSources = [this, ...getPrototypeChain(this)];\n\n    sdkAccessFields.forEach((prop) => {\n      const allDescriptors = allSources.map((source) => Object.getOwnPropertyDescriptor(source, prop));\n      const sourceIndex = allDescriptors.findIndex((x) => !!x);\n      const isPrototypeField = sourceIndex > 0;\n      const descriptor = allDescriptors[sourceIndex];\n\n      /* istanbul ignore else */\n      if (descriptor) {\n        this.__sdk_access_field_descriptors__.set(prop, { descriptor, isPrototypeField });\n\n        Object.defineProperty(this, prop, {\n          configurable: true,\n          get: () => {\n            throw createExtensionNotInitializedError(prop);\n          },\n        });\n      }\n    });\n  }\n\n  /**\n   * Registers a Magic SDK instance with this Extension.\n   *\n   * @internal\n   */\n  public init(sdk: SDKBase) {\n    if (this.__is_initialized__) return;\n\n    // Replace original property descriptors\n    // for SDK access fields post-initialization.\n    sdkAccessFields.forEach((prop) => {\n      /* istanbul ignore else */\n      if (this.__sdk_access_field_descriptors__.has(prop)) {\n        const { descriptor, isPrototypeField } = this.__sdk_access_field_descriptors__.get(prop)!;\n\n        if (isPrototypeField) {\n          // For prototype fields, we just need the `delete` operator so that\n          // the instance will fallback to the prototype chain itself.\n          delete this[prop as keyof this];\n        } else {\n          Object.defineProperty(this, prop, descriptor);\n        }\n      }\n    });\n\n    this.sdk = sdk;\n    this.__is_initialized__ = true;\n  }\n\n  /**\n   * Creates a deprecation warning wrapped with a native Magic SDK warning type.\n   * Best practice is to warn users of upcoming deprecations at least one major\n   * version before the change is implemented. You can use this method to\n   * communicate deprecations in a manner consistent with Magic SDK core code.\n   */\n  protected createDeprecationWarning(options: {\n    method: string;\n    removalVersion: string;\n    useInstead?: string;\n  }): MagicExtensionWarning {\n    const { method, removalVersion, useInstead } = options;\n\n    const useInsteadSuffix = useInstead ? ` Use \\`${useInstead}\\` instead.` : '';\n    const message = `\\`${method}\\` will be removed from this Extension in version \\`${removalVersion}\\`.${useInsteadSuffix}`;\n    return new MagicExtensionWarning(this, 'DEPRECATION_NOTICE', message);\n  }\n\n  /**\n   * Creates a warning wrapped with a native Magic SDK warning type. This\n   * maintains consistency in warning messaging for consumers of Magic SDK and\n   * this Extension.\n   */\n  protected createWarning(code: string | number, message: string): MagicExtensionWarning {\n    return new MagicExtensionWarning(this, code, message);\n  }\n\n  /**\n   * Creates an error wrapped with a native Magic SDK error type. This maintains\n   * consistency in error handling for consumers of Magic SDK and this\n   * Extension.\n   */\n  protected createError<TData = any>(code: string | number, message: string, data: TData): MagicExtensionError<TData> {\n    return new MagicExtensionError<TData>(this, code, message, data);\n  }\n}\n\nabstract class InternalExtension<TName extends string, TConfig extends any = any> extends BaseExtension<TName> {\n  public abstract readonly config: TConfig;\n}\n\n/**\n * A base class representing \"extensions\" to the core Magic JS APIs. Extensions\n * enable new functionality by composing Magic endpoints methods together.\n */\nexport abstract class Extension<TName extends string = AnonymousExtension> extends BaseExtension<TName> {\n  /**\n   * This is a special constructor used to mark \"official\" extensions. These\n   * extensions are designed for special interaction with the Magic iframe using\n   * custom JSON RPC methods, business logic, and global configurations. This is\n   * intended for internal-use only (and provides no useful advantage to\n   * open-source extension developers over the regular `Extension` class).\n   *\n   * @internal\n   */\n  public static Internal = InternalExtension;\n  public static Anonymous: AnonymousExtension = 'anonymous extension';\n}\n\n/**\n * These fields are exposed on the `Extension` type,\n * but should be hidden from the public interface.\n */\ntype HiddenExtensionFields = 'name' | 'init' | 'config' | 'compat';\n\n/**\n * Gets the type contained in an array type.\n */\ntype UnwrapArray<T extends any[]> = T extends Array<infer P> ? P : never;\n\n/**\n * Create a union type of Extension names from an\n * array of Extension types given by `TExt`.\n */\ntype ExtensionNames<TExt extends Extension<string>[]> = UnwrapArray<TExt> extends Extension<infer R> ? R : never;\n\n/**\n * From the literal Extension name type given by `TExtName`,\n * extract a dictionary of Extension types.\n */\ntype GetExtensionFromName<TExt extends Extension<string>[], TExtName extends string> = {\n  [P in TExtName]: Extract<UnwrapArray<TExt>, Extension<TExtName>>;\n}[TExtName];\n\n/**\n * Wraps a Magic SDK constructor with the necessary type\n * information to support a strongly-typed `Extension` interface.\n */\nexport type WithExtensions<SDK extends SDKBase> = {\n  new <TCustomExtName extends string, TExt extends MagicSDKExtensionsOption<TCustomExtName>>(\n    apiKey: string,\n    options?: MagicSDKAdditionalConfiguration<TCustomExtName, TExt>,\n  ): InstanceWithExtensions<SDK, TExt>;\n};\n\nexport type InstanceWithExtensions<SDK extends SDKBase, TExt extends MagicSDKExtensionsOption> = SDK &\n  {\n    [P in Exclude<\n      TExt extends Extension<string>[] ? ExtensionNames<TExt> : keyof TExt,\n      number | AnonymousExtension\n    >]: TExt extends Extension<string>[]\n      ? Omit<GetExtensionFromName<TExt, P>, HiddenExtensionFields>\n      : TExt extends {\n          [P in Exclude<\n            TExt extends Extension<string>[] ? ExtensionNames<TExt> : keyof TExt,\n            number | AnonymousExtension\n          >]: Extension<string>;\n        }\n      ? Omit<TExt[P], HiddenExtensionFields>\n      : never;\n  };\n","import {\n  MagicPayloadMethod,\n  NFTCheckoutRequest,\n  NFTCheckoutResponse,\n  NFTCheckoutEvents,\n  NFTPurchaseRequest,\n  NFTPurchaseResponse,\n  NFTTransferRequest,\n  NFTTransferResponse,\n  NftCheckoutIntermediaryEvents,\n} from '@magic-sdk/types';\nimport { BaseModule } from './base-module';\nimport { createJsonRpcRequestPayload } from '../core/json-rpc';\n\nexport class NFTModule extends BaseModule {\n  /* Start an NFT Purchase flow with Sardine */\n  public purchase(options: NFTPurchaseRequest) {\n    const requestPayload = createJsonRpcRequestPayload(MagicPayloadMethod.NFTPurchase, [options]);\n    return this.request<NFTPurchaseResponse>(requestPayload);\n  }\n\n  /* Start an NFT Checkout flow with Paypal */\n  public checkout(options: NFTCheckoutRequest) {\n    const isThirdPartyWalletConnected = this.sdk.thirdPartyWallets.isConnected;\n\n    const requestPayload = createJsonRpcRequestPayload(MagicPayloadMethod.NFTCheckout, [\n      {\n        ...options,\n        walletProvider: isThirdPartyWalletConnected ? 'web3modal' : 'magic',\n      },\n    ]);\n    const promiEvent = this.request<NFTCheckoutResponse, NFTCheckoutEvents>(requestPayload);\n\n    if (isThirdPartyWalletConnected) {\n      promiEvent.on(NftCheckoutIntermediaryEvents.Initiated, async (rawTransaction) => {\n        try {\n          const hash = await this.request({\n            method: 'eth_sendTransaction',\n            params: [rawTransaction],\n          });\n          this.createIntermediaryEvent(NftCheckoutIntermediaryEvents.Success, requestPayload.id as string)(hash);\n        } catch (error) {\n          this.createIntermediaryEvent(NftCheckoutIntermediaryEvents.Failure, requestPayload.id as string)();\n        }\n      });\n      promiEvent.on(NftCheckoutIntermediaryEvents.Disconnect, () => {\n        this.sdk.thirdPartyWallets.resetThirdPartyWalletState();\n        promiEvent.emit('disconnect');\n      });\n    }\n    return promiEvent;\n  }\n\n  /* Start an NFT Transfer flow */\n  public transfer(options: NFTTransferRequest) {\n    const requestPayload = createJsonRpcRequestPayload(MagicPayloadMethod.NFTTransfer, [options]);\n    return this.request<NFTTransferResponse>(requestPayload);\n  }\n}\n","import { EthNetworkConfiguration, QueryParameters, SupportedLocale } from '@magic-sdk/types';\nimport type { AbstractProvider } from 'web3-core';\nimport { coerce, satisfies } from '../util/semver';\nimport { encodeJSON } from '../util/base64-json';\nimport {\n  createMissingApiKeyError,\n  createReactNativeEndpointConfigurationWarning,\n  createIncompatibleExtensionsError,\n} from './sdk-exceptions';\nimport { AuthModule } from '../modules/auth';\nimport { UserModule } from '../modules/user';\nimport { WalletModule } from '../modules/wallet';\nimport { ThirdPartyWalletsModule } from '../modules/third-party-wallets';\nimport { RPCProviderModule } from '../modules/rpc-provider';\nimport { ViewController } from './view-controller';\nimport { createURL } from '../util/url';\nimport { Extension } from '../modules/base-extension';\nimport { isEmpty } from '../util/type-guards';\nimport { SDKEnvironment, sdkNameToEnvName } from './sdk-environment';\nimport { NFTModule } from '../modules/nft';\n\n/**\n * Checks if the given `ext` is compatible with the platform & version of Magic\n * SDK currently in use.\n */\nfunction checkExtensionCompat(ext: Extension<string>) {\n  if (ext.compat && ext.compat[SDKEnvironment.sdkName] != null) {\n    return typeof ext.compat[SDKEnvironment.sdkName] === 'string'\n      ? satisfies(coerce(SDKEnvironment.version), ext.compat[SDKEnvironment.sdkName] as string)\n      : !!ext.compat[SDKEnvironment.sdkName];\n  }\n\n  // To gracefully support older extensions, we assume\n  // compatibility when the `compat` field is missing.\n  return true;\n}\n\n/**\n * Generates a network hash of the SDK instance for persisting network specific\n * information on multichain setups\n */\nfunction getNetworkHash(apiKey: string, network?: EthNetworkConfiguration, extConfig?: any) {\n  if (!network && !extConfig) {\n    return `${apiKey}_eth_mainnet`;\n  }\n  if (extConfig) {\n    return `${apiKey}_${JSON.stringify(extConfig)}`;\n  }\n  if (network) {\n    if (typeof network === 'string') {\n      return `${apiKey}_eth_${network}`;\n    }\n    // Custom network, not necessarily eth.\n    return `${apiKey}_${network.rpcUrl}_${network.chainId}_${network.chainType}`;\n  }\n  return `${apiKey}_unknown`;\n}\n\n/**\n * Initializes SDK extensions, checks for platform/version compatiblity issues,\n * then consolidates any global configurations provided by those extensions.\n */\nfunction prepareExtensions(this: SDKBase, options?: MagicSDKAdditionalConfiguration): Record<string, any> {\n  const extensions: Extension<string>[] | { [key: string]: Extension<string> } = options?.extensions ?? [];\n  const extConfig: any = {};\n  const incompatibleExtensions: Extension<string>[] = [];\n\n  if (Array.isArray(extensions)) {\n    extensions.forEach(ext => {\n      if (checkExtensionCompat(ext)) {\n        ext.init(this);\n        if (ext.name || ext.name !== Extension.Anonymous) {\n          // Only apply extensions with a known, defined `name` parameter.\n          (this as any)[ext.name] = ext;\n        }\n        if (ext instanceof Extension.Internal) {\n          if (!isEmpty(ext.config)) extConfig[ext.name] = ext.config;\n        }\n      } else {\n        incompatibleExtensions.push(ext);\n      }\n    });\n  } else {\n    Object.keys(extensions).forEach(name => {\n      if (checkExtensionCompat(extensions[name])) {\n        extensions[name].init(this);\n        const ext = extensions[name];\n        (this as any)[name] = ext;\n        if (ext instanceof Extension.Internal) {\n          if (!isEmpty(ext.config)) extConfig[extensions[name].name] = ext.config;\n        }\n      } else {\n        incompatibleExtensions.push(extensions[name]);\n      }\n    });\n  }\n\n  if (incompatibleExtensions.length) {\n    throw createIncompatibleExtensionsError(incompatibleExtensions);\n  }\n\n  return extConfig;\n}\n\nexport type MagicSDKExtensionsOption<TCustomExtName extends string = string> =\n  | Extension<string>[]\n  | { [P in TCustomExtName]: Extension<string> };\n\nexport interface MagicSDKAdditionalConfiguration<\n  TCustomExtName extends string = string,\n  TExt extends MagicSDKExtensionsOption<TCustomExtName> = any,\n> {\n  endpoint?: string;\n  locale?: SupportedLocale;\n  network?: EthNetworkConfiguration;\n  extensions?: TExt;\n  testMode?: boolean;\n  deferPreload?: boolean;\n  useStorageCache?: boolean;\n  meta?: any; // Generic field for clients to add metadata\n}\n\nexport class SDKBase {\n  private static readonly __overlays__: Map<string, ViewController> = new Map();\n\n  protected readonly endpoint: string;\n  protected readonly parameters: string;\n  protected readonly networkHash: string;\n  public readonly testMode: boolean;\n  public readonly useStorageCache: boolean;\n\n  /**\n   * Contains methods for starting a Magic SDK authentication flow.\n   */\n  public readonly auth: AuthModule;\n\n  /**\n   * Contains methods for interacting with user data, checking login\n   * status, generating cryptographically-secure ID tokens, and more.\n   */\n  public readonly user: UserModule;\n\n  /**\n   * Contains methods previously under the `ConnectExtension`, including\n   * login, show wallet UI, request user info, and more.\n   */\n  public readonly wallet: WalletModule;\n\n  /**\n   * Contains methods for interacting with NFTs, including purchase.\n   */\n  public readonly nft: NFTModule;\n\n  /**\n   * Contains internal methods for third-party wallets.\n   */\n  public thirdPartyWallets: ThirdPartyWalletsModule;\n\n  /**\n   * Contains a Web3-compliant provider. Pass this module to your Web3/Ethers\n   * instance for automatic compatibility with Ethereum methods.\n   */\n  public readonly rpcProvider: RPCProviderModule & AbstractProvider;\n\n  /**\n   * Creates an instance of Magic SDK.\n   */\n  constructor(\n    public readonly apiKey: string,\n    options?: MagicSDKAdditionalConfiguration,\n  ) {\n    if (!apiKey) throw createMissingApiKeyError();\n\n    if (SDKEnvironment.platform === 'react-native' && options?.endpoint) {\n      createReactNativeEndpointConfigurationWarning().log();\n    }\n\n    const { defaultEndpoint, version } = SDKEnvironment;\n    this.testMode = !!options?.testMode;\n    this.useStorageCache = !!options?.useStorageCache;\n    this.endpoint = createURL(options?.endpoint ?? defaultEndpoint).origin;\n\n    // Prepare built-in modules\n    this.auth = new AuthModule(this);\n    this.user = new UserModule(this);\n    this.wallet = new WalletModule(this);\n    this.nft = new NFTModule(this);\n    this.thirdPartyWallets = new ThirdPartyWalletsModule(this);\n    this.rpcProvider = new RPCProviderModule(this) as any;\n\n    // Prepare extensions\n    const extConfig: any = prepareExtensions.call(this, options);\n\n    // Encode parameters as base64-JSON\n    this.parameters = encodeJSON<QueryParameters>({\n      API_KEY: this.apiKey,\n      DOMAIN_ORIGIN: window.location ? window.location.origin : '',\n      ETH_NETWORK: options?.network,\n      host: createURL(this.endpoint).host,\n      sdk: sdkNameToEnvName[SDKEnvironment.sdkName],\n      version,\n      ext: isEmpty(extConfig) ? undefined : extConfig,\n      locale: options?.locale || 'en_US',\n      ...(SDKEnvironment.bundleId ? { bundleId: SDKEnvironment.bundleId } : {}),\n      meta: options?.meta,\n    });\n    this.networkHash = getNetworkHash(this.apiKey, options?.network, isEmpty(extConfig) ? undefined : extConfig);\n    if (!options?.deferPreload) this.preload();\n  }\n\n  /**\n   * Represents the view controller associated with this `MagicSDK` instance.\n   */\n  protected get overlay(): ViewController {\n    if (!SDKBase.__overlays__.has(this.parameters)) {\n      const controller = new SDKEnvironment.ViewController(this.endpoint, this.parameters, this.networkHash);\n\n      // @ts-ignore - We don't want to expose this method to the user, but we\n      // need to invoke in here so that the `ViewController` is ready for use.\n      controller.init();\n\n      SDKBase.__overlays__.set(this.parameters, controller);\n    }\n\n    return SDKBase.__overlays__.get(this.parameters)!;\n  }\n\n  /**\n   * Preloads the Magic view, allowing for faster initial requests in browser\n   * environments. Awaiting the returned promise will signal when the Magic view\n   * has completed loading and is ready for requests.\n   */\n  public async preload() {\n    await this.overlay.checkIsReadyForRequest;\n  }\n}\n","import {\n  MagicIncomingWindowMessage,\n  MagicOutgoingWindowMessage,\n  JsonRpcRequestPayload,\n  MagicMessageEvent,\n  MagicMessageRequest,\n  SDKWarningCode,\n} from '@magic-sdk/types';\nimport { JsonRpcResponse } from './json-rpc';\nimport { createPromise } from '../util/promise-tools';\nimport { getItem, setItem } from '../util/storage';\nimport { createJwt } from '../util/web-crypto';\nimport { SDKEnvironment } from './sdk-environment';\nimport { MagicSDKWarning, createModalNotReadyError } from './sdk-exceptions';\nimport {\n  clearDeviceShares,\n  encryptAndPersistDeviceShare,\n  getDecryptedDeviceShare,\n} from '../util/device-share-web-crypto';\n\ninterface RemoveEventListenerFunction {\n  (): void;\n}\n\ninterface StandardizedResponse {\n  id?: string | number;\n  response?: JsonRpcResponse;\n}\n\ninterface StandardizedMagicRequest {\n  msgType: string;\n  payload: JsonRpcRequestPayload<any> | JsonRpcRequestPayload<any>[];\n  jwt?: string;\n  rt?: string;\n  deviceShare?: string;\n}\n\n/**\n * Get the originating payload from a batch request using the specified `id`.\n */\nfunction getRequestPayloadFromBatch(\n  requestPayload: JsonRpcRequestPayload | JsonRpcRequestPayload[],\n  id?: string | number | null,\n): JsonRpcRequestPayload | undefined {\n  return id && Array.isArray(requestPayload)\n    ? requestPayload.find((p) => p.id === id)\n    : (requestPayload as JsonRpcRequestPayload);\n}\n\n/**\n * Ensures the incoming response follows the expected schema and parses for a\n * JSON RPC payload ID.\n */\nfunction standardizeResponse(\n  requestPayload: JsonRpcRequestPayload | JsonRpcRequestPayload[],\n  event: MagicMessageEvent,\n): StandardizedResponse {\n  const id = event.data.response?.id;\n  const requestPayloadResolved = getRequestPayloadFromBatch(requestPayload, id);\n\n  if (id && requestPayloadResolved) {\n    // Build a standardized response object\n    const response = new JsonRpcResponse(requestPayloadResolved)\n      .applyResult(event.data.response.result)\n      .applyError(event.data.response.error);\n\n    return { id, response };\n  }\n\n  return {};\n}\n\nasync function createMagicRequest(\n  msgType: string,\n  payload: JsonRpcRequestPayload | JsonRpcRequestPayload[],\n  networkHash: string,\n) {\n  const rt = await getItem<string>('rt');\n  let jwt;\n\n  // only for webcrypto platforms\n  if (SDKEnvironment.platform === 'web') {\n    try {\n      jwt = (await getItem<string>('jwt')) ?? (await createJwt());\n    } catch (e) {\n      console.error('webcrypto error', e);\n    }\n  }\n\n  const request: StandardizedMagicRequest = { msgType, payload };\n\n  if (jwt) {\n    request.jwt = jwt;\n  }\n  if (jwt && rt) {\n    request.rt = rt;\n  }\n\n  // Grab the device share if it exists for the network\n  const decryptedDeviceShare = await getDecryptedDeviceShare(networkHash);\n  if (decryptedDeviceShare) {\n    request.deviceShare = decryptedDeviceShare;\n  }\n\n  return request;\n}\n\nasync function persistMagicEventRefreshToken(event: MagicMessageEvent) {\n  if (!event.data.rt) {\n    return;\n  }\n\n  await setItem('rt', event.data.rt);\n}\n\nexport abstract class ViewController {\n  public checkIsReadyForRequest: Promise<void>;\n  public isReadyForRequest: boolean;\n  protected readonly messageHandlers = new Set<(event: MagicMessageEvent) => any>();\n  protected isConnectedToInternet = true;\n\n  /**\n   * Create an instance of `ViewController`\n   *\n   * @param endpoint - The URL for the relevant iframe context.\n   * @param parameters - The unique, encoded query parameters for the\n   * relevant iframe context.\n   * @param networkHash - The hash of the network that this sdk instance is connected to\n   * for multi-chain scenarios\n   */\n  constructor(\n    protected readonly endpoint: string,\n    protected readonly parameters: string,\n    protected readonly networkHash: string,\n  ) {\n    this.checkIsReadyForRequest = this.waitForReady();\n    this.isReadyForRequest = false;\n    this.listen();\n  }\n\n  protected abstract init(): void;\n  protected abstract _post(data: MagicMessageRequest): Promise<void>;\n  protected abstract hideOverlay(): void;\n  protected abstract showOverlay(): void;\n\n  /**\n   * Send a payload to the Magic `<iframe>` for processing and automatically\n   * handle the acknowledging follow-up event(s).\n   *\n   * @param msgType - The type of message to encode with the data.\n   * @param payload - The JSON RPC payload to emit via `window.postMessage`.\n   */\n  public async post<ResultType = any>(\n    msgType: MagicOutgoingWindowMessage,\n    payload: JsonRpcRequestPayload[],\n  ): Promise<JsonRpcResponse<ResultType>[]>;\n\n  public async post<ResultType = any>(\n    msgType: MagicOutgoingWindowMessage,\n    payload: JsonRpcRequestPayload,\n  ): Promise<JsonRpcResponse<ResultType>>;\n\n  public async post<ResultType = any>(\n    msgType: MagicOutgoingWindowMessage,\n    payload: JsonRpcRequestPayload | JsonRpcRequestPayload[],\n  ): Promise<JsonRpcResponse<ResultType> | JsonRpcResponse<ResultType>[]> {\n    return createPromise(async (resolve, reject) => {\n      if (!this.isConnectedToInternet) {\n        const error = createModalNotReadyError();\n        reject(error);\n      }\n\n      if (!this.isReadyForRequest) {\n        await this.waitForReady();\n      }\n\n      const batchData: JsonRpcResponse[] = [];\n      const batchIds = Array.isArray(payload) ? payload.map((p) => p.id) : [];\n      const msg = await createMagicRequest(`${msgType}-${this.parameters}`, payload, this.networkHash);\n\n      await this._post(msg);\n\n      /**\n       * Collect successful RPC responses and resolve.\n       */\n      const acknowledgeResponse = (removeEventListener: RemoveEventListenerFunction) => (event: MagicMessageEvent) => {\n        const { id, response } = standardizeResponse(payload, event);\n        persistMagicEventRefreshToken(event);\n        if (response?.payload.error?.message === 'User denied account access.') {\n          clearDeviceShares();\n        } else if (event.data.deviceShare) {\n          const { deviceShare } = event.data;\n          encryptAndPersistDeviceShare(deviceShare, this.networkHash);\n        }\n        if (id && response && Array.isArray(payload) && batchIds.includes(id)) {\n          batchData.push(response);\n\n          // For batch requests, we wait for all responses before resolving.\n          if (batchData.length === payload.length) {\n            removeEventListener();\n            resolve(batchData);\n          }\n        } else if (id && response && !Array.isArray(payload) && id === payload.id) {\n          removeEventListener();\n          resolve(response);\n        }\n      };\n\n      // Listen for and handle responses.\n      const removeResponseListener = this.on(\n        MagicIncomingWindowMessage.MAGIC_HANDLE_RESPONSE,\n        acknowledgeResponse(() => removeResponseListener()),\n      );\n    });\n  }\n\n  /**\n   * Listen for events received with the given `msgType`.\n   *\n   * @param msgType - The `msgType` encoded with the event data.\n   * @param handler - A handler function to execute on each event received.\n   * @return A `void` function to remove the attached event.\n   */\n  public on(\n    msgType: MagicIncomingWindowMessage,\n    handler: (this: Window, event: MagicMessageEvent) => any,\n  ): RemoveEventListenerFunction {\n    const boundHandler = handler.bind(window);\n\n    // We cannot effectively cover this function because it never gets reference\n    // by value. The functionality of this callback is tested within\n    // `initMessageListener`.\n    /* istanbul ignore next */\n    const listener = (event: MagicMessageEvent) => {\n      if (event.data.msgType === `${msgType}-${this.parameters}`) boundHandler(event);\n    };\n\n    this.messageHandlers.add(listener);\n    return () => this.messageHandlers.delete(listener);\n  }\n\n  private waitForReady() {\n    return new Promise<void>((resolve) => {\n      const unsubscribe = this.on(MagicIncomingWindowMessage.MAGIC_OVERLAY_READY, () => {\n        this.isReadyForRequest = true;\n        resolve();\n        unsubscribe();\n      });\n\n      // We expect the overlay to be ready within 15 seconds.\n      // Sometimes the message is not properly processed due to\n      // webview issues. In that case, after 15 seconds we consider\n      // the overlay ready, to avoid requests hanging forever.\n      setTimeout(() => {\n        this.isReadyForRequest = true;\n        resolve();\n        unsubscribe();\n      }, 15000);\n    });\n  }\n\n  /**\n   * Listen for messages sent from the underlying Magic `<WebView>`.\n   */\n  private listen() {\n    this.on(MagicIncomingWindowMessage.MAGIC_HIDE_OVERLAY, () => {\n      this.hideOverlay();\n    });\n\n    this.on(MagicIncomingWindowMessage.MAGIC_SHOW_OVERLAY, () => {\n      this.showOverlay();\n    });\n\n    this.on(MagicIncomingWindowMessage.MAGIC_SEND_PRODUCT_ANNOUNCEMENT, (event: MagicMessageEvent) => {\n      if (event.data.response.result.product_announcement) {\n        new MagicSDKWarning(SDKWarningCode.ProductAnnouncement, event.data.response.result.product_announcement).log();\n      }\n    });\n  }\n}\n","// Only re-export modules & types that are intended\n// for the public API from this file.\n\nexport {\n  Extension,\n  MagicSDKError as SDKError,\n  MagicExtensionError as ExtensionError,\n  MagicExtensionWarning as ExtensionWarning,\n  MagicRPCError as RPCError,\n  MagicSDKWarning as SDKWarning,\n  isPromiEvent,\n} from '@magic-sdk/provider';\n\nexport type { MagicSDKAdditionalConfiguration, MagicSDKExtensionsOption, PromiEvent } from '@magic-sdk/provider';\n\nexport * from '@magic-sdk/types';\n","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.10.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            var db = openreq.result;\n            db.onversionchange = function (e) {\n                // Triggered when the database is modified (e.g. adding an objectStore) or\n                // deleted (even when initiated by other sessions in different tabs).\n                // Closing the connection here prevents those operations from being blocked.\n                // If the database is accessed again later by this instance, the connection\n                // will be reopened or the database recreated as needed.\n                e.target.close();\n            };\n            resolve(db);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(req.error);\n                    };\n\n                    req.onblocked = function () {\n                        // Closing all open connections in onversionchange handler should prevent this situation, but if\n                        // we do get here, it just means the request remains pending - eventually it will succeed or error\n                        console.warn('dropInstance blocked for database \"' + options.name + '\" until all open connections are closed');\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n","export const _driver = 'localforage-driver-memory';\n","/*!\nMIT License\n\nCopyright (c) 2018 Arturas Molcanovas <a.molcanovas@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n*/\n\n\nimport { __values } from 'tslib';\n\n/**\n * Abstracts constructing a Blob object, so it also works in older\n * browsers that don't support the native Blob constructor. (i.e.\n * old QtWebKit versions, at least).\n * Abstracts constructing a Blob object, so it also works in older\n * browsers that don't support the native Blob constructor. (i.e.\n * old QtWebKit versions, at least).\n *\n * @param parts\n * @param properties\n */\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    }\n    catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        //tslint:disable-next-line:variable-name\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder\n            : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder\n                : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder\n                    : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\nvar SERIALIZED_MARKER_LENGTH = \"__lfsc__:\" /* SERIALIZED_MARKER */.length;\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + \"arbf\" /* TYPE_ARRAYBUFFER */.length;\n//tslint:disable:no-magic-numbers no-bitwise prefer-switch no-unbound-method\nvar toString = Object.prototype.toString;\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n    for (var i = 0, p = 0; i < len; i += 4) {\n        var encoded1 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\" /* BASE_CHARS */.indexOf(serializedString[i]);\n        var encoded2 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\" /* BASE_CHARS */.indexOf(serializedString[i + 1]);\n        var encoded3 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\" /* BASE_CHARS */.indexOf(serializedString[i + 2]);\n        var encoded4 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\" /* BASE_CHARS */.indexOf(serializedString[i + 3]);\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return buffer;\n}\n/**\n * Converts a buffer to a string to store, serialized, in the backend\n * storage library.\n */\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    for (var i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\" /* BASE_CHARS */[bytes[i] >> 2];\n        base64String += \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\" /* BASE_CHARS */[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64String +=\n            \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\" /* BASE_CHARS */[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64String += \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\" /* BASE_CHARS */[bytes[i + 2] & 63];\n    }\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    }\n    else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n    return base64String;\n}\n/**\n * Serialize a value, afterwards executing a callback (which usually\n * instructs the `setItem()` callback/promise to be executed). This is how\n * we store binary data with localStorage.\n * @param value\n * @param callback\n */\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString.call(value);\n    }\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    if (value && (valueType === '[object ArrayBuffer]' ||\n        (value.buffer && toString.call(value.buffer) === '[object ArrayBuffer]'))) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer = void 0;\n        var marker = \"__lfsc__:\" /* SERIALIZED_MARKER */;\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += \"arbf\" /* TYPE_ARRAYBUFFER */;\n        }\n        else {\n            buffer = value.buffer;\n            if (valueType === '[object Int8Array]') {\n                marker += \"si08\" /* TYPE_INT8ARRAY */;\n            }\n            else if (valueType === '[object Uint8Array]') {\n                marker += \"ui08\" /* TYPE_UINT8ARRAY */;\n            }\n            else if (valueType === '[object Uint8ClampedArray]') {\n                marker += \"uic8\" /* TYPE_UINT8CLAMPEDARRAY */;\n            }\n            else if (valueType === '[object Int16Array]') {\n                marker += \"si16\" /* TYPE_INT16ARRAY */;\n            }\n            else if (valueType === '[object Uint16Array]') {\n                marker += \"ur16\" /* TYPE_UINT16ARRAY */;\n            }\n            else if (valueType === '[object Int32Array]') {\n                marker += \"si32\" /* TYPE_INT32ARRAY */;\n            }\n            else if (valueType === '[object Uint32Array]') {\n                marker += \"ui32\" /* TYPE_UINT32ARRAY */;\n            }\n            else if (valueType === '[object Float32Array]') {\n                marker += \"fl32\" /* TYPE_FLOAT32ARRAY */;\n            }\n            else if (valueType === '[object Float64Array]') {\n                marker += \"fl64\" /* TYPE_FLOAT64ARRAY */;\n            }\n            else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n        callback(marker + bufferToString(buffer));\n    }\n    else if (valueType === '[object Blob]') {\n        // Convert the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            //tslint:disable-next-line:restrict-plus-operands\n            var str = \"~~local_forage_type~\" /* BLOB_TYPE_PREFIX */ + value.type + \"~\" + bufferToString(this.result);\n            callback(\"__lfsc__:\" /* SERIALIZED_MARKER */ + \"blob\" /* TYPE_BLOB */ + str);\n        };\n        fileReader.readAsArrayBuffer(value);\n    }\n    else {\n        try {\n            callback(JSON.stringify(value));\n        }\n        catch (e) {\n            console.error('Couldn\\'t convert value into a JSON string: ', value);\n            callback(null, e);\n        }\n    }\n}\n/**\n * Deserialize data we've inserted into a value column/field. We place\n * special markers into our strings to mark them as encoded; this isn't\n * as nice as a meta field, but it's the only sane thing we can do whilst\n * keeping localStorage support intact.\n *\n * Oftentimes this will just deserialize JSON content, but if we have a\n * special marker (SERIALIZED_MARKER, defined above), we will extract\n * some kind of arraybuffer/binary data/typed array out of the string.\n * @param value\n */\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== \"__lfsc__:\" /* SERIALIZED_MARKER */) {\n        return JSON.parse(value);\n    }\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === \"blob\" /* TYPE_BLOB */ && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case \"arbf\" /* TYPE_ARRAYBUFFER */:\n            return buffer;\n        case \"blob\" /* TYPE_BLOB */:\n            return createBlob([buffer], { type: blobType });\n        case \"si08\" /* TYPE_INT8ARRAY */:\n            return new Int8Array(buffer);\n        case \"ui08\" /* TYPE_UINT8ARRAY */:\n            return new Uint8Array(buffer);\n        case \"uic8\" /* TYPE_UINT8CLAMPEDARRAY */:\n            return new Uint8ClampedArray(buffer);\n        case \"si16\" /* TYPE_INT16ARRAY */:\n            return new Int16Array(buffer);\n        case \"ur16\" /* TYPE_UINT16ARRAY */:\n            return new Uint16Array(buffer);\n        case \"si32\" /* TYPE_INT32ARRAY */:\n            return new Int32Array(buffer);\n        case \"ui32\" /* TYPE_UINT32ARRAY */:\n            return new Uint32Array(buffer);\n        case \"fl32\" /* TYPE_FLOAT32ARRAY */:\n            return new Float32Array(buffer);\n        case \"fl64\" /* TYPE_FLOAT64ARRAY */:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nfunction clone(obj) {\n    var e_1, _a;\n    if (obj === null || typeof (obj) !== 'object' || 'isActiveClone' in obj) {\n        return obj;\n    }\n    var temp = obj instanceof Date ? new Date(obj) : (obj.constructor());\n    try {\n        for (var _b = __values(Object.keys(obj)), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var key = _c.value;\n            if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                obj['isActiveClone'] = null;\n                temp[key] = clone(obj[key]);\n                delete obj['isActiveClone'];\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return temp;\n}\n\nfunction getKeyPrefix(options, defaultConfig) {\n    return (options.name || defaultConfig.name) + \"/\" + (options.storeName || defaultConfig.storeName) + \"/\";\n}\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction getCallback() {\n    var _args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        _args[_i] = arguments[_i];\n    }\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n//tslint:disable-next-line:no-ignored-initial-value\nfunction dropInstanceCommon(options, callback) {\n    var _this = this;\n    callback = getCallback.apply(this, arguments);\n    options = (typeof options !== 'function' && options) || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n    var promise;\n    if (!options.name) {\n        promise = Promise.reject('Invalid arguments');\n    }\n    else {\n        promise = new Promise(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + \"/\");\n            }\n            else {\n                resolve(getKeyPrefix(options, _this._defaultConfig));\n            }\n        });\n    }\n    return { promise: promise, callback: callback };\n}\n\nfunction normaliseKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + \" used as a key, but it is not a string.\");\n        key = String(key);\n    }\n    return key;\n}\n\nvar serialiser = {\n    bufferToString: bufferToString,\n    deserialize: deserialize,\n    serialize: serialize,\n    stringToBuffer: stringToBuffer\n};\n\nexport { serialiser, clone, getKeyPrefix, executeCallback, getCallback, dropInstanceCommon, normaliseKey };\n//# sourceMappingURL=fesm5.js.map\n","const stores: { [store: string]: Store } = {};\n\n/** @internal */\nexport class Store {\n\n  private data: { [k: string]: any } = {};\n\n  private constructor(private readonly kp: string) {\n  }\n\n  public static resolve(kp: string): Store {\n    if (!stores[kp]) {\n      stores[kp] = new Store(kp);\n    }\n\n    return stores[kp];\n  }\n\n  public clear(): void {\n    this.data = {};\n  }\n\n  public drop(): void {\n    this.clear();\n    delete stores[this.kp];\n  }\n\n  public get(key: string): any {\n    return this.data[key];\n  }\n\n  public key(idx: number): string {\n    return this.keys()[idx];\n  }\n\n  public keys(): string[] {\n    return Object.keys(this.data);\n  }\n\n  public rm(k: string): void {\n    delete this.data[k];\n  }\n\n  public set(k: string, v: any): void {\n    this.data[k] = v;\n  }\n}\n","import {clone, getKeyPrefix, LocalForageOptions, serialiser} from 'localforage-driver-commons';\nimport {Store} from './Store';\n\nexport function _initStorage(this: any, options?: LocalForageOptions): any {\n  const opts = options ? clone(options) : {};\n  const kp = getKeyPrefix(opts, this._defaultConfig);\n  const store = Store.resolve(kp);\n\n  this._dbInfo = opts;\n  this._dbInfo.serializer = serialiser;\n  this._dbInfo.keyPrefix = kp;\n  this._dbInfo.mStore = store;\n\n  return Promise.resolve();\n}\n","import {executeCallback} from 'localforage-driver-commons';\nimport {Store} from './Store';\n\nexport function clear(this: any, callback?: (err: any) => void): Promise<void> {\n  const promise = this.ready().then(() => {\n    (<Store>this._dbInfo.mStore).clear();\n  });\n\n  executeCallback(promise, callback);\n\n  return promise;\n}\n","import {dropInstanceCommon, executeCallback} from 'localforage-driver-commons';\nimport {Store} from './Store';\n\nexport function dropInstance(this: any, _options: any, _cb?: any) {\n  const {promise, callback} = dropInstanceCommon.apply(this, <any>arguments);\n\n  const outPromise = (<Promise<string>>promise).then<void>(keyPrefix => {\n    Store.resolve(keyPrefix).drop();\n  });\n\n  executeCallback(outPromise, callback);\n\n  return promise;\n}\n","import {executeCallback, normaliseKey} from 'localforage-driver-commons';\nimport {Store} from './Store';\n\nexport function getItem(this: any, key$: string, callback?: any) {\n  key$ = normaliseKey(key$);\n\n  const promise = this.ready().then(() => {\n    const result = (<Store>this._dbInfo.mStore).get(key$);\n\n    // Deserialise if the result is not null or undefined\n    return result == null ? null : this._dbInfo.serializer.deserialize(result); //tslint:disable-line:triple-equals\n  });\n\n  executeCallback(promise, callback);\n\n  return promise;\n}\n","import {executeCallback} from 'localforage-driver-commons';\nimport {Store} from './Store';\n\nexport function iterate(this: any, iterator: any, callback?: any) {\n  const promise = this.ready().then(() => {\n    const store = (<Store>this._dbInfo.mStore);\n    const keys = store.keys();\n\n    for (let i = 0; i < keys.length; i++) {\n      let value = store.get(keys[i]);\n\n      // If a result was found, parse it from the serialized\n      // string into a JS object. If result isn't truthy, the\n      // key is likely undefined and we'll pass it straight\n      // to the iterator.\n      if (value) {\n        value = this._dbInfo.serializer.deserialize(value);\n      }\n\n      value = iterator(value, keys[i], i + 1);\n\n      if (value !== undefined) {\n        return value;\n      }\n    }\n  });\n\n  executeCallback(promise, callback);\n\n  return promise;\n}\n","import {executeCallback} from 'localforage-driver-commons';\nimport {Store} from './Store';\n\nexport function key(this: any, idx: number, callback?: any) {\n  const promise = this.ready().then(() => {\n    let result: any;\n    try {\n      result = (<Store>this._dbInfo.mStore).key(idx);\n\n      if (result === undefined) {\n        result = null;\n      }\n    } catch {\n      result = null;\n    }\n\n    return result;\n  });\n\n  executeCallback(promise, callback);\n\n  return promise;\n}\n","import {executeCallback} from 'localforage-driver-commons';\nimport {Store} from './Store';\n\nexport function keys(this: any, callback?: any) {\n  const promise = this.ready().then(() => {\n    return (<Store>this._dbInfo.mStore).keys();\n  });\n\n  executeCallback(promise, callback);\n\n  return promise;\n}\n","import {executeCallback} from 'localforage-driver-commons';\n\nexport function length(this: any, callback?: any) {\n  const promise = this.keys().then((keys$: any[]) => keys$.length);\n\n  executeCallback(promise, callback);\n\n  return promise;\n}\n","import {executeCallback, normaliseKey} from 'localforage-driver-commons';\nimport {Store} from './Store';\n\nexport function removeItem(this: any, key$: string, callback?: any) {\n  key$ = normaliseKey(key$);\n\n  const promise = this.ready().then(() => {\n    (<Store>this._dbInfo.mStore).rm(key$);\n  });\n\n  executeCallback(promise, callback);\n\n  return promise;\n}\n","import {executeCallback, normaliseKey} from 'localforage-driver-commons';\nimport {Store} from './Store';\n\nexport function setItem(this: any, key$: string, value: any, callback?: any) {\n  key$ = normaliseKey(key$);\n\n  const promise = this.ready().then(() => {\n    if (value === undefined) {\n      value = null;\n    }\n\n    // Save the original value to pass to the callback.\n    const originalValue = value;\n\n    return new Promise<any>((resolve, reject) => {\n      this._dbInfo.serializer.serialize(value, (value$: string, error: Error) => {\n        if (error) {\n          reject(error);\n        } else {\n          try {\n            (<Store>this._dbInfo.mStore).set(key$, value$);\n            resolve(originalValue);\n          } catch (e) {\n            reject(e);\n          }\n        }\n      });\n    });\n  });\n\n  executeCallback(promise, callback);\n\n  return promise;\n}\n","export const _support = true;\nexport {_driver} from './_driver';\nexport {_initStorage} from './_initStorage';\nexport {clear} from './clear';\nexport {dropInstance} from './dropInstance';\nexport {getItem} from './getItem';\nexport {iterate} from './iterate';\nexport {key} from './key';\nexport {keys} from './keys';\nexport {length} from './length';\nexport {removeItem} from './removeItem';\nexport {setItem} from './setItem';\n","/* istanbul ignore file */\n// Deprecate test API key in v7.0.0\n\nimport { SDKBase, createSDK, InstanceWithExtensions, MagicSDKExtensionsOption } from '@magic-sdk/provider';\nimport localForage from 'localforage';\nimport * as memoryDriver from 'localforage-driver-memory';\nimport { IframeController } from './iframe-controller';\n\nexport * from '@magic-sdk/commons';\n\nexport const Magic = createSDK(SDKBase, {\n  platform: 'web',\n  sdkName: 'magic-sdk',\n  version: process.env.WEB_VERSION!,\n  defaultEndpoint: 'https://auth.magic.link/',\n  ViewController: IframeController,\n  configureStorage: async () => {\n    const lf = localForage.createInstance({\n      name: 'MagicAuthLocalStorageDB',\n      storeName: 'MagicAuthLocalStorage',\n    });\n\n    await lf.defineDriver(memoryDriver);\n    await lf.setDriver([localForage.INDEXEDDB, localForage.LOCALSTORAGE, memoryDriver._driver]);\n\n    return lf;\n  },\n});\n\nexport type Magic<T extends MagicSDKExtensionsOption<any> = MagicSDKExtensionsOption> = InstanceWithExtensions<\n  SDKBase,\n  T\n>;\n","import { ViewController, createDuplicateIframeWarning, createURL, createModalNotReadyError } from '@magic-sdk/provider';\nimport { MagicIncomingWindowMessage, MagicOutgoingWindowMessage } from '@magic-sdk/types';\n\n/**\n * Magic `<iframe>` overlay styles. These base styles enable `<iframe>` UI\n * to render above all other DOM content.\n */\nconst overlayStyles: Partial<CSSStyleDeclaration> = {\n  display: 'block',\n  visibility: 'hidden',\n  position: 'fixed',\n  top: '0',\n  right: '0',\n  width: '100%',\n  height: '100%',\n  borderRadius: '0',\n  border: 'none',\n  // necessary for iOS Safari\n  opacity: '0',\n  // necessary for iOS 17 and earlier\n  zIndex: '-1',\n};\n\n/**\n * Apply iframe styles to the given element.\n * @param elem - An element to apply styles using CSSOM.\n */\nfunction applyOverlayStyles(elem: HTMLElement) {\n  for (const [cssProperty, value] of Object.entries(overlayStyles)) {\n    (elem.style as any)[cssProperty as any] = value;\n  }\n}\n\n/**\n * Checks if the given query params are associated with an active `<iframe>`\n * instance.\n *\n * @param parameters - The unique, encoded query parameters to check for\n * duplicates against.\n */\nfunction checkForSameSrcInstances(parameters: string) {\n  const iframes: HTMLIFrameElement[] = [].slice.call(document.querySelectorAll('.magic-iframe'));\n  return Boolean(iframes.find(iframe => iframe.src.includes(parameters)));\n}\n\nconst SECOND = 1000;\nconst MINUTE = 60 * SECOND;\nconst RESPONSE_DELAY = 15 * SECOND; // 15 seconds\nconst PING_INTERVAL = 2 * MINUTE; // 2 minutes\nconst INITIAL_HEARTBEAT_DELAY = 60 * MINUTE; // 1 hour\n\n/**\n * View controller for the Magic `<iframe>` overlay.\n */\nexport class IframeController extends ViewController {\n  private iframe!: Promise<HTMLIFrameElement>;\n  private activeElement: any = null;\n  private lastPingTime = Date.now();\n  private intervalTimer: ReturnType<typeof setInterval> | null = null;\n  private timeoutTimer: ReturnType<typeof setTimeout> | null = null;\n\n  private getIframeSrc() {\n    return createURL(`/send?params=${encodeURIComponent(this.parameters)}`, this.endpoint).href;\n  }\n  /**\n   * Initializes the underlying `<iframe>` element.\n   * Initializes the underlying `Window.onmessage` event listener.\n   */\n  protected init() {\n    (this as any).test = 'hello';\n    this.iframe = new Promise(resolve => {\n      const onload = () => {\n        if (!checkForSameSrcInstances(encodeURIComponent(this.parameters))) {\n          const iframe = document.createElement('iframe');\n          iframe.classList.add('magic-iframe');\n          iframe.dataset.magicIframeLabel = createURL(this.endpoint).host;\n          iframe.title = 'Secure Modal';\n          iframe.src = this.getIframeSrc();\n          iframe.allow = 'clipboard-read; clipboard-write';\n          applyOverlayStyles(iframe);\n          document.body.appendChild(iframe);\n          resolve(iframe);\n        } else {\n          createDuplicateIframeWarning().log();\n        }\n      };\n\n      // Check DOM state and load...\n      if (['loaded', 'interactive', 'complete'].includes(document.readyState)) {\n        onload();\n      } else {\n        // ...or check load events to load\n        window.addEventListener('load', onload, false);\n      }\n    });\n\n    this.iframe.then(iframe => {\n      if (iframe instanceof HTMLIFrameElement) {\n        iframe.addEventListener('load', async () => {\n          await this.startHeartBeat();\n        });\n      }\n    });\n\n    window.addEventListener('message', (event: MessageEvent) => {\n      if (event.origin === this.endpoint) {\n        if (event.data && event.data.msgType && this.messageHandlers.size) {\n          const isPongMessage = event.data.msgType.includes(MagicIncomingWindowMessage.MAGIC_PONG);\n\n          if (isPongMessage) {\n            this.lastPingTime = Date.now();\n          }\n          // If the response object is undefined, we ensure it's at least an\n          // empty object before passing to the event listener.\n          /* istanbul ignore next */\n          event.data.response = event.data.response ?? {};\n          for (const handler of this.messageHandlers.values()) {\n            handler(event);\n          }\n        }\n      }\n    });\n\n    window.addEventListener('beforeunload', () => {\n      this.stopHeartBeat();\n    });\n  }\n\n  protected async showOverlay() {\n    const iframe = await this.iframe;\n    iframe.style.visibility = 'visible';\n    iframe.style.zIndex = '2147483647';\n    iframe.style.opacity = '1';\n    this.activeElement = document.activeElement;\n    iframe.focus();\n  }\n\n  protected async hideOverlay() {\n    const iframe = await this.iframe;\n    iframe.style.visibility = 'hidden';\n    iframe.style.zIndex = '-1';\n    iframe.style.opacity = '0';\n    if (this.activeElement?.focus) this.activeElement.focus();\n    this.activeElement = null;\n  }\n\n  protected async _post(data: any) {\n    const iframe = await this.iframe;\n    if (iframe && iframe.contentWindow) {\n      iframe.contentWindow.postMessage(data, this.endpoint);\n    } else {\n      throw createModalNotReadyError();\n    }\n  }\n\n  private heartBeatCheck() {\n    this.intervalTimer = setInterval(async () => {\n      const message = { msgType: `${MagicOutgoingWindowMessage.MAGIC_PING}-${this.parameters}`, payload: [] };\n\n      await this._post(message);\n\n      const timeSinceLastPing = Date.now() - this.lastPingTime;\n\n      if (timeSinceLastPing > RESPONSE_DELAY) {\n        await this.reloadIframe();\n        this.lastPingTime = Date.now();\n      }\n    }, PING_INTERVAL);\n  }\n\n  private async startHeartBeat() {\n    const iframe = await this.iframe;\n\n    if (iframe) {\n      this.timeoutTimer = setTimeout(() => this.heartBeatCheck(), INITIAL_HEARTBEAT_DELAY);\n    }\n  }\n\n  private stopHeartBeat() {\n    if (this.timeoutTimer) {\n      clearTimeout(this.timeoutTimer);\n      this.timeoutTimer = null;\n    }\n\n    if (this.intervalTimer) {\n      clearInterval(this.intervalTimer);\n      this.intervalTimer = null;\n    }\n  }\n\n  private async reloadIframe() {\n    const iframe = await this.iframe;\n\n    if (iframe) {\n      iframe.src = this.getIframeSrc();\n    } else {\n      throw createModalNotReadyError();\n    }\n  }\n}\n","import { Extension } from '@magic-sdk/commons';\nimport { AlgorandConfig, AlgorandPayloadMethod } from './types';\n\nexport class AlgorandExtension extends Extension.Internal<'algod', any> {\n  name = 'algod' as const;\n  config: any = {};\n\n  constructor(public algorandConfig: AlgorandConfig) {\n    super();\n\n    this.config = {\n      rpcUrl: algorandConfig.rpcUrl,\n      chainType: 'ALOGD',\n    };\n  }\n\n  public async signTransaction(txn: any) {\n    return this.request(this.utils.createJsonRpcRequestPayload(AlgorandPayloadMethod.AlgorandSignTransaction, txn));\n  }\n\n  public async signBid(txn: any) {\n    return this.request(this.utils.createJsonRpcRequestPayload(AlgorandPayloadMethod.AlgorandSignBid, txn));\n  }\n\n  public async getWallet() {\n    return this.request(this.utils.createJsonRpcRequestPayload(AlgorandPayloadMethod.AlgorandGetWallet, []));\n  }\n\n  public async signGroupTransaction(txns: any[]) {\n    return this.request(\n      this.utils.createJsonRpcRequestPayload(AlgorandPayloadMethod.AlgorandSignGroupTransaction, txns),\n    );\n  }\n\n  public async signGroupTransactionV2(txns: any) {\n    return this.request(\n      this.utils.createJsonRpcRequestPayload(AlgorandPayloadMethod.AlgorandSignGroupTransactionV2, txns),\n    );\n  }\n}\n","export { LogLevel } from './logger'\nexport { WalletManager, WalletManagerConfig, WalletManagerOptions } from './manager'\nexport {\n  AlgodConfig,\n  NetworkConfig,\n  NetworkConfigBuilder,\n  NetworkId,\n  DEFAULT_NETWORK_CONFIG\n} from './network'\nexport { State, WalletState, ManagerStatus, DEFAULT_STATE } from './store'\nexport { StorageAdapter } from './storage'\nexport { webpackFallback } from './webpack'\nexport * from './wallets'\n","export enum LogLevel {\n  DEBUG,\n  INFO,\n  WARN,\n  ERROR\n}\n\nexport class Logger {\n  private static instance: Logger | null = null\n  private level: LogLevel\n  private isClient: boolean\n\n  private constructor() {\n    this.level = LogLevel.WARN\n    this.isClient = typeof window !== 'undefined'\n  }\n\n  public static getInstance(): Logger {\n    if (!Logger.instance) {\n      Logger.instance = new Logger()\n    }\n    return Logger.instance\n  }\n\n  public static setLevel(level: LogLevel): void {\n    Logger.getInstance().level = level\n  }\n\n  private log(level: LogLevel, scope: string | undefined, message: string, ...args: any[]): void {\n    if (level >= this.level && this.isClient) {\n      const formattedMessage = scope ? `[${scope}] ${message}` : message\n      switch (level) {\n        case LogLevel.DEBUG:\n        case LogLevel.INFO:\n          console.info(formattedMessage, ...args)\n          break\n        case LogLevel.WARN:\n          console.warn(formattedMessage, ...args)\n          break\n        case LogLevel.ERROR:\n          console.error(formattedMessage, ...args)\n          break\n      }\n    }\n  }\n\n  public createScopedLogger(scope: string) {\n    return {\n      debug: (message: string, ...args: any[]) => this.log(LogLevel.DEBUG, scope, message, ...args),\n      info: (message: string, ...args: any[]) => this.log(LogLevel.INFO, scope, message, ...args),\n      warn: (message: string, ...args: any[]) => this.log(LogLevel.WARN, scope, message, ...args),\n      error: (message: string, ...args: any[]) => this.log(LogLevel.ERROR, scope, message, ...args)\n    }\n  }\n\n  public debug(message: string, ...args: any[]): void {\n    this.log(LogLevel.DEBUG, undefined, message, ...args)\n  }\n\n  public info(message: string, ...args: any[]): void {\n    this.log(LogLevel.INFO, undefined, message, ...args)\n  }\n\n  public warn(message: string, ...args: any[]): void {\n    this.log(LogLevel.WARN, undefined, message, ...args)\n  }\n\n  public error(message: string, ...args: any[]): void {\n    this.log(LogLevel.ERROR, undefined, message, ...args)\n  }\n\n  // For testing purposes\n  public setIsClient(isClient: boolean): void {\n    this.isClient = isClient\n  }\n}\n\nexport const logger = Logger.getInstance()\n","import { Store } from '@tanstack/store'\nimport algosdk from 'algosdk'\nimport { Logger, LogLevel, logger } from 'src/logger'\nimport {\n  createNetworkConfig,\n  isNetworkConfig,\n  NetworkId,\n  type AlgodConfig,\n  type NetworkConfig\n} from 'src/network'\nimport { StorageAdapter } from 'src/storage'\nimport {\n  DEFAULT_STATE,\n  isValidPersistedState,\n  LOCAL_STORAGE_KEY,\n  removeWallet,\n  setActiveNetwork,\n  setActiveWallet,\n  type State,\n  type ManagerStatus,\n  type PersistedState\n} from 'src/store'\nimport { createWalletMap } from 'src/utils'\nimport type { BaseWallet } from 'src/wallets/base'\nimport type {\n  SupportedWallet,\n  WalletAccount,\n  WalletConfigMap,\n  WalletId,\n  WalletIdConfig,\n  WalletMetadata,\n  WalletOptions\n} from 'src/wallets/types'\n\nexport interface WalletManagerOptions {\n  resetNetwork?: boolean\n  debug?: boolean\n  logLevel?: LogLevel\n}\n\nexport interface WalletManagerConfig {\n  wallets?: SupportedWallet[]\n  networks?: Record<string, NetworkConfig>\n  defaultNetwork?: string\n  options?: WalletManagerOptions\n}\n\nexport class WalletManager {\n  public _clients: Map<WalletId, BaseWallet> = new Map()\n  private baseNetworkConfig: Record<string, NetworkConfig>\n  public store: Store<State>\n  public subscribe: (callback: (state: State) => void) => () => void\n  public options: { resetNetwork: boolean }\n\n  private logger: ReturnType<typeof logger.createScopedLogger>\n\n  constructor({\n    wallets = [],\n    networks,\n    defaultNetwork = 'testnet',\n    options = {}\n  }: WalletManagerConfig = {}) {\n    // Initialize scoped logger\n    this.logger = this.initializeLogger(options)\n\n    this.logger.debug('Initializing WalletManager with config:', {\n      wallets,\n      networks,\n      defaultNetwork,\n      options\n    })\n\n    // Load persisted state from local storage\n    const persistedState = this.loadPersistedState()\n\n    // Store the base network config from `networks` (or created default)\n    this.baseNetworkConfig = networks || createNetworkConfig()\n\n    // Initialize network config\n    const networkConfig = this.initNetworkConfig(this.baseNetworkConfig, persistedState)\n\n    // Initialize options\n    this.options = { resetNetwork: options.resetNetwork || false }\n\n    // Set active network\n    const activeNetwork = this.options.resetNetwork\n      ? defaultNetwork\n      : persistedState?.activeNetwork || defaultNetwork\n\n    // Validate active network exists in config\n    if (!networkConfig[activeNetwork]) {\n      throw new Error(`Network \"${activeNetwork}\" not found in network configuration`)\n    }\n\n    // Create Algod client for active network\n    const algodClient = this.createAlgodClient(networkConfig[activeNetwork].algod)\n\n    // Create initial state\n    const initialState: State = {\n      ...DEFAULT_STATE,\n      ...persistedState,\n      networkConfig,\n      activeNetwork,\n      algodClient\n    }\n\n    // Create store\n    this.store = new Store<State>(initialState, {\n      onUpdate: () => this.savePersistedState()\n    })\n\n    // Save persisted state immediately\n    this.savePersistedState()\n\n    // Subscribe to store updates\n    this.subscribe = (callback: (state: State) => void): (() => void) => {\n      const unsubscribe = this.store.subscribe(() => {\n        callback(this.store.state)\n      })\n\n      return unsubscribe\n    }\n\n    // Initialize wallets\n    this.initializeWallets(wallets)\n  }\n\n  // ---------- Logging ----------------------------------------------- //\n\n  private initializeLogger(\n    options: WalletManagerOptions\n  ): ReturnType<typeof logger.createScopedLogger> {\n    const logLevel = this.determineLogLevel(options)\n    Logger.setLevel(logLevel)\n    return logger.createScopedLogger('WalletManager')\n  }\n\n  private determineLogLevel(options: WalletManagerOptions): LogLevel {\n    if (options?.debug) {\n      return LogLevel.DEBUG\n    }\n    return options?.logLevel !== undefined ? options.logLevel : LogLevel.WARN\n  }\n\n  // ---------- Store ------------------------------------------------- //\n\n  public get algodClient(): algosdk.Algodv2 {\n    return this.store.state.algodClient\n  }\n\n  public set algodClient(algodClient: algosdk.Algodv2) {\n    this.store.setState((state) => ({\n      ...state,\n      algodClient\n    }))\n  }\n\n  private loadPersistedState(): PersistedState | null {\n    try {\n      const serializedState = StorageAdapter.getItem(LOCAL_STORAGE_KEY)\n      if (serializedState === null) {\n        return null\n      }\n      const parsedState = JSON.parse(serializedState)\n      if (!isValidPersistedState(parsedState)) {\n        this.logger.warn('Parsed state:', parsedState)\n        throw new Error('Persisted state is invalid')\n      }\n      return parsedState\n    } catch (error: any) {\n      this.logger.error(`Could not load state from local storage: ${error.message}`)\n      return null\n    }\n  }\n\n  private savePersistedState(): void {\n    try {\n      const { wallets, activeWallet, activeNetwork, networkConfig } = this.store.state\n      const persistedState: PersistedState = {\n        wallets,\n        activeWallet,\n        activeNetwork,\n        customNetworkConfigs: {}\n      }\n\n      // Compare current network config with base config to find user customizations\n      for (const [networkId, currentConfig] of Object.entries(networkConfig)) {\n        const baseNetworkConfig = this.baseNetworkConfig[networkId]\n        if (!baseNetworkConfig) continue\n\n        // Check if there are any differences from base config\n        const customizations: Partial<NetworkConfig> = {}\n        let hasCustomizations = false\n\n        // Compare algod configuration\n        if (JSON.stringify(currentConfig.algod) !== JSON.stringify(baseNetworkConfig.algod)) {\n          customizations.algod = currentConfig.algod\n          hasCustomizations = true\n        }\n\n        // If there are customizations, add them to the persisted state\n        if (hasCustomizations) {\n          persistedState.customNetworkConfigs = {\n            ...(persistedState.customNetworkConfigs || {}),\n            [networkId]: customizations\n          }\n        }\n      }\n\n      const serializedState = JSON.stringify(persistedState)\n      StorageAdapter.setItem(LOCAL_STORAGE_KEY, serializedState)\n    } catch (error) {\n      this.logger.error('Could not save state to local storage:', error)\n    }\n  }\n\n  // ---------- Status ------------------------------------------------ //\n\n  public get status(): ManagerStatus {\n    return this.store.state.managerStatus\n  }\n\n  public get isReady(): boolean {\n    return this.store.state.managerStatus === 'ready'\n  }\n\n  // ---------- Wallets ----------------------------------------------- //\n\n  private initializeWallets<T extends keyof WalletConfigMap>(\n    walletsConfig: Array<T | WalletIdConfig<T>>\n  ) {\n    this.logger.info('Initializing wallets...')\n\n    for (const walletConfig of walletsConfig) {\n      let walletId: T\n      let walletOptions: WalletOptions<T> | undefined\n      let walletMetadata: Partial<WalletMetadata> | undefined\n\n      // Parse wallet config\n      if (typeof walletConfig === 'string') {\n        walletId = walletConfig\n      } else {\n        const { id, options, metadata } = walletConfig\n        walletId = id\n        walletOptions = options\n        walletMetadata = metadata\n      }\n\n      // Get wallet class\n      const walletMap = createWalletMap()\n      const WalletClass = walletMap[walletId]\n      if (!WalletClass) {\n        this.logger.error(`Wallet not found: ${walletId}`)\n        continue\n      }\n\n      // Initialize wallet\n      const walletInstance = new WalletClass({\n        id: walletId,\n        metadata: walletMetadata,\n        options: walletOptions as any,\n        getAlgodClient: this.getAlgodClient,\n        store: this.store,\n        subscribe: this.subscribe\n      })\n\n      this._clients.set(walletId, walletInstance)\n      this.logger.info(`✅ Initialized ${walletId}`)\n    }\n\n    const state = this.store.state\n\n    // Check if connected wallets are still valid\n    const connectedWallets = Object.keys(state.wallets) as WalletId[]\n    for (const walletId of connectedWallets) {\n      if (!this._clients.has(walletId)) {\n        this.logger.warn(`Connected wallet not found: ${walletId}`)\n        removeWallet(this.store, { walletId })\n      }\n    }\n\n    // Check if active wallet is still valid\n    if (state.activeWallet && !this._clients.has(state.activeWallet)) {\n      this.logger.warn(`Active wallet not found: ${state.activeWallet}`)\n      setActiveWallet(this.store, { walletId: null })\n    }\n  }\n\n  public get wallets(): BaseWallet[] {\n    return [...this._clients.values()]\n  }\n\n  public getWallet(walletId: WalletId): BaseWallet | undefined {\n    return this._clients.get(walletId)\n  }\n\n  public async resumeSessions(): Promise<void> {\n    try {\n      const promises = this.wallets.map((wallet) => wallet?.resumeSession())\n      await Promise.all(promises)\n    } finally {\n      this.store.setState((state) => ({\n        ...state,\n        managerStatus: 'ready'\n      }))\n    }\n  }\n\n  public async disconnect(): Promise<void> {\n    const promises = this.wallets\n      .filter((wallet) => wallet.isConnected)\n      .map((wallet) => wallet?.disconnect())\n\n    await Promise.all(promises)\n  }\n\n  // ---------- Network ----------------------------------------------- //\n\n  private initNetworkConfig(\n    baseConfig: Record<string, NetworkConfig>,\n    persistedState?: PersistedState | null\n  ): Record<string, NetworkConfig> {\n    this.logger.info('Initializing network configuration...')\n\n    // Use provided persisted state for custom configurations\n    const customConfigs = persistedState?.customNetworkConfigs || {}\n\n    // Merge base config with custom overrides\n    const config: Record<string, NetworkConfig> = {}\n    for (const [networkId, baseNetworkConfig] of Object.entries(baseConfig)) {\n      const customNetworkConfig = customConfigs[networkId]\n      config[networkId] = {\n        ...baseNetworkConfig,\n        ...customNetworkConfig,\n        // Ensure algod config is also deeply merged\n        algod: {\n          ...baseNetworkConfig.algod,\n          ...(customNetworkConfig?.algod || {})\n        }\n      }\n    }\n\n    // Validate network configurations\n    for (const [id, network] of Object.entries(config)) {\n      if (!isNetworkConfig(network)) {\n        throw new Error(`Invalid network configuration for \"${id}\"`)\n      }\n    }\n\n    this.logger.debug('Network configuration:', config)\n    return config\n  }\n\n  private createAlgodClient(config: AlgodConfig): algosdk.Algodv2 {\n    this.logger.info(`Creating new Algodv2 client...`)\n\n    const { token = '', baseServer, port = '', headers = {} } = config\n    return new algosdk.Algodv2(token, baseServer, port, headers)\n  }\n\n  public getAlgodClient = (): algosdk.Algodv2 => {\n    return this.algodClient\n  }\n\n  public setActiveNetwork = async (networkId: NetworkId | string): Promise<void> => {\n    if (this.activeNetwork === networkId) {\n      return\n    }\n\n    if (!this.networkConfig[networkId]) {\n      throw new Error(`Network \"${networkId}\" not found in network configuration`)\n    }\n\n    const algodClient = this.createAlgodClient(this.networkConfig[networkId].algod)\n    setActiveNetwork(this.store, { networkId, algodClient })\n\n    this.logger.info(`✅ Active network set to ${networkId}`)\n  }\n\n  public updateAlgodConfig(networkId: string, algodConfig: Partial<AlgodConfig>): void {\n    // Verify network exists\n    if (!this.networkConfig[networkId]) {\n      throw new Error(`Network \"${networkId}\" not found in network configuration`)\n    }\n\n    // Create new config merging existing with updates\n    const updatedConfig = {\n      ...this.networkConfig[networkId],\n      algod: {\n        ...this.networkConfig[networkId].algod,\n        ...algodConfig\n      }\n    }\n\n    // Validate the new configuration\n    if (!isNetworkConfig(updatedConfig)) {\n      throw new Error('Invalid network configuration')\n    }\n\n    // Update the network config\n    this.store.setState((state) => ({\n      ...state,\n      networkConfig: {\n        ...state.networkConfig,\n        [networkId]: updatedConfig\n      }\n    }))\n\n    // If this is the active network, update the algod client\n    if (this.activeNetwork === networkId) {\n      this.algodClient = this.createAlgodClient(updatedConfig.algod)\n    }\n\n    // Save the updated configuration\n    this.savePersistedState()\n\n    this.logger.info(`✅ Updated algod configuration for ${networkId}`)\n  }\n\n  public resetNetworkConfig(networkId: string): void {\n    // Verify network exists\n    if (!this.baseNetworkConfig[networkId]) {\n      throw new Error(`Network \"${networkId}\" not found in network configuration`)\n    }\n\n    // Reset to base configuration\n    this.store.setState((state) => ({\n      ...state,\n      networkConfig: {\n        ...state.networkConfig,\n        [networkId]: { ...this.baseNetworkConfig[networkId] }\n      }\n    }))\n\n    // If this is the active network, update the algod client\n    if (this.activeNetwork === networkId) {\n      this.algodClient = this.createAlgodClient(this.baseNetworkConfig[networkId].algod)\n    }\n\n    // Load current persisted state\n    const persistedState = this.loadPersistedState()\n    if (persistedState?.customNetworkConfigs) {\n      // Remove the network's customizations\n      delete persistedState.customNetworkConfigs[networkId]\n      // Save the updated state\n      StorageAdapter.setItem(LOCAL_STORAGE_KEY, JSON.stringify(persistedState))\n    }\n\n    this.logger.info(`✅ Reset network configuration for ${networkId}`)\n  }\n\n  public get activeNetwork(): string {\n    return this.store.state.activeNetwork\n  }\n\n  public get networkConfig(): Record<string, NetworkConfig> {\n    return this.store.state.networkConfig\n  }\n\n  public get activeNetworkConfig(): NetworkConfig {\n    const { networkConfig, activeNetwork } = this.store.state\n    return networkConfig[activeNetwork]\n  }\n\n  // ---------- Active Wallet ----------------------------------------- //\n\n  public get activeWallet(): BaseWallet | null {\n    const state = this.store.state\n    const activeWallet = this.wallets.find((wallet) => wallet.id === state.activeWallet)\n    if (!activeWallet) {\n      return null\n    }\n\n    return activeWallet\n  }\n\n  public get activeWalletAccounts(): WalletAccount[] | null {\n    if (!this.activeWallet) {\n      return null\n    }\n    return this.activeWallet.accounts\n  }\n\n  public get activeWalletAddresses(): string[] | null {\n    if (!this.activeWallet) {\n      return null\n    }\n    return this.activeWallet.accounts.map((account) => account.address)\n  }\n\n  public get activeAccount(): WalletAccount | null {\n    if (!this.activeWallet) {\n      return null\n    }\n    return this.activeWallet.activeAccount\n  }\n\n  public get activeAddress(): string | null {\n    if (!this.activeAccount) {\n      return null\n    }\n    return this.activeAccount.address\n  }\n\n  // ---------- Sign Transactions ------------------------------------- //\n\n  public get signTransactions(): BaseWallet['signTransactions'] {\n    if (!this.activeWallet) {\n      this.logger.error('No active wallet found!')\n      throw new Error('No active wallet found!')\n    }\n    return this.activeWallet.signTransactions\n  }\n\n  public get transactionSigner(): algosdk.TransactionSigner {\n    if (!this.activeWallet) {\n      this.logger.error('No active wallet found!')\n      throw new Error('No active wallet found!')\n    }\n    return this.activeWallet.transactionSigner\n  }\n}\n","import algosdk from 'algosdk'\n\nexport interface AlgodConfig {\n  token: string | algosdk.AlgodTokenHeader | algosdk.CustomTokenHeader | algosdk.BaseHTTPClient\n  baseServer: string\n  port?: string | number\n  headers?: Record<string, string>\n}\n\nexport interface NetworkConfig {\n  algod: AlgodConfig\n  genesisHash?: string\n  genesisId?: string\n  isTestnet?: boolean\n  caipChainId?: string\n}\n\n// Default configurations\nexport const DEFAULT_NETWORK_CONFIG: Record<string, NetworkConfig> = {\n  mainnet: {\n    algod: {\n      token: '',\n      baseServer: 'https://mainnet-api.4160.nodely.dev',\n      headers: {}\n    },\n    isTestnet: false,\n    genesisHash: 'wGHE2Pwdvd7S12BL5FaOP20EGYesN73ktiC1qzkkit8=',\n    genesisId: 'mainnet-v1.0',\n    caipChainId: 'algorand:wGHE2Pwdvd7S12BL5FaOP20EGYesN73k'\n  },\n  testnet: {\n    algod: {\n      token: '',\n      baseServer: 'https://testnet-api.4160.nodely.dev',\n      headers: {}\n    },\n    isTestnet: true,\n    genesisHash: 'SGO1GKSzyE7IEPItTxCByw9x8FmnrCDexi9/cOUJOiI=',\n    genesisId: 'testnet-v1.0',\n    caipChainId: 'algorand:SGO1GKSzyE7IEPItTxCByw9x8FmnrCDe'\n  },\n  betanet: {\n    algod: {\n      token: '',\n      baseServer: 'https://betanet-api.4160.nodely.dev',\n      headers: {}\n    },\n    isTestnet: true,\n    genesisHash: 'mFgazF-2uRS1tMiL9dsj01hJGySEmPN2OvOTQHJ6iQg=',\n    genesisId: 'betanet-v1.0',\n    caipChainId: 'algorand:mFgazF-2uRS1tMiL9dsj01hJGySEmPN2'\n  },\n  fnet: {\n    algod: {\n      token: '',\n      baseServer: 'https://fnet-api.4160.nodely.dev',\n      headers: {}\n    },\n    isTestnet: true,\n    genesisHash: 'kUt08LxeVAAGHnh4JoAoAMM9ql_hBwSoRrQQKWSVgxk=',\n    genesisId: 'fnet-v1.0',\n    caipChainId: 'algorand:kUt08LxeVAAGHnh4JoAoAMM9ql_hBwSo'\n  },\n  localnet: {\n    algod: {\n      token: 'a'.repeat(64),\n      baseServer: 'http://localhost',\n      port: 4001,\n      headers: {}\n    },\n    isTestnet: true\n  }\n}\n\n// Type for configuring default networks, excluding immutable identifiers\nexport type DefaultNetworkConfig = Omit<\n  Partial<NetworkConfig>,\n  'genesisHash' | 'genesisId' | 'caipChainId'\n>\n\nexport class NetworkConfigBuilder {\n  private networks: Map<string, NetworkConfig>\n\n  constructor() {\n    this.networks = new Map(Object.entries(DEFAULT_NETWORK_CONFIG))\n  }\n\n  // Methods to customize default networks\n  mainnet(config: DefaultNetworkConfig) {\n    this.networks.set('mainnet', {\n      ...DEFAULT_NETWORK_CONFIG.mainnet,\n      ...config,\n      genesisHash: DEFAULT_NETWORK_CONFIG.mainnet.genesisHash!,\n      genesisId: DEFAULT_NETWORK_CONFIG.mainnet.genesisId!,\n      caipChainId: DEFAULT_NETWORK_CONFIG.mainnet.caipChainId!,\n      algod: {\n        ...DEFAULT_NETWORK_CONFIG.mainnet.algod,\n        ...(config.algod || {})\n      }\n    })\n    return this\n  }\n\n  testnet(config: DefaultNetworkConfig) {\n    this.networks.set('testnet', {\n      ...DEFAULT_NETWORK_CONFIG.testnet,\n      ...config,\n      genesisHash: DEFAULT_NETWORK_CONFIG.testnet.genesisHash!,\n      genesisId: DEFAULT_NETWORK_CONFIG.testnet.genesisId!,\n      caipChainId: DEFAULT_NETWORK_CONFIG.testnet.caipChainId!,\n      algod: {\n        ...DEFAULT_NETWORK_CONFIG.testnet.algod,\n        ...(config.algod || {})\n      }\n    })\n    return this\n  }\n\n  betanet(config: DefaultNetworkConfig) {\n    this.networks.set('betanet', {\n      ...DEFAULT_NETWORK_CONFIG.betanet,\n      ...config,\n      genesisHash: DEFAULT_NETWORK_CONFIG.betanet.genesisHash!,\n      genesisId: DEFAULT_NETWORK_CONFIG.betanet.genesisId!,\n      caipChainId: DEFAULT_NETWORK_CONFIG.betanet.caipChainId!,\n      algod: {\n        ...DEFAULT_NETWORK_CONFIG.betanet.algod,\n        ...(config.algod || {})\n      }\n    })\n    return this\n  }\n\n  fnet(config: DefaultNetworkConfig) {\n    this.networks.set('fnet', {\n      ...DEFAULT_NETWORK_CONFIG.fnet,\n      ...config,\n      genesisHash: DEFAULT_NETWORK_CONFIG.fnet.genesisHash!,\n      genesisId: DEFAULT_NETWORK_CONFIG.fnet.genesisId!,\n      caipChainId: DEFAULT_NETWORK_CONFIG.fnet.caipChainId!,\n      algod: {\n        ...DEFAULT_NETWORK_CONFIG.fnet.algod,\n        ...(config.algod || {})\n      }\n    })\n    return this\n  }\n\n  localnet(config: Partial<NetworkConfig>) {\n    this.networks.set('localnet', {\n      ...DEFAULT_NETWORK_CONFIG.localnet,\n      ...config,\n      algod: {\n        ...DEFAULT_NETWORK_CONFIG.localnet.algod,\n        ...(config.algod || {})\n      }\n    })\n    return this\n  }\n\n  // Method to add custom networks (still needs full NetworkConfig)\n  addNetwork(id: string, config: NetworkConfig) {\n    if (DEFAULT_NETWORK_CONFIG[id]) {\n      throw new Error(\n        `Cannot add network with reserved id \"${id}\". Use the ${id}() method instead.`\n      )\n    }\n    this.networks.set(id, config)\n    return this\n  }\n\n  build() {\n    return Object.fromEntries(this.networks)\n  }\n}\n\n// Create a default builder with common presets\nexport const createNetworkConfig = () => new NetworkConfigBuilder().build()\n\n// Check if the algod token is valid\nfunction isValidToken(\n  token: unknown\n): token is string | algosdk.AlgodTokenHeader | algosdk.CustomTokenHeader | algosdk.BaseHTTPClient {\n  if (typeof token === 'string') return true\n  if (typeof token !== 'object' || token === null) return false\n\n  // Check if it's an AlgodTokenHeader\n  if ('X-Algo-API-Token' in token && typeof token['X-Algo-API-Token'] === 'string') return true\n\n  // Check if it's a BaseHTTPClient\n  if ('get' in token && 'post' in token && 'delete' in token) return true\n\n  // Check if it's a CustomTokenHeader (object with string values)\n  return Object.values(token).every((value) => typeof value === 'string')\n}\n\n// Type guard for runtime validation\nexport function isNetworkConfig(config: unknown): config is NetworkConfig {\n  if (typeof config !== 'object' || config === null) return false\n\n  const { algod, isTestnet, genesisHash, genesisId, caipChainId } = config as NetworkConfig\n\n  const isValidAlgod =\n    typeof algod === 'object' &&\n    algod !== null &&\n    isValidToken(algod.token) &&\n    typeof algod.baseServer === 'string'\n\n  return (\n    isValidAlgod &&\n    (isTestnet === undefined || typeof isTestnet === 'boolean') &&\n    (genesisHash === undefined || typeof genesisHash === 'string') &&\n    (genesisId === undefined || typeof genesisId === 'string') &&\n    (caipChainId === undefined || typeof caipChainId === 'string')\n  )\n}\n\nexport enum NetworkId {\n  MAINNET = 'mainnet',\n  TESTNET = 'testnet',\n  BETANET = 'betanet',\n  FNET = 'fnet',\n  LOCALNET = 'localnet'\n}\n","export class StorageAdapter {\n  static getItem(key: string): string | null {\n    if (typeof window === 'undefined') {\n      return null\n    }\n    return localStorage.getItem(key)\n  }\n\n  static setItem(key: string, value: string): void {\n    if (typeof window === 'undefined') {\n      return\n    }\n    localStorage.setItem(key, value)\n  }\n\n  static removeItem(key: string): void {\n    if (typeof window === 'undefined') {\n      return\n    }\n    localStorage.removeItem(key)\n  }\n}\n","import algosdk from 'algosdk'\nimport { logger } from 'src/logger'\nimport { DEFAULT_NETWORK_CONFIG, NetworkConfig, NetworkId } from 'src/network'\nimport { WalletId, type WalletAccount } from 'src/wallets/types'\nimport type { Store } from '@tanstack/store'\n\nexport type WalletState = {\n  accounts: WalletAccount[]\n  activeAccount: WalletAccount | null\n}\n\nexport type WalletStateMap = Partial<Record<WalletId, WalletState>>\n\nexport type ManagerStatus = 'initializing' | 'ready'\n\nexport interface State {\n  wallets: WalletStateMap\n  activeWallet: WalletId | null\n  activeNetwork: string\n  algodClient: algosdk.Algodv2\n  managerStatus: ManagerStatus\n  networkConfig: Record<string, NetworkConfig>\n  customNetworkConfigs: Record<string, Partial<NetworkConfig>>\n}\n\nexport const DEFAULT_STATE: State = {\n  wallets: {},\n  activeWallet: null,\n  activeNetwork: 'testnet',\n  algodClient: new algosdk.Algodv2('', 'https://testnet-api.4160.nodely.dev/'),\n  managerStatus: 'initializing',\n  networkConfig: DEFAULT_NETWORK_CONFIG,\n  customNetworkConfigs: {}\n}\n\nexport type PersistedState = Omit<State, 'algodClient' | 'managerStatus' | 'networkConfig'>\n\nexport const LOCAL_STORAGE_KEY = '@txnlab/use-wallet:v4'\n\n// State mutations\n\nexport function addWallet(\n  store: Store<State>,\n  { walletId, wallet }: { walletId: WalletId; wallet: WalletState }\n) {\n  store.setState((state) => {\n    const updatedWallets = {\n      ...state.wallets,\n      [walletId]: {\n        accounts: wallet.accounts.map((account) => ({ ...account })),\n        activeAccount: wallet.activeAccount ? { ...wallet.activeAccount } : null\n      }\n    }\n\n    return {\n      ...state,\n      wallets: updatedWallets,\n      activeWallet: walletId\n    }\n  })\n}\n\nexport function removeWallet(store: Store<State>, { walletId }: { walletId: WalletId }) {\n  store.setState((state) => {\n    const updatedWallets = { ...state.wallets }\n    delete updatedWallets[walletId]\n\n    return {\n      ...state,\n      wallets: updatedWallets,\n      activeWallet: state.activeWallet === walletId ? null : state.activeWallet\n    }\n  })\n}\n\nexport function setActiveWallet(store: Store<State>, { walletId }: { walletId: WalletId | null }) {\n  store.setState((state) => ({\n    ...state,\n    activeWallet: walletId\n  }))\n}\n\nexport function setActiveAccount(\n  store: Store<State>,\n  { walletId, address }: { walletId: WalletId; address: string }\n) {\n  store.setState((state) => {\n    const wallet = state.wallets[walletId]\n    if (!wallet) {\n      logger.warn(`Wallet with id \"${walletId}\" not found`)\n      return state\n    }\n\n    const newActiveAccount = wallet.accounts.find((a) => a.address === address)\n    if (!newActiveAccount) {\n      logger.warn(`Account with address ${address} not found in wallet \"${walletId}\"`)\n      return state\n    }\n\n    const updatedWallet = {\n      ...wallet,\n      accounts: wallet.accounts.map((account) => ({ ...account })),\n      activeAccount: { ...newActiveAccount }\n    }\n\n    const updatedWallets = {\n      ...state.wallets,\n      [walletId]: updatedWallet\n    }\n\n    return {\n      ...state,\n      wallets: updatedWallets\n    }\n  })\n}\n\nexport function setAccounts(\n  store: Store<State>,\n  { walletId, accounts }: { walletId: WalletId; accounts: WalletAccount[] }\n) {\n  store.setState((state) => {\n    const wallet = state.wallets[walletId]\n    if (!wallet) {\n      logger.warn(`Wallet with id \"${walletId}\" not found`)\n      return state\n    }\n\n    const newAccounts = accounts.map((account) => ({ ...account }))\n\n    const isActiveAccountConnected = newAccounts.some(\n      (account) => account.address === wallet.activeAccount?.address\n    )\n\n    const newActiveAccount = isActiveAccountConnected\n      ? { ...wallet.activeAccount! }\n      : newAccounts[0] || null\n\n    const updatedWallet = {\n      ...wallet,\n      accounts: newAccounts,\n      activeAccount: newActiveAccount\n    }\n\n    const updatedWallets = {\n      ...state.wallets,\n      [walletId]: updatedWallet\n    }\n\n    return {\n      ...state,\n      wallets: updatedWallets\n    }\n  })\n}\n\nexport function setActiveNetwork(\n  store: Store<State>,\n  { networkId, algodClient }: { networkId: NetworkId | string; algodClient: algosdk.Algodv2 }\n) {\n  store.setState((state) => ({\n    ...state,\n    activeNetwork: networkId,\n    algodClient\n  }))\n}\n\n// Type guards\n\nexport function isValidWalletId(walletId: any): walletId is WalletId {\n  return Object.values(WalletId).includes(walletId)\n}\n\nexport function isValidWalletAccount(account: any): account is WalletAccount {\n  return (\n    typeof account === 'object' &&\n    account !== null &&\n    typeof account.name === 'string' &&\n    typeof account.address === 'string'\n  )\n}\n\nexport function isValidWalletState(wallet: any): wallet is WalletState {\n  return (\n    typeof wallet === 'object' &&\n    wallet !== null &&\n    Array.isArray(wallet.accounts) &&\n    wallet.accounts.every(isValidWalletAccount) &&\n    (wallet.activeAccount === null || isValidWalletAccount(wallet.activeAccount))\n  )\n}\n\nexport function isValidPersistedState(state: unknown): state is PersistedState {\n  return (\n    typeof state === 'object' &&\n    state !== null &&\n    'wallets' in state &&\n    'activeWallet' in state &&\n    'activeNetwork' in state &&\n    (!('customNetworkConfigs' in state) ||\n      (typeof state.customNetworkConfigs === 'object' && state.customNetworkConfigs !== null))\n  )\n}\n","import { CustomWallet, CustomWalletOptions } from './custom'\nimport { DeflyWallet, type DeflyWalletConnectOptions } from './defly'\nimport { DeflyWebWallet } from './defly-web'\nimport { ExodusWallet, type ExodusOptions } from './exodus'\nimport { KibisisWallet } from './kibisis'\nimport { KmdWallet, type KmdOptions } from './kmd'\nimport { LuteConnectOptions, LuteWallet } from './lute'\nimport { MagicAuth, MagicAuthOptions } from './magic'\nimport { MnemonicWallet, type MnemonicOptions } from './mnemonic'\nimport { PeraWallet, type PeraWalletConnectOptions } from './pera'\nimport { WalletConnect, type WalletConnectOptions } from './walletconnect'\nimport { BiatecWallet } from './biatec'\nimport type { Store } from '@tanstack/store'\nimport type algosdk from 'algosdk'\nimport type { State } from 'src/store'\n\nexport enum WalletId {\n  BIATEC = 'biatec',\n  DEFLY = 'defly',\n  DEFLY_WEB = 'defly-web',\n  CUSTOM = 'custom',\n  EXODUS = 'exodus',\n  KIBISIS = 'kibisis',\n  KMD = 'kmd',\n  LUTE = 'lute',\n  MAGIC = 'magic',\n  MNEMONIC = 'mnemonic',\n  PERA = 'pera',\n  WALLETCONNECT = 'walletconnect'\n}\n\nexport type WalletMap = {\n  [WalletId.BIATEC]: typeof BiatecWallet\n  [WalletId.CUSTOM]: typeof CustomWallet\n  [WalletId.DEFLY]: typeof DeflyWallet\n  [WalletId.DEFLY_WEB]: typeof DeflyWebWallet\n  [WalletId.EXODUS]: typeof ExodusWallet\n  [WalletId.KIBISIS]: typeof KibisisWallet\n  [WalletId.KMD]: typeof KmdWallet\n  [WalletId.LUTE]: typeof LuteWallet\n  [WalletId.MAGIC]: typeof MagicAuth\n  [WalletId.MNEMONIC]: typeof MnemonicWallet\n  [WalletId.PERA]: typeof PeraWallet\n  [WalletId.WALLETCONNECT]: typeof WalletConnect\n}\n\nexport type WalletOptionsMap = {\n  [WalletId.BIATEC]: WalletConnectOptions\n  [WalletId.CUSTOM]: CustomWalletOptions\n  [WalletId.DEFLY]: DeflyWalletConnectOptions\n  [WalletId.DEFLY_WEB]: Record<string, never>\n  [WalletId.EXODUS]: ExodusOptions\n  [WalletId.KIBISIS]: Record<string, never>\n  [WalletId.KMD]: KmdOptions\n  [WalletId.LUTE]: LuteConnectOptions\n  [WalletId.MAGIC]: MagicAuthOptions\n  [WalletId.MNEMONIC]: MnemonicOptions\n  [WalletId.PERA]: PeraWalletConnectOptions\n  [WalletId.WALLETCONNECT]: WalletConnectOptions\n}\n\nexport type SupportedWallet = WalletIdConfig<WalletId> | WalletId\n\nexport type WalletConfigMap = {\n  [K in keyof WalletOptionsMap]: {\n    options?: WalletOptionsMap[K]\n    metadata?: Partial<WalletMetadata>\n  }\n}\n\nexport type WalletOptions<T extends keyof WalletOptionsMap> = WalletOptionsMap[T]\n\nexport type WalletConfig<T extends keyof WalletConfigMap> = WalletConfigMap[T]\n\nexport type WalletIdConfig<T extends keyof WalletConfigMap> = {\n  [K in T]: {\n    id: K\n  } & WalletConfigMap[K]\n}[T]\n\ntype NonEmptyArray<T> = [T, ...T[]]\n\nexport type SupportedWallets = NonEmptyArray<SupportedWallet>\n\nexport type WalletMetadata = {\n  name: string\n  icon: string\n}\n\nexport interface BaseWalletConstructor {\n  id: WalletId\n  metadata: Partial<WalletMetadata> | undefined\n  getAlgodClient: () => algosdk.Algodv2\n  store: Store<State>\n  subscribe: (callback: (state: State) => void) => () => void\n}\n\nexport type WalletConstructor<T extends keyof WalletOptionsMap> = BaseWalletConstructor & {\n  options?: WalletOptions<T>\n  defaultMetadata?: WalletMetadata\n}\n\nexport type WalletAccount = {\n  name: string\n  address: string\n}\n\n// Transaction types\n\n/** @see https://github.com/algorandfoundation/ARCs/blob/main/ARCs/arc-0001.md#interface-multisigmetadata */\nexport interface MultisigMetadata {\n  /**\n   * Multisig version.\n   */\n  version: number\n\n  /**\n   * Multisig threshold value. Authorization requires a subset of signatures,\n   * equal to or greater than the threshold value.\n   */\n  threshold: number\n\n  /**\n   * List of Algorand addresses of possible signers for this\n   * multisig. Order is important.\n   */\n  addrs: string[]\n}\n\n/** @see https://github.com/algorandfoundation/ARCs/blob/main/ARCs/arc-0001.md#interface-wallettransaction */\nexport interface WalletTransaction {\n  /**\n   * Base64 encoding of the canonical msgpack encoding of a Transaction.\n   */\n  txn: string\n\n  /**\n   * Optional authorized address used to sign the transaction when the account\n   * is rekeyed. Also called the signor/sgnr.\n   */\n  authAddr?: string\n\n  /**\n   * Multisig metadata used to sign the transaction\n   */\n  msig?: MultisigMetadata\n\n  /**\n   * Optional list of addresses that must sign the transactions\n   */\n  signers?: string[]\n\n  /**\n   * Optional base64 encoding of the canonical msgpack encoding of a\n   * SignedTxn corresponding to txn, when signers=[]\n   */\n  stxn?: string\n\n  /**\n   * Optional message explaining the reason of the transaction\n   */\n  message?: string\n\n  /**\n   * Optional message explaining the reason of this group of transaction\n   * Field only allowed in the first transaction of a group\n   */\n  groupMessage?: string\n}\n\n/** @see https://github.com/perawallet/connect/blob/1.3.4/src/util/model/peraWalletModels.ts */\nexport interface SignerTransaction {\n  txn: algosdk.Transaction\n\n  /**\n   * Optional authorized address used to sign the transaction when\n   * the account is rekeyed. Also called the signor/sgnr.\n   */\n  authAddr?: string\n\n  /**\n   * Optional list of addresses that must sign the transactions.\n   * Wallet skips to sign this txn if signers is empty array.\n   * If undefined, wallet tries to sign it.\n   */\n  signers?: string[]\n\n  /**\n   * Optional message explaining the reason of the transaction\n   */\n  message?: string\n}\n\nexport interface JsonRpcRequest<T = any> {\n  id: number\n  jsonrpc: string\n  method: string\n  params: T\n}\n\nexport class SignTxnsError extends Error {\n  code: number\n  data?: any\n\n  constructor(message: string, code: number, data?: any) {\n    super(message)\n    this.name = 'SignTxnsError'\n    this.code = code\n    this.data = data\n  }\n}\n","import algosdk from 'algosdk'\nimport { WalletId, type JsonRpcRequest, type WalletAccount, type WalletMap } from './wallets/types'\nimport { BiatecWallet } from './wallets/biatec'\nimport { CustomWallet } from './wallets/custom'\nimport { DeflyWallet } from './wallets/defly'\nimport { DeflyWebWallet } from './wallets/defly-web'\nimport { ExodusWallet } from './wallets/exodus'\nimport { KibisisWallet } from './wallets/kibisis'\nimport { KmdWallet } from './wallets/kmd'\nimport { LuteWallet } from './wallets/lute'\nimport { MagicAuth } from './wallets/magic'\nimport { MnemonicWallet } from './wallets/mnemonic'\nimport { PeraWallet } from './wallets/pera'\nimport { WalletConnect } from './wallets/walletconnect'\n\nexport function createWalletMap(): WalletMap {\n  return {\n    [WalletId.BIATEC]: BiatecWallet,\n    [WalletId.CUSTOM]: CustomWallet,\n    [WalletId.DEFLY]: DeflyWallet,\n    [WalletId.DEFLY_WEB]: DeflyWebWallet,\n    [WalletId.EXODUS]: ExodusWallet,\n    [WalletId.KIBISIS]: KibisisWallet,\n    [WalletId.KMD]: KmdWallet,\n    [WalletId.LUTE]: LuteWallet,\n    [WalletId.MAGIC]: MagicAuth,\n    [WalletId.MNEMONIC]: MnemonicWallet,\n    [WalletId.PERA]: PeraWallet,\n    [WalletId.WALLETCONNECT]: WalletConnect\n  }\n}\n\nexport function compareAccounts(accounts: WalletAccount[], compareTo: WalletAccount[]): boolean {\n  const addresses = new Set(accounts.map((account) => account.address))\n  const compareAddresses = new Set(compareTo.map((account) => account.address))\n\n  if (addresses.size !== compareAddresses.size) {\n    return false\n  }\n\n  // Check if every address in addresses is also in compareAddresses\n  for (const address of addresses) {\n    if (!compareAddresses.has(address)) {\n      return false\n    }\n  }\n\n  return true\n}\n\nexport function base64ToByteArray(blob: string): Uint8Array {\n  return stringToByteArray(atob(blob))\n}\n\nexport function byteArrayToBase64(array: Uint8Array): string {\n  return btoa(byteArrayToString(array))\n}\n\nexport function stringToByteArray(str: string): Uint8Array {\n  const array = new Uint8Array(str.length)\n  for (let i = 0; i < str.length; i++) {\n    array[i] = str.charCodeAt(i)\n  }\n  return array\n}\n\nexport function byteArrayToString(array: Uint8Array): string {\n  let result = ''\n  for (let i = 0; i < array.length; i++) {\n    result += String.fromCharCode(array[i])\n  }\n  return result\n}\n\nexport function isSignedTxn(txnObj: any): boolean {\n  if (!txnObj || typeof txnObj !== 'object') return false\n  if (!('sig' in txnObj && 'txn' in txnObj)) return false\n\n  // Verify sig is a Uint8Array\n  if (!(txnObj.sig instanceof Uint8Array)) return false\n\n  // Verify txn is an object\n  const txn = txnObj.txn\n  if (!txn || typeof txn !== 'object') return false\n\n  // Check for common transaction properties\n  const hasRequiredProps = 'type' in txn && 'snd' in txn\n\n  return hasRequiredProps\n}\n\nexport function isTransaction(item: any): item is algosdk.Transaction {\n  return (\n    item &&\n    typeof item === 'object' &&\n    'sender' in item &&\n    (item.sender instanceof algosdk.Address || typeof item.sender === 'string')\n  )\n}\n\nexport function isTransactionArray(\n  txnGroup: any\n): txnGroup is algosdk.Transaction[] | algosdk.Transaction[][] {\n  if (!Array.isArray(txnGroup) || txnGroup.length === 0) {\n    return false\n  }\n\n  if (isTransaction(txnGroup[0])) {\n    return true\n  }\n\n  if (Array.isArray(txnGroup[0]) && txnGroup[0].length > 0 && isTransaction(txnGroup[0][0])) {\n    return true\n  }\n\n  return false\n}\n\nexport function flattenTxnGroup<T>(txnGroup: T[]): T[] {\n  if (!Array.isArray(txnGroup[0])) {\n    return txnGroup\n  }\n  return (txnGroup as unknown as any[]).flat()\n}\n\nfunction getPayloadId(): number {\n  const date = Date.now() * Math.pow(10, 3)\n  const extra = Math.floor(Math.random() * Math.pow(10, 3))\n  return date + extra\n}\n\nexport function formatJsonRpcRequest<T = any>(method: string, params: T): JsonRpcRequest<T> {\n  return {\n    id: getPayloadId(),\n    jsonrpc: '2.0',\n    method,\n    params\n  }\n}\n\n// @todo: remove\nexport function deepMerge(target: any, source: any): any {\n  const isObject = (obj: any) => obj && typeof obj === 'object'\n\n  if (!isObject(target) || !isObject(source)) {\n    throw new Error('Target and source must be objects')\n  }\n\n  Object.keys(source).forEach((key) => {\n    const targetValue = target[key]\n    const sourceValue = source[key]\n\n    if (Array.isArray(targetValue) && Array.isArray(sourceValue)) {\n      target[key] = targetValue.concat(sourceValue)\n    } else if (isObject(targetValue) && isObject(sourceValue)) {\n      target[key] = deepMerge(Object.assign({}, targetValue), sourceValue)\n    } else {\n      target[key] = sourceValue\n    }\n  })\n\n  return target\n}\n","import algosdk from 'algosdk'\nimport { WalletState, addWallet, setAccounts, type State } from 'src/store'\nimport {\n  base64ToByteArray,\n  byteArrayToBase64,\n  compareAccounts,\n  flattenTxnGroup,\n  formatJsonRpcRequest,\n  isSignedTxn,\n  isTransactionArray\n} from 'src/utils'\nimport { BaseWallet } from 'src/wallets/base'\nimport type { Store } from '@tanstack/store'\nimport type { WalletConnectModal, WalletConnectModalConfig } from '@walletconnect/modal'\nimport type SignClient from '@walletconnect/sign-client'\nimport type { SessionTypes, SignClientTypes } from '@walletconnect/types'\nimport type {\n  WalletAccount,\n  WalletConstructor,\n  WalletId,\n  WalletTransaction\n} from 'src/wallets/types'\n\ninterface SignClientOptions {\n  projectId: string\n  relayUrl?: string\n  metadata?: SignClientTypes.Metadata\n}\n\ntype WalletConnectModalOptions = Pick<\n  WalletConnectModalConfig,\n  | 'enableExplorer'\n  | 'explorerRecommendedWalletIds'\n  | 'privacyPolicyUrl'\n  | 'termsOfServiceUrl'\n  | 'themeMode'\n  | 'themeVariables'\n>\n\nexport type WalletConnectOptions = SignClientOptions & WalletConnectModalOptions\n\nexport type SignTxnsResponse = Array<Uint8Array | number[] | string | null | undefined>\n\nexport class SessionError extends Error {\n  constructor(message: string) {\n    super(message)\n    this.name = 'SessionError'\n  }\n}\n\nconst ICON = `data:image/svg+xml;base64,${btoa(`\n<svg viewBox=\"0 0 480 480\" xmlns=\"http://www.w3.org/2000/svg\">\n  <rect width=\"480\" height=\"480\" fill=\"#FFFFFF\" />\n  <path fill=\"#3396FF\" d=\"M126.6,168c62.6-61.3,164.2-61.3,226.8,0l7.5,7.4c3.1,3.1,3.1,8,0,11.1l-25.8,25.2c-1.6,1.5-4.1,1.5-5.7,0l-10.4-10.2c-43.7-42.8-114.5-42.8-158.2,0l-11.1,10.9c-1.6,1.5-4.1,1.5-5.7,0l-25.8-25.2c-3.1-3.1-3.1-8,0-11.1L126.6,168zM406.7,220.2l22.9,22.5c3.1,3.1,3.1,8,0,11.1L326.2,355.1c-3.1,3.1-8.2,3.1-11.3,0l-73.4-71.9c-0.8-0.8-2.1-0.8-2.8,0l-73.4,71.9c-3.1,3.1-8.2,3.1-11.3,0L50.3,253.8c-3.1-3.1-3.1-8,0-11.1l22.9-22.5c3.1-3.1,8.2-3.1,11.3,0l73.4,71.9c0.8,0.8,2.1,0.8,2.8,0 l73.4-71.9c3.1-3.1,8.2-3.1,11.3,0l73.4,71.9c0.8,0.8,2.1,0.8,2.8,0l73.4-71.9C398.5,217.1,403.6,217.1,406.7,220.2L406.7,220.2z\" />\n</svg>\n`)}`\n\nexport class WalletConnect extends BaseWallet {\n  private client: SignClient | null = null\n  private options: SignClientOptions\n  private modal: WalletConnectModal | null = null\n  private modalOptions: WalletConnectModalOptions\n  private session: SessionTypes.Struct | null = null\n  protected store: Store<State>\n\n  constructor({\n    id,\n    store,\n    subscribe,\n    getAlgodClient,\n    options,\n    metadata = {}\n  }: WalletConstructor<WalletId.WALLETCONNECT>) {\n    super({ id, metadata, getAlgodClient, store, subscribe })\n    if (!options?.projectId) {\n      this.logger.error('Missing required option: projectId')\n      throw new Error('Missing required option: projectId')\n    }\n\n    const {\n      projectId,\n      relayUrl = 'wss://relay.walletconnect.com',\n      metadata: metadataOptions,\n      ...modalOptions\n    } = options\n\n    const clientMetadata: SignClientTypes.Metadata = {\n      ...this.getWindowMetadata(),\n      ...metadataOptions\n    }\n\n    this.options = {\n      projectId,\n      relayUrl,\n      metadata: clientMetadata\n    }\n\n    this.modalOptions = modalOptions\n    this.store = store\n  }\n\n  static defaultMetadata = {\n    name: 'WalletConnect',\n    icon: ICON\n  }\n\n  /**\n   * Get metadata from the current window. This is adapted from the @walletconnect/utils\n   * implementation, to avoid requiring the entire package as a dependency.\n   * @see https://github.com/WalletConnect/walletconnect-utils/blob/master/browser/window-metadata/src/index.ts\n   */\n  private getWindowMetadata(): SignClientTypes.Metadata {\n    let doc: Document\n    let loc: Location\n\n    const defaultMetadata = {\n      name: '',\n      description: '',\n      url: '',\n      icons: []\n    }\n\n    function getFromWindow<T>(name: string): T | undefined {\n      let res: T | undefined\n      if (typeof window !== 'undefined' && typeof (window as any)[name] !== 'undefined') {\n        res = (window as any)[name]\n      }\n      return res\n    }\n\n    function getFromWindowOrThrow<T>(name: string): T {\n      const res = getFromWindow<T>(name)\n      if (!res) {\n        throw new Error(`${name} is not defined in Window`)\n      }\n      return res\n    }\n\n    function getDocumentOrThrow(): Document {\n      return getFromWindowOrThrow<Document>('document')\n    }\n\n    function getLocationOrThrow(): Location {\n      return getFromWindowOrThrow<Location>('location')\n    }\n\n    try {\n      doc = getDocumentOrThrow()\n      loc = getLocationOrThrow()\n    } catch (error) {\n      this.logger.warn('Error getting window metadata:', error)\n      return defaultMetadata\n    }\n\n    function getIcons(): string[] {\n      const links: HTMLCollectionOf<HTMLLinkElement> = doc.getElementsByTagName('link')\n      const icons: string[] = []\n\n      for (let i = 0; i < links.length; i++) {\n        const link: HTMLLinkElement = links[i]\n\n        const rel: string | null = link.getAttribute('rel')\n        if (rel) {\n          if (rel.toLowerCase().indexOf('icon') > -1) {\n            const href: string | null = link.getAttribute('href')\n\n            if (href) {\n              if (\n                href.toLowerCase().indexOf('https:') === -1 &&\n                href.toLowerCase().indexOf('http:') === -1 &&\n                href.indexOf('//') !== 0\n              ) {\n                let absoluteHref: string = loc.protocol + '//' + loc.host\n\n                if (href.indexOf('/') === 0) {\n                  absoluteHref += href\n                } else {\n                  const path: string[] = loc.pathname.split('/')\n                  path.pop()\n                  const finalPath: string = path.join('/')\n                  absoluteHref += finalPath + '/' + href\n                }\n\n                icons.push(absoluteHref)\n              } else if (href.indexOf('//') === 0) {\n                const absoluteUrl: string = loc.protocol + href\n\n                icons.push(absoluteUrl)\n              } else {\n                icons.push(href)\n              }\n            }\n          }\n        }\n      }\n\n      return icons\n    }\n\n    function getWindowMetadataOfAny(...args: string[]): string {\n      const metaTags: HTMLCollectionOf<HTMLMetaElement> = doc.getElementsByTagName('meta')\n\n      for (let i = 0; i < metaTags.length; i++) {\n        const tag: HTMLMetaElement = metaTags[i]\n        const attributes: Array<string | null> = ['itemprop', 'property', 'name']\n          .map((target: string) => tag.getAttribute(target))\n          .filter((attr: string | null) => {\n            if (attr) {\n              return args.includes(attr)\n            }\n            return false\n          })\n\n        if (attributes.length && attributes) {\n          const content: string | null = tag.getAttribute('content')\n          if (content) {\n            return content\n          }\n        }\n      }\n\n      return ''\n    }\n\n    function getName(): string {\n      let name: string = getWindowMetadataOfAny('name', 'og:site_name', 'og:title', 'twitter:title')\n\n      if (!name) {\n        name = doc.title\n      }\n\n      return name\n    }\n\n    function getDescription(): string {\n      const description: string = getWindowMetadataOfAny(\n        'description',\n        'og:description',\n        'twitter:description',\n        'keywords'\n      )\n\n      return description\n    }\n\n    const name: string = getName()\n    const description: string = getDescription()\n    const url: string = loc.origin\n    const icons: string[] = getIcons()\n\n    const meta: SignClientTypes.Metadata = {\n      description,\n      url,\n      icons,\n      name\n    }\n\n    return meta\n  }\n\n  private async initializeClient(): Promise<SignClient> {\n    this.logger.info('Initializing client...')\n    const SignClient = (await import('@walletconnect/sign-client')).SignClient\n    const client = await SignClient.init(this.options)\n\n    client.on('session_event', (args) => {\n      this.logger.info('EVENT: session_event', args)\n    })\n\n    client.on('session_update', ({ topic, params }) => {\n      this.logger.info('EVENT: session_update', { topic, params })\n      const { namespaces } = params\n      const session = client.session.get(topic)\n      const updatedSession = { ...session, namespaces }\n      this.onSessionConnected(updatedSession)\n    })\n\n    client.on('session_delete', () => {\n      this.logger.info('EVENT: session_delete')\n      this.session = null\n    })\n\n    this.client = client\n    this.logger.info('Client initialized')\n    return client\n  }\n\n  private async initializeModal(): Promise<WalletConnectModal> {\n    this.logger.info('Initializing modal...')\n    const WalletConnectModal = (await import('@walletconnect/modal')).WalletConnectModal\n    const modal = new WalletConnectModal({\n      projectId: this.options.projectId,\n      ...this.modalOptions\n    })\n\n    modal.subscribeModal((state) => this.logger.info(`Modal ${state.open ? 'open' : 'closed'}`))\n\n    this.modal = modal\n    this.logger.info('Modal initialized')\n    return modal\n  }\n\n  private onSessionConnected(session: SessionTypes.Struct): WalletAccount[] {\n    const caipAccounts = session.namespaces.algorand!.accounts\n\n    if (!caipAccounts.length) {\n      this.logger.error('No accounts found!')\n      throw new Error('No accounts found!')\n    }\n\n    // @todo: Validate format of CAIP-10 accounts\n\n    // Filter duplicate accounts (same address, different chain)\n    const accounts = [...new Set(caipAccounts.map((account) => account.split(':').pop()!))]\n\n    const walletAccounts = accounts.map((address: string, idx: number) => ({\n      name: `${this.metadata.name} Account ${idx + 1}`,\n      address\n    }))\n\n    const state = this.store.state\n    const walletState = state.wallets[this.id]\n\n    if (!walletState) {\n      const newWalletState: WalletState = {\n        accounts: walletAccounts,\n        activeAccount: walletAccounts[0]\n      }\n\n      addWallet(this.store, {\n        walletId: this.id,\n        wallet: newWalletState\n      })\n\n      this.logger.info('Connected', newWalletState)\n    } else {\n      const match = compareAccounts(walletAccounts, walletState.accounts)\n\n      if (!match) {\n        this.logger.warn('Session accounts mismatch, updating accounts', {\n          prev: walletState.accounts,\n          current: walletAccounts\n        })\n        setAccounts(this.store, {\n          walletId: this.id,\n          accounts: walletAccounts\n        })\n      }\n    }\n\n    this.session = session\n    return walletAccounts\n  }\n\n  public get activeChainId(): string {\n    const network = this.activeNetworkConfig\n    if (!network?.caipChainId) {\n      this.logger.warn(`No CAIP-2 chain ID found for network: ${this.activeNetwork}`)\n      return ''\n    }\n    return network.caipChainId\n  }\n\n  public connect = async (): Promise<WalletAccount[]> => {\n    this.logger.info('Connecting...')\n    try {\n      const client = this.client || (await this.initializeClient())\n      const modal = this.modal || (await this.initializeModal())\n\n      const requiredNamespaces = {\n        algorand: {\n          chains: [this.activeChainId],\n          methods: ['algo_signTxn'],\n          events: []\n        }\n      }\n\n      const { uri, approval } = await client.connect({ requiredNamespaces })\n\n      if (!uri) {\n        this.logger.error('No URI found')\n        throw new Error('No URI found')\n      }\n\n      await modal.openModal({ uri })\n\n      const session = await approval()\n      const walletAccounts = this.onSessionConnected(session)\n\n      this.logger.info('Connected successfully')\n      return walletAccounts\n    } catch (error: any) {\n      this.logger.error('Error connecting:', error.message)\n      throw error\n    } finally {\n      this.modal?.closeModal()\n    }\n  }\n\n  public disconnect = async (): Promise<void> => {\n    this.logger.info('Disconnecting...')\n    try {\n      this.onDisconnect()\n      if (this.client && this.session) {\n        await this.client.disconnect({\n          topic: this.session.topic,\n          reason: {\n            message: 'User disconnected.',\n            code: 6000\n          }\n        })\n      }\n      this.logger.info('Disconnected')\n    } catch (error: any) {\n      this.logger.error('Error disconnecting:', error.message)\n      throw error\n    }\n  }\n\n  public resumeSession = async (): Promise<void> => {\n    try {\n      const state = this.store.state\n      const walletState = state.wallets[this.id]\n\n      // No session to resume\n      if (!walletState) {\n        this.logger.info('No session to resume')\n        return\n      }\n\n      this.logger.info('Resuming session...')\n\n      const client = this.client || (await this.initializeClient())\n\n      if (client.session.length) {\n        const lastKeyIndex = client.session.keys.length - 1\n        const restoredSession = client.session.get(client.session.keys[lastKeyIndex])\n        this.onSessionConnected(restoredSession)\n      }\n      this.logger.info('Session resumed successfully')\n    } catch (error: any) {\n      this.logger.error('Error resuming session:', error.message)\n      this.onDisconnect()\n      throw error\n    }\n  }\n\n  private processTxns(\n    txnGroup: algosdk.Transaction[],\n    indexesToSign?: number[]\n  ): WalletTransaction[] {\n    const txnsToSign: WalletTransaction[] = []\n\n    txnGroup.forEach((txn, index) => {\n      const isIndexMatch = !indexesToSign || indexesToSign.includes(index)\n      const signer = txn.sender.toString()\n      const canSignTxn = this.addresses.includes(signer)\n\n      const txnString = byteArrayToBase64(txn.toByte())\n\n      if (isIndexMatch && canSignTxn) {\n        txnsToSign.push({ txn: txnString })\n      } else {\n        txnsToSign.push({ txn: txnString, signers: [] })\n      }\n    })\n\n    return txnsToSign\n  }\n\n  private processEncodedTxns(\n    txnGroup: Uint8Array[],\n    indexesToSign?: number[]\n  ): WalletTransaction[] {\n    const txnsToSign: WalletTransaction[] = []\n\n    txnGroup.forEach((txnBuffer, index) => {\n      const decodedObj = algosdk.msgpackRawDecode(txnBuffer)\n      const isSigned = isSignedTxn(decodedObj)\n\n      const txn: algosdk.Transaction = isSigned\n        ? algosdk.decodeSignedTransaction(txnBuffer).txn\n        : algosdk.decodeUnsignedTransaction(txnBuffer)\n\n      const isIndexMatch = !indexesToSign || indexesToSign.includes(index)\n      const signer = txn.sender.toString()\n      const canSignTxn = !isSigned && this.addresses.includes(signer)\n\n      const txnString = byteArrayToBase64(txn.toByte())\n\n      if (isIndexMatch && canSignTxn) {\n        txnsToSign.push({ txn: txnString })\n      } else {\n        txnsToSign.push({ txn: txnString, signers: [] })\n      }\n    })\n\n    return txnsToSign\n  }\n\n  public signTransactions = async <T extends algosdk.Transaction[] | Uint8Array[]>(\n    txnGroup: T | T[],\n    indexesToSign?: number[]\n  ): Promise<(Uint8Array | null)[]> => {\n    try {\n      if (!this.session) {\n        this.logger.error('No session found!')\n        throw new SessionError('No session found!')\n      }\n\n      this.logger.debug('Signing transactions...', { txnGroup, indexesToSign })\n\n      let txnsToSign: WalletTransaction[] = []\n\n      // Determine type and process transactions for signing\n      if (isTransactionArray(txnGroup)) {\n        const flatTxns: algosdk.Transaction[] = flattenTxnGroup(txnGroup)\n        txnsToSign = this.processTxns(flatTxns, indexesToSign)\n      } else {\n        const flatTxns: Uint8Array[] = flattenTxnGroup(txnGroup as Uint8Array[])\n        txnsToSign = this.processEncodedTxns(flatTxns, indexesToSign)\n      }\n\n      const client = this.client || (await this.initializeClient())\n\n      this.logger.debug('Sending processed transactions to wallet...', [txnsToSign])\n\n      // Format JSON-RPC request\n      const request = formatJsonRpcRequest('algo_signTxn', [txnsToSign])\n\n      // Sign transactions\n      const signTxnsResult = await client.request<SignTxnsResponse>({\n        chainId: this.activeChainId,\n        topic: this.session.topic,\n        request\n      })\n\n      this.logger.debug('Received signed transactions from wallet', signTxnsResult)\n\n      // Filter out unsigned transactions, convert signed transactions to Uint8Array\n      const signedTxns = signTxnsResult.reduce<Uint8Array[]>((acc, value) => {\n        if (value) {\n          let signedTxn: Uint8Array\n          if (typeof value === 'string') {\n            signedTxn = base64ToByteArray(value)\n          } else if (value instanceof Uint8Array) {\n            signedTxn = value\n          } else if (Array.isArray(value)) {\n            signedTxn = new Uint8Array(value)\n          } else {\n            // Log unexpected types for debugging\n            this.logger.warn('Unexpected type in signTxnsResult', value)\n            signedTxn = new Uint8Array()\n          }\n          acc.push(signedTxn)\n        }\n        return acc\n      }, [])\n\n      // ARC-0001 - Return null for unsigned transactions\n      const result = txnsToSign.reduce<(Uint8Array | null)[]>((acc, txn) => {\n        if (txn.signers && txn.signers.length == 0) {\n          acc.push(null)\n        } else {\n          const signedTxn = signedTxns.shift()\n          if (signedTxn) {\n            acc.push(signedTxn)\n          }\n        }\n        return acc\n      }, [])\n\n      this.logger.debug('Transactions signed successfully', result)\n      return result\n    } catch (error: any) {\n      this.logger.error('Error signing transactions:', error.message)\n      throw error\n    }\n  }\n}\n","import { logger } from 'src/logger'\nimport { NetworkConfig } from 'src/network'\nimport { StorageAdapter } from 'src/storage'\nimport { setActiveWallet, setActiveAccount, removeWallet, type State } from 'src/store'\nimport type { Store } from '@tanstack/store'\nimport type algosdk from 'algosdk'\nimport type { WalletAccount, WalletConstructor, WalletId, WalletMetadata } from 'src/wallets/types'\n\ninterface WalletConstructorType {\n  new (...args: any[]): BaseWallet\n  defaultMetadata: WalletMetadata\n}\n\nexport abstract class BaseWallet {\n  readonly id: WalletId\n  readonly metadata: WalletMetadata\n\n  protected store: Store<State>\n  protected getAlgodClient: () => algosdk.Algodv2\n\n  public subscribe: (callback: (state: State) => void) => () => void\n\n  protected logger: ReturnType<typeof logger.createScopedLogger>\n\n  protected constructor({\n    id,\n    metadata,\n    store,\n    subscribe,\n    getAlgodClient\n  }: WalletConstructor<WalletId>) {\n    this.id = id\n    this.store = store\n    this.subscribe = subscribe\n    this.getAlgodClient = getAlgodClient\n\n    const ctor = this.constructor as WalletConstructorType\n    this.metadata = { ...ctor.defaultMetadata, ...metadata }\n\n    // Initialize logger with a scope based on the wallet ID\n    this.logger = logger.createScopedLogger(`Wallet:${this.id.toUpperCase()}`)\n  }\n\n  static defaultMetadata: WalletMetadata = { name: 'Base Wallet', icon: '' }\n\n  // ---------- Public Methods ---------------------------------------- //\n\n  public abstract connect(args?: Record<string, any>): Promise<WalletAccount[]>\n  public abstract disconnect(): Promise<void>\n  public abstract resumeSession(): Promise<void>\n\n  public setActive = (): void => {\n    this.logger.info(`Set active wallet: ${this.id}`)\n    setActiveWallet(this.store, { walletId: this.id })\n  }\n\n  public setActiveAccount = (account: string): void => {\n    this.logger.info(`Set active account: ${account}`)\n    setActiveAccount(this.store, {\n      walletId: this.id,\n      address: account\n    })\n  }\n\n  public abstract signTransactions<T extends algosdk.Transaction[] | Uint8Array[]>(\n    txnGroup: T | T[],\n    indexesToSign?: number[]\n  ): Promise<(Uint8Array | null)[]>\n\n  public transactionSigner = async (\n    txnGroup: algosdk.Transaction[],\n    indexesToSign: number[]\n  ): Promise<Uint8Array[]> => {\n    const signTxnsResult = await this.signTransactions(txnGroup, indexesToSign)\n\n    const signedTxns = signTxnsResult.reduce<Uint8Array[]>((acc, value) => {\n      if (value !== null) {\n        acc.push(value)\n      }\n      return acc\n    }, [])\n\n    return signedTxns\n  }\n\n  // ---------- Derived Properties ------------------------------------ //\n\n  public get name(): string {\n    return this.id.toUpperCase()\n  }\n\n  public get accounts(): WalletAccount[] {\n    const state = this.store.state\n    const walletState = state.wallets[this.id]\n    return walletState ? walletState.accounts : []\n  }\n\n  public get addresses(): string[] {\n    return this.accounts.map((account) => account.address)\n  }\n\n  public get activeAccount(): WalletAccount | null {\n    const state = this.store.state\n    const walletState = state.wallets[this.id]\n    return walletState ? walletState.activeAccount : null\n  }\n\n  public get activeAddress(): string | null {\n    return this.activeAccount?.address ?? null\n  }\n\n  public get activeNetwork(): string {\n    const state = this.store.state\n    return state.activeNetwork\n  }\n\n  public get isConnected(): boolean {\n    const state = this.store.state\n    const walletState = state.wallets[this.id]\n    return walletState ? walletState.accounts.length > 0 : false\n  }\n\n  public get isActive(): boolean {\n    const state = this.store.state\n    return state.activeWallet === this.id\n  }\n\n  public get activeNetworkConfig(): NetworkConfig {\n    const { networkConfig, activeNetwork } = this.store.state\n    return networkConfig[activeNetwork]\n  }\n\n  // ---------- Protected Methods ------------------------------------- //\n\n  protected onDisconnect = (): void => {\n    this.logger.debug(`Removing wallet from store...`)\n    removeWallet(this.store, { walletId: this.id })\n  }\n\n  protected manageWalletConnectSession = (\n    action: 'backup' | 'restore',\n    targetWalletId?: WalletId\n  ): void => {\n    const walletId = targetWalletId || this.id\n    if (action === 'backup') {\n      const data = StorageAdapter.getItem('walletconnect')\n      if (data) {\n        StorageAdapter.setItem(`walletconnect-${walletId}`, data)\n        StorageAdapter.removeItem('walletconnect')\n        this.logger.debug(`Backed up WalletConnect session for ${walletId}`)\n      }\n    } else if (action === 'restore') {\n      const data = StorageAdapter.getItem(`walletconnect-${walletId}`)\n      if (data) {\n        StorageAdapter.setItem('walletconnect', data)\n        StorageAdapter.removeItem(`walletconnect-${walletId}`)\n        this.logger.debug(`Restored WalletConnect session for ${walletId}`)\n      }\n    }\n  }\n}\n","import { WalletConnect } from './walletconnect'\n\nconst ICON = `data:image/svg+xml;base64,${btoa(`\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 200 180\"><path d=\"M94.27 151.629c-.861-.526-1.51-1.37-1.83-2.386-.197-.62-.18-.627 1.082-.437.705.105 1.6.356 1.988.557.696.36 1.815 1.876 1.815 2.459 0 .486-2.166.348-3.054-.193m23.953-.263c-.788-.419-2.095-2.123-2.108-2.75-.01-.433 2.467-.182 3.403.345.955.536 2.148 1.97 2.148 2.582 0 .503-2.397.38-3.443-.177m-9.024-1.165c-1.567-1.193-2.38-2.74-2.55-4.849-.075-.933-.054-1.697.045-1.697.866 0 2.714 1.67 3.439 3.107.398.789.657 3.888.351 4.195-.07.07-.648-.27-1.285-.756m-8.906-1.354c-.63-.684-1.21-1.648-1.387-2.305-.318-1.18-.136-3.416.278-3.416.555 0 2.108 1.697 2.505 2.737.472 1.237.457 3.905-.023 4.063-.16.053-.777-.433-1.373-1.08m-6.805-1.775c-2.764-.612-5.223-1.425-5.357-1.772-.08-.21.169-1.027.555-1.814s.701-1.469.701-1.515c0-.047-.803.067-1.786.253-.982.185-1.857.256-1.944.157-.088-.1-.365-.715-.618-1.367-.252-.652-.858-1.729-1.345-2.393-1.293-1.76-5.285-5.526-7.272-6.858-3.826-2.564-4.96-3.855-4.667-5.316.08-.402.692-1.574 1.359-2.606 1.65-2.551 2.51-4.472 2.512-5.62.002-.571-.364-1.69-.901-2.758l-.905-1.796.706-.532c1.936-1.46 4.649-4.916 4.205-5.36-.06-.06-.846.72-1.745 1.732-3.553 3.997-7.814 6.463-16.014 9.27-5.324 1.823-5.853 2.06-7.183 3.228-1.555 1.365-1.962 2.502-2.531 7.063-.284 2.275-.706 4.79-.937 5.591-.231.8-.403 2.17-.382 3.043.032 1.346-.157 2.06-1.248 4.698-1.498 3.622-1.068 3.708-4.138-.827l-2.036-3.008.747-.784c.411-.43 1.075-.978 1.475-1.216.955-.568.919-.922-.236-2.331-.53-.647-.917-1.209-.86-1.25s.43-.277.83-.526c1.788-1.12 2.7-4.727 2.987-11.822.214-5.274.595-6.46 2.195-6.83 6.634-1.535 7.58-1.98 8.618-4.066.926-1.858.9-3.701-.121-8.475-.87-4.072-1.047-7.21-.516-9.223.606-2.303 3.759-7.433 5.667-9.221.376-.353.684-.729.684-.835 0-.254-3.325-2.697-4.448-3.268-.482-.245-1.455-.45-2.163-.456-3.892-.03-6.628 1.877-8.722 6.08-.603 1.212-1.582 2.73-2.176 3.374-2.733 2.965-8.602 4.09-12.666 2.43l-.913-.374 1.323-.05c1.422-.054 3.498-.94 3.944-1.683.414-.69.076-.79-1.06-.314-1.443.605-4.075.597-5.039-.015-1.259-.8-2.23-1.81-2.795-2.908l-.535-1.042 1.243 1.095c1.51 1.328 2.691 1.752 4.425 1.585 1.506-.145 2.523-.851 1.65-1.147-3.195-1.08-5.834-3.078-7.07-5.35-.809-1.485-1.513-3.982-1.504-5.334l.006-.936.42.854c.232.47.941 1.333 1.576 1.918l1.155 1.064 2.189-.012 2.188-.011-1.012-.535c-.975-.514-3.353-2.766-3.353-3.175 0-.11.506.079 1.124.418 1.282.703 3.888 1.32 4.21.996.12-.118-.204-.612-.718-1.097-.513-.484-1.17-1.344-1.46-1.911l-.525-1.03 1.174.895c2.02 1.542 3.883 1.506 6.342-.123.69-.457 1.218-.863 1.175-.903s-.989.227-2.103.594c-1.87.618-2.11.64-3.151.305-1.284-.415-2.023-1.273-2.25-2.613l-.158-.926.486.595c1.07 1.31 2.652 1.255 6.363-.224 1.132-.451 2.892-1.036 3.91-1.3 2.732-.706 1.561-.926-2.298-.43-1.778.228-3.27.376-3.318.329-.047-.047.662-.415 1.575-.818 2.002-.883 4.78-1.152 6.858-.663 1.817.427 2.555.81 4.032 2.087 1.151.997 3.654 2.156 4.605 2.133.595-.015-2.96-3.395-4.552-4.328-1.639-.96-4.11-1.542-6.107-1.438-.92.049-1.627.016-1.571-.073.242-.388 3.44-.825 5.203-.71 4.048.265 6.96 2.546 10.902 8.537 2.553 3.883 4.234 5.67 6.137 6.524l1.092.49 2.215-1.027c4.747-2.2 8.797-2.518 16.097-1.26 2.25.387 4.717.704 5.482.704h1.39l.074 3.203.074 3.203.894-1.113c.88-1.096.894-1.152.846-3.516l-.049-2.402-1.61-1.721c-4.14-4.425-4.335-6.536-1.135-12.213 2.744-4.87 2.704-4.41.813-9.32-.883-2.292-1.696-4.167-1.807-4.167-.339 0-.205 4 .196 5.821.716 3.256.435 4.822-1.006 5.603-.371.2-2.144.33-4.904.36-3.6.036-4.348-.022-4.473-.348-.087-.227.102-.582.451-.845.53-.4.563-.53.274-1.09-.18-.35-.692-1.022-1.137-1.493s-.734-.933-.64-1.026c.093-.094 1.072-.036 2.175.128 3.023.45 3.76.398 4.211-.297.4-.615 2.887-9.725 2.704-9.907-.196-.196-1.55 1.62-2.759 3.7-1.782 3.068-3.14 3.895-6.379 3.889-2.485-.005-5.43-1.098-8.658-3.213-1.439-.943-3.02-1.855-3.514-2.027-1.524-.531-3.75-.392-5.163.324l-1.26.638.567-.603c.892-.95 3.048-2.004 4.432-2.167 1.94-.23 3.3.283 5.786 2.18 2.39 1.823 3.163 2.225 4.28 2.225.6 0 .497-.12-.745-.872-.792-.48-2.416-1.598-3.609-2.486-2.658-1.978-4.119-2.58-5.831-2.4l-1.26.132.926-.39c.667-.281 1.609-.36 3.373-.284 1.346.059 2.448.077 2.448.04 0-.278-2.537-1.455-3.71-1.722-.89-.202-1.231-.365-.884-.421.312-.051 1.86.225 3.44.614 2.564.63 3.167.687 5.602.525 5.536-.369 7.032-1.144 9.218-4.774l1.433-2.382-1.224 1.323c-.673.728-1.779 1.928-2.457 2.666-.677.739-1.53 1.417-1.893 1.508l-.662.165.61-.503c.334-.277 1.088-1.491 1.675-2.698 1.772-3.648 3.228-4.779 6.772-5.257 3.522-.476 4.797-.791 5.421-1.342.332-.293.429-.44.215-.329-.213.112-1.94.277-3.836.367-2.955.14-3.666.263-4.97.86-1.632.749-4.092 2.893-4.996 4.356-.764 1.236-.923.905-.224-.465 1.387-2.718 4.685-4.945 8.366-5.651l1.815-.349-1.058-.235c-.582-.13-1.952-.224-3.043-.209l-1.984.027 1.72-.82c1.427-.682 2.04-.822 3.611-.822 1.607 0 1.86-.06 1.679-.4-.539-1.005-1.377-1.452-2.69-1.432-.769.011-1.156-.067-.937-.19.534-.298 2.168-.34 4.169-.104 1.648.194 1.82.159 3.59-.733 1.023-.515 2.472-1.047 3.22-1.183 1.388-.253 3.607-.04 4.472.429.942.51 1.958 1.825 2.095 2.712.116.746 0 1.052-.671 1.777-.752.813-.811 1.018-.811 2.82 0 1.706-.105 2.127-.85 3.424-.467.814-.973 1.476-1.124 1.473s-.797-.242-1.435-.532c-1.277-.579-1.714-.435-1.988.655-.115.46.045.84.605 1.44.42.448 1.621 2.237 2.671 3.975 1.883 3.116 1.905 3.175 1.585 4.146-.258.78-.258 1.56 0 3.73.179 1.51.253 3.031.166 3.38-.128.509.033.795.805 1.432 1.367 1.126 5.02 2.947 5.914 2.947 1.268 0 1.588.247 1.588 1.227 0 1.057-.642 2.742-1.045 2.742-.153 0-.278-.298-.278-.662 0-.558-.123-.661-.793-.661-.436 0-2.162-.467-3.836-1.036l-3.044-1.036v1.788c0 .984-.077 3.057-.172 4.608l-.173 2.82h3.015l-.133.86c-.073.472-.206 2.11-.295 3.637-.373 6.42-.634 7.203-4.207 12.65-4.119 6.278-4.635 7.984-3.493 11.548.37 1.158.647 2.133.613 2.167-.246.246-2.569-1.19-3.783-2.34-2.616-2.473-2.922-3.975-1.146-5.619.954-.882 1.054-1.087.892-1.828-.417-1.91-.553-1.976-1-.482-.232.777-.693 1.849-1.024 2.382-.526.846-.603 1.318-.603 3.705v2.736l3.175 1.022c1.746.562 3.446 1.028 3.777 1.034.583.012.59-.012.194-.776-.224-.434-.479-1.307-.566-1.939-.208-1.523.53-3.065 3.905-8.159 4.537-6.845 5.478-9.25 5.681-14.513.07-1.82.19-3.93.267-4.692.137-1.353.17-1.398 1.379-1.933 2.27-1.004 4.245-3.717 6.253-8.589.526-1.274.459-1.204-1.891 1.985-1.019 1.382-2.13 2.751-2.47 3.042-.604.516-.603.506.048-.397.938-1.299 1.216-2.144 1.685-5.107.663-4.193 1.699-6.255 4.604-9.16 3.639-3.638 9.47-6.348 13.7-6.365.635-.003 1.201-.155 1.322-.356.117-.192 1.105-.92 2.196-1.615 1.092-.696 2.252-1.511 2.579-1.812.327-.3.66-.48.74-.4.081.081-.038.942-.263 1.914s-.41 1.88-.41 2.016c0 .37 1.393.3 1.992-.102.287-.192 1.296-.62 2.241-.953s1.998-.78 2.338-.994c.34-.215.665-.345.722-.288.302.302-1.982 3.526-2.927 4.132l-1.152.74c-.277.179 1.202 3.732 1.975 4.745.674.882.862 1.347.742 1.825-.089.354.045 1.273.296 2.044.645 1.98 2.913 6.751 3.698 7.779.808 1.06.82 1.416.075 2.363-.32.408-.648 1.225-.728 1.816-.118.879-.279 1.12-.89 1.335-1.457.512-2.298-.449-2.94-3.358-.113-.512-.325-.728-.715-.728-.634 0-.619.099.398 2.514.368.873.572 1.685.453 1.804-.12.119-.679.178-1.244.132-1.006-.082-1.03-.108-1.165-1.29-.11-.958-.407-1.515-1.444-2.716-1.28-1.483-1.523-1.617-3.974-2.186-.436-.102-1.235-.406-1.776-.677l-.981-.491-.311 1.124c-.462 1.668-.381 7.592.14 10.35.244 1.29.926 3.552 1.516 5.027 1.864 4.655 1.933 4.98 1.924 9.031-.006 2.853-.112 3.972-.461 4.87-.25.641-.415 1.204-.367 1.252.047.047 2.935.203 6.419.347 4.2.174 6.786.397 7.679.664 1.433.429 2.955 1.341 3.328 1.995.125.219 1.292 3.718 2.594 7.777 2.56 7.978 2.515 7.613 1.142 9.263-.582.7-.623.918-.458 2.455l.18 1.686-1.685 1.59c-2.476 2.335-2.487 2.338-2.833.702l-.825-3.894c-.497-2.344-.503-2.535-.09-2.844.245-.182.75-.332 1.121-.335 1.259-.007 1.444-.36.672-1.277l-.7-.833.461-1.209c.403-1.054.421-1.428.146-2.924-.856-4.647-3.463-7.755-6.516-7.769-1.198-.006-5.626.726-6.143 1.015-.419.235 1.36 2.035 4.026 4.073 1.954 1.494 2.487 2.265 2.708 3.918.115.858-.031 1.278-.963 2.753-1.122 1.776-2.596 4.941-4.015 8.62-.437 1.133-1.048 2.383-1.358 2.777-.546.695-.623.712-2.434.544-1.51-.14-2.034-.085-2.726.287-.933.503-1.032.488-5.234-.754l-1.852-.547 1.058-.93c2.452-2.155 4.96-4.035 5.375-4.028.245.004.743.417 1.107.919.364.5.74.914.835.918.336.014 2.673-2.777 3.423-4.09.928-1.622 1.429-3.721 1.19-4.992-.414-2.208-2.105-3.2-8.836-5.183-4.604-1.356-5.44-1.637-6.837-2.3-.81-.384-.92-.36-3.047.664-2.593 1.248-5.507 2.251-8.665 2.983-3.304.766-9.686.95-12.988.376-3.227-.562-7.639-2.035-9.626-3.214-.856-.508-1.618-.862-1.693-.787-.15.15 1.12 2.079 1.665 2.53.271.226.239.732-.166 2.586-1.245 5.713-2.66 8.612-7.189 14.73-2.852 3.852-3.402 5.685-2.327 7.762.66 1.274 9.278 9.763 11.016 10.85.797.498 1.576 1.26 1.929 1.889.496.883 2.158 5.275 2.158 5.704 0 .2-1.577.111-2.779-.154m46.76-1.68c-2.98-1.107-5.348-3.111-7.054-5.97-1.025-1.72-2.16-4.428-1.946-4.643.229-.229 3.039.644 4.916 1.527 3.417 1.608 6.275 5.198 6.594 8.283.178 1.723.063 1.76-2.51.803m-70.399.107c-2.923-.4-6.887-2.043-7.56-3.132-.23-.371 1.693-1.772 3.683-2.683 4.119-1.887 9.22-1.779 13.075.277 1.637.873 4.347 2.943 4.307 3.29-.014.122-.895.499-1.957.837-4.06 1.29-8.482 1.831-11.548 1.411m51.264-1.55c-1.687-.66-3.315-1.831-4.87-3.503l-1.323-1.421 2.116-.183c3.467-.298 6.424.354 8.757 1.932 1.096.742 2.753 2.456 2.753 2.848 0 .859-5.46 1.099-7.433.326m38.521-1.26c-3.84-.798-6.966-2.331-9.705-4.761-2.156-1.913-3.179-2.512-5.08-2.978-1.478-.362-3.339-1.249-3.339-1.591 0-.318 2.824-.81 5.689-.991 7.046-.446 13.549 2.741 16.133 7.908.513 1.024.932 2.025.932 2.224 0 .277-.479.354-2.05.33-1.128-.016-2.289-.08-2.58-.14m-61.217-2.076c-1.35-.421-2.52-1.449-3.238-2.845l-.51-.992h1.178c1.479 0 2.46.365 3.42 1.273.65.615 1.762 2.392 1.762 2.817 0 .255-1.426.117-2.612-.253m5.45-1.504c-1.583-1.153-2.396-3.509-1.878-5.442.192-.715.563-.742 1.334-.098 1.18.986 1.673 2.177 1.674 4.051 0 .974-.09 1.826-.2 1.895-.112.068-.53-.114-.93-.406m-26.254-1.075a150 150 0 0 0-3.968-1.97l-2.382-1.138 1.21-.001c2.527-.002 4.928 1.203 6.339 3.185.306.43.52.777.473.77-.046-.007-.799-.388-1.672-.845zm-14.354-3.608c-.764-.264-1.631-.699-1.927-.966-.59-.534-1.695-2.22-1.542-2.352.053-.045.573-.192 1.155-.325 1.324-.303 1.45-.925.662-3.265-.306-.908-.503-1.705-.438-1.77.066-.066.637.018 1.27.187.95.253 1.683.849 4.194 3.411 2.483 2.534 3.286 3.19 4.366 3.566.727.253 1.62.587 1.984.742l.662.28-.662.199c-.779.234-6.102.794-7.42.782-.503-.005-1.54-.225-2.304-.489m104.313-.83c-1.528-.484-4.719-2.704-4.75-3.303-.006-.145.88-.42 1.972-.61 2.368-.414 4.676-.11 6.582.864 1.41.721 3.082 2.35 2.83 2.756-.55.891-4.237 1.054-6.634.294m-56.58-.117c-2.06-.734-3.35-2.65-3.345-4.961.006-2.304.15-2.574 1.279-2.397 1.516.239 3.013.83 3.677 1.455l.609.572 1.523-1.507c.838-.829 1.593-1.507 1.679-1.507.085 0 .362.735.614 1.633.94 3.35-.383 5.974-3.431 6.806-1.302.356-1.35.354-2.605-.094m-75.315-.698c-6.533-.942-11.018-2.967-14.552-6.571-1.972-2.01-3.175-3.81-2.8-4.186.109-.109 1.32-.239 2.693-.29 5.235-.192 9.266 1.449 13.22 5.381 2.097 2.085 5.101 5.853 4.838 6.068-.05.041-1.58-.14-3.4-.402m97.327-1.25c4.267-5.096 8.959-7.442 13.334-6.666.982.174 1.84.405 1.906.513.198.32-1.54 2.713-2.834 3.904-2.314 2.13-5.42 3.148-10.492 3.438l-3.055.175zm17.502-.559c0-.646 1.702-5.318 2.447-6.715 1.472-2.762 4.84-5.965 5.538-5.267.161.161.234 1.18.176 2.481-.114 2.603-.705 4.023-2.51 6.03-1.524 1.695-5.651 4.23-5.651 3.471m8.04-1.157c3.728-2.356 7.725-5.133 8.864-6.158 1.353-1.218 1.403-1.24.984-.43-1.093 2.113-4.85 5.104-7.93 6.31-1.734.68-2.798.834-1.919.278m2.457-4.828c-.243-.511-.443-1.383-.443-1.937 0-1.018.973-3.223 1.5-3.399.368-.123 1.146 1.814 1.146 2.853 0 .855-.78 2.6-1.39 3.105-.298.247-.456.127-.813-.622m11.343.373c-1.157-.135-2.15-.292-2.206-.348-.16-.16 1.966-2.017 3.71-3.24 2.387-1.673 4.54-2.317 7.745-2.316 2.182 0 2.874.104 3.949.596l1.303.595-.907.936c-2.935 3.03-7.986 4.433-13.594 3.777m-135.543-5.98c-3.17-5.953-3.802-11.809-1.769-16.407.766-1.73 2.408-4.033 2.878-4.033.185 0 .7.685 1.142 1.522 2.02 3.82 2.643 8.569 1.708 13.03-.515 2.454-2.383 7.938-2.705 7.938-.089 0-.653-.923-1.254-2.05m131.543-.026c-2.11-1.55-3.023-3.093-3.023-5.108 0-1.215.77-3.056 1.587-3.796.494-.447.574-.438 1.965.243 1.713.838 2.676 1.892 3.072 3.363.464 1.725-.257 3.872-1.791 5.328l-.771.733zm-142.341-2.392c-.955-.434-3.028-2.462-3.028-2.963 0-.106.589-.273 1.309-.372 2.032-.28 3.923.381 5.269 1.84.602.654 1.095 1.295 1.095 1.426 0 .289-1.308.57-2.613.562-.527-.003-1.442-.225-2.032-.493m134.927-3.139c1.218-3.954 1.471-13.59.477-18.203a57 57 0 0 0-1.472-5.291c-1.025-3-1.187-3.508-1.031-3.229.06.11.227.199.369.199s.185-.12.095-.265-.099-.265-.019-.265c.285 0 2.284 4.27 2.94 6.28.942 2.884 1.488 6.584 1.481 10.037-.008 4.205-.63 7.156-2.126 10.088-.577 1.13-.974 1.491-.714.65m15.622-.53c.096-.4.694-1.798 1.33-3.108 1.78-3.673 4.396-6.043 7.61-6.899 2.261-.602 2.412-.555 2.244.699-.39 2.903-3.348 6.413-6.971 8.27-.455.233-1.63.726-2.608 1.094l-1.78.67zm-150.592-3.621c-5.551-2.683-8.865-5.295-11.436-9.013-2.092-3.028-3.72-7.066-3.72-9.231 0-.636.089-.69 1.135-.69 2.913 0 6.796 1.74 9.585 4.296 3.283 3.008 5.033 6.073 6.587 11.534 1.15 4.043 1.263 4.544 1.02 4.54-.111 0-1.539-.647-3.17-1.436m145.075.485c-.092-.241-.309-1.552-.48-2.914-.562-4.443.43-8.183 2.772-10.456.58-.562 1.164-1.022 1.3-1.022.405 0 1.01 1.75 1.186 3.43.324 3.1-.9 6.63-3.421 9.872-.926 1.19-1.226 1.431-1.357 1.09m-6.353-7.675c.34-1.413.908-2.21 1.957-2.745 1.55-.792 1.96-.718 1.754.314-.326 1.628-1.397 2.695-3.034 3.022-.84.168-.856.154-.677-.591m18.432-2.084c-.473-.206-.857-.469-.854-.585.01-.368 1.945-1.592 2.816-1.781.461-.1 1.34-.047 1.952.118l1.114.3-.882.909c-.764.789-2.17 1.45-3.022 1.422-.145-.005-.651-.178-1.124-.383m-4.19-2.014c.437-5.243 1.85-8.992 4.434-11.754 1.589-1.698 4.011-3.172 5.51-3.353.608-.073.669.016.745 1.087.125 1.742-.655 4.812-1.81 7.117-1.233 2.466-3.244 4.75-6.16 7-3.185 2.457-2.932 2.466-2.719-.097M164.535 96.2c.011-.601.996-2.432 1.613-2.997.74-.68 1.86-1.142 2.764-1.142.74 0 .783.213.287 1.402-.328.784-2.05 2.558-2.496 2.573-.105.004-.636.11-1.182.237-.703.163-.99.142-.986-.073M39.38 92.511l-1.19-.287 1.894-.184c2.429-.237 4.211-.836 5.755-1.933 1.705-1.212 2.43-2.3 3.187-4.777.358-1.173 1.027-2.644 1.487-3.27.855-1.16 1.328-1.354.772-.315-.17.317-.42 1.753-.555 3.191s-.371 2.944-.524 3.347c-1.29 3.39-6.255 5.33-10.826 4.228m132.353-3.022c-1.37-3.004-1.722-4.62-1.596-7.322.12-2.584.663-4.209 1.984-5.941l.698-.915.593.689c1.538 1.787 2.37 6.366 1.72 9.457-.375 1.79-1.903 5.61-2.293 5.734-.158.05-.656-.715-1.106-1.702m6.655.323c.094-.582.245-3.618.336-6.747.16-5.514-.097-11.175-.726-16.007-.66-5.078-2.584-11.438-4.788-15.834-.572-1.142-.914-1.998-.76-1.903.154.096.28.02.28-.17 0-.608 1.905 2.465 3.056 4.93 3.19 6.83 5.492 18.482 5.039 25.5-.219 3.379-.79 6.78-1.52 9.04-.672 2.084-1.164 2.722-.917 1.191m-5.129-39.936c0-.065-.119-.19-.264-.28s-.265-.038-.265.116.12.28.265.28.264-.052.264-.116M21.39 87.46c-6.885-6.262-9.634-10.983-10.312-17.71-.218-2.153.098-6.211.514-6.628.377-.377 2.86.757 4.714 2.153 4.287 3.228 7.128 8.67 7.976 15.276.349 2.717.746 9.923.547 9.92-.073-.001-1.62-1.356-3.44-3.01m141.818 1.495c.002-1.223.51-2.654 1.254-3.539.681-.81 2.635-1.902 2.999-1.677.248.154-.193 2.347-.65 3.224-.523 1.007-1.444 1.82-2.616 2.31l-.989.413zm19.715-9.65c.101-.48.414-1.25.694-1.712.53-.872 2.361-1.937 3.331-1.937.515 0 .537.075.29.992-.432 1.599-1.891 2.901-3.749 3.347-.733.176-.746.16-.566-.69m-1.078-4.864c-.434-3.474.426-7.949 2.004-10.427.992-1.557 3.308-3.704 3.996-3.704.79 0 1.023 5.098.34 7.427-.775 2.639-3.22 6.102-5.41 7.661l-.744.53zM27.106 70.74c-.83-2.163.852-9.285 3.442-14.577 3.414-6.977 9.876-14.173 15.518-17.28 1.338-.736 1.306-.696-.732.921-3.554 2.82-6.93 6.51-9.617 10.514-2.78 4.142-4.184 7.582-5.825 14.274-.593 2.419-1.273 4.885-1.512 5.482-.446 1.116-.991 1.401-1.274.666m148.415-4.429c-3.31-1.775-5.714-4.87-6.05-7.787-.123-1.073-.097-1.124.573-1.122 1.742.006 4.537 2.38 5.833 4.954.468.928 1.437 4.572 1.263 4.746-.028.028-.757-.328-1.62-.79M24.465 63.817c-1.392-2.767-2.046-5.175-2.208-8.138-.16-2.924.292-6.48.823-6.48.632 0 2.73 1.536 3.654 2.676 1.65 2.036 2.173 3.325 2.185 5.393.01 1.729-.094 2.069-1.554 5.094-.86 1.782-1.663 3.24-1.783 3.24s-.623-.803-1.117-1.785m155.049-4.47c-.602-3.045-.356-5.571.757-7.767.795-1.57 2.708-3.351 3.137-2.921.187.187.302 1.33.302 3 0 2.617-.03 2.756-1.001 4.573-.551 1.03-1.462 2.322-2.024 2.871l-1.022.998zm-68.432-2.831c0-.451.748-1.115 1.521-1.35.762-.233.743.064-.061.978-.678.77-1.46.969-1.46.372M33.59 54.752c1.046-1.877 3.42-4.082 5.433-5.045 1.457-.699 2.23-.892 3.93-.982 2.15-.115 3.863.18 4.728.812.444.324.393.442-.74 1.701-1.47 1.635-3.438 2.97-5.575 3.778-1.242.47-2.33.63-4.998.735l-3.41.135zm76.965.194c0-.802 1.282-2.19 2.17-2.35.969-.176 1.534.041 1.534.587 0 .382-.305.583-1.245.82-.685.172-1.518.608-1.852.968l-.607.655zm57.018-.605c-.437-.225-.965-.578-1.173-.783-.327-.323-.22-.446.794-.905 1.314-.597 2.774-.659 4.347-.184 1.386.417 1.347.95-.122 1.69-1.377.695-2.73.76-3.846.182m-58.306-1.16c.174-.5.815-1.406 1.424-2.015.918-.918 1.368-1.152 2.637-1.37 1.42-.246 2.024-.224 3.048.107.8.26-.765 1.148-2.022 1.148-1.584 0-2.915.6-4.27 1.928l-1.133 1.109zm65.577-2.87c-.75-1.497-.906-2.129-1.001-4.048-.094-1.886-.02-2.485.431-3.506.3-.677.655-1.231.79-1.231.33 0 1.475 1.777 1.856 2.883.497 1.442.383 4.31-.236 5.965-.3.803-.638 1.517-.75 1.586-.11.069-.602-.673-1.09-1.649m-65.359.239c.662-1.25 2.453-2.918 3.604-3.357 1.384-.53 4.318-.42 5.512.206l.757.397-.576.403c-.45.315-1.084.374-2.904.27-2.854-.163-3.938.155-5.54 1.625-.876.802-1.1.922-.853.456m-79.602-1.036c-1.895-1.894-2.474-3.183-2.62-5.824-.066-1.211-.008-2.314.128-2.45.332-.332 2.019.945 2.831 2.145.348.513.825 1.5 1.06 2.192.47 1.384.581 4.818.164 5.076-.144.089-.848-.423-1.563-1.139m78.698-.58c.528-1.848 2.227-3.934 3.94-4.841 1.648-.872 4.113-.74 7.331.392l2.55.897-.936.614c-.919.602-.967.606-2.55.2-2.732-.698-3.209-.739-5.014-.424-2.025.352-3.826 1.419-4.84 2.865-.543.777-.635.833-.481.297m54.957-.028c-.619-.306-1.125-.665-1.125-.797 0-.133.387-.477.86-.765 1.455-.887 4.475-.65 6.244.49l.621.401-1.15.602c-1.547.81-3.894.84-5.45.07m-113.51-5.029c-.621-.307-1.376-.872-1.677-1.255l-.548-.696.883-.372c2.07-.872 5.296-.261 6.675 1.263.498.55.494.556-.662 1.08-1.52.69-3.253.682-4.672-.02m69.126-.293c-2.905-1.128-5.647-1.179-7.871-.147-.837.388-1.522.665-1.522.615 0-.292 2.738-1.751 3.95-2.106 1.796-.525 4.726-.535 6.634-.023 1.759.472 3.564.489 4.61.043.696-.298.59-.32-1.07-.226-1.83.103-1.852.096-3.683-1.16-1.013-.694-2.318-1.413-2.9-1.596l-1.058-.333.988-.018c.544-.01 2.135.28 3.535.644 2.6.675 4.605.856 4.605.415 0-.347-1.479-1.36-2.616-1.791-.935-.355-.915-.361.9-.261 2.1.115 3.862.79 4.957 1.899.72.729.727.73.727.13 0-.934-1.81-2.484-3.47-2.973-1.732-.51-.9-.598.957-.102 2.68.716 5.39 2.515 6.21 4.124.295.578.537 1.15.537 1.273 0 .122-1.102.361-2.448.532s-3.511.671-4.812 1.112c-3.03 1.027-4.41 1.017-7.16-.05m-83.06-2.246c-.331-4.672.95-8.655 3.622-11.257l1.343-1.308.418.754c.31.56.419 1.506.419 3.664 0 2.803-.036 2.984-.958 4.895-.887 1.84-3.687 5.524-4.365 5.745-.197.064-.358-.772-.48-2.493m125.87-.33c-.464-.283-1.05-.829-1.301-1.212-.556-.848-.22-1.17 1.221-1.176 1.652-.007 4.104 1.78 3.588 2.615-.3.486-2.579.34-3.507-.227m-104.922-.902c-1.831-.683-4.166-2.965-3.74-3.655.203-.328 3.603-.26 4.628.093.494.17 1.341.6 1.882.955 1.055.692 2.477 2.374 2.223 2.628-.352.353-4.033.337-4.993-.021m.993-5.296c-.727-.191-2.034-.56-2.902-.82l-1.58-.473.898-.75c2.53-2.112 6.92-3.595 9.62-3.25 1.876.239 3.85 1.003 4.937 1.91l.907.758-1.14.825c-1.943 1.409-3.805 1.977-6.771 2.068-1.607.05-3.165-.056-3.969-.268\" style=\"fill:teal;stroke-width:.264583\"></path></svg>\n`)}`\n\nexport class BiatecWallet extends WalletConnect {\n  static defaultMetadata = {\n    name: 'BiatecWallet',\n    icon: ICON\n  }\n}\n","import algosdk from 'algosdk'\nimport { WalletState, addWallet, setAccounts, type State } from 'src/store'\nimport { compareAccounts } from 'src/utils'\nimport { BaseWallet } from 'src/wallets/base'\nimport type { Store } from '@tanstack/store'\nimport type { WalletAccount, WalletConstructor, WalletId } from 'src/wallets/types'\n\nexport type CustomProvider = {\n  connect(args?: Record<string, any>): Promise<WalletAccount[]>\n  disconnect?(): Promise<void>\n  resumeSession?(): Promise<WalletAccount[] | void>\n  signTransactions?<T extends algosdk.Transaction[] | Uint8Array[]>(\n    txnGroup: T | T[],\n    indexesToSign?: number[]\n  ): Promise<(Uint8Array | null)[]>\n  transactionSigner?(\n    txnGroup: algosdk.Transaction[],\n    indexesToSign: number[]\n  ): Promise<Uint8Array[]>\n}\n\nexport interface CustomWalletOptions {\n  provider: CustomProvider\n}\n\nconst ICON = `data:image/svg+xml;base64,${btoa(`\n<svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n  <rect width=\"24\" height=\"24\" fill=\"#525252\" />\n</svg>\n`)}`\n\nexport class CustomWallet extends BaseWallet {\n  private provider: CustomProvider\n  protected store: Store<State>\n\n  constructor({\n    id,\n    store,\n    subscribe,\n    getAlgodClient,\n    options,\n    metadata = {}\n  }: WalletConstructor<WalletId.CUSTOM>) {\n    super({ id, metadata, getAlgodClient, store, subscribe })\n    if (!options?.provider) {\n      this.logger.error('Missing required option: provider')\n      throw new Error('Missing required option: provider')\n    }\n    this.provider = options.provider\n    this.store = store\n  }\n\n  static defaultMetadata = {\n    name: 'Custom',\n    icon: ICON\n  }\n\n  public connect = async (args?: Record<string, any>): Promise<WalletAccount[]> => {\n    this.logger.info('Connecting...')\n    try {\n      if (!this.provider.connect) {\n        this.logger.error('Method not supported: connect')\n        throw new Error('Method not supported: connect')\n      }\n\n      const walletAccounts = await this.provider.connect(args)\n\n      if (walletAccounts.length === 0) {\n        this.logger.error('No accounts found!')\n        throw new Error('No accounts found!')\n      }\n\n      const activeAccount = walletAccounts[0]\n\n      const walletState: WalletState = {\n        accounts: walletAccounts,\n        activeAccount\n      }\n\n      addWallet(this.store, {\n        walletId: this.id,\n        wallet: walletState\n      })\n\n      this.logger.info('✅ Connected.', walletState)\n      return walletAccounts\n    } catch (error: any) {\n      this.logger.error('Error connecting:', error.message || error)\n      throw error\n    }\n  }\n\n  public disconnect = async (): Promise<void> => {\n    this.logger.info('Disconnecting...')\n    this.onDisconnect()\n    await this.provider.disconnect?.()\n  }\n\n  public resumeSession = async (): Promise<void> => {\n    try {\n      const state = this.store.state\n      const walletState = state.wallets[this.id]\n\n      // No session to resume\n      if (!walletState) {\n        this.logger.info('No session to resume')\n        return\n      }\n\n      this.logger.info('Resuming session...')\n\n      const result = await this.provider.resumeSession?.()\n\n      if (Array.isArray(result)) {\n        const walletAccounts = result\n\n        if (walletAccounts.length === 0) {\n          this.logger.error('No accounts found!')\n          throw new Error('No accounts found!')\n        }\n\n        const match = compareAccounts(walletAccounts, walletState.accounts)\n\n        if (!match) {\n          this.logger.warn('Session accounts mismatch, updating accounts', {\n            prev: walletState.accounts,\n            current: walletAccounts\n          })\n          setAccounts(this.store, {\n            walletId: this.id,\n            accounts: walletAccounts\n          })\n        }\n      }\n      this.logger.info('Session resumed.')\n    } catch (error: any) {\n      this.logger.error('Error resuming session:', error.message)\n      throw error\n    }\n  }\n\n  public signTransactions = async <T extends algosdk.Transaction[] | Uint8Array[]>(\n    txnGroup: T | T[],\n    indexesToSign?: number[]\n  ): Promise<(Uint8Array | null)[]> => {\n    if (!this.provider.signTransactions) {\n      this.logger.error('Method not supported: signTransactions')\n      throw new Error('Method not supported: signTransactions')\n    }\n    this.logger.debug('Signing transactions...', { txnGroup, indexesToSign })\n    return await this.provider.signTransactions(txnGroup, indexesToSign)\n  }\n\n  public transactionSigner = async (\n    txnGroup: algosdk.Transaction[],\n    indexesToSign: number[]\n  ): Promise<Uint8Array[]> => {\n    if (!this.provider.transactionSigner) {\n      this.logger.error('Method not supported: transactionSigner')\n      throw new Error('Method not supported: transactionSigner')\n    }\n    this.logger.debug('Transaction signer called...', { txnGroup, indexesToSign })\n    return await this.provider.transactionSigner(txnGroup, indexesToSign)\n  }\n}\n","import algosdk from 'algosdk'\nimport { WalletState, addWallet, setAccounts, setActiveWallet, type State } from 'src/store'\nimport { compareAccounts, flattenTxnGroup, isSignedTxn, isTransactionArray } from 'src/utils'\nimport { BaseWallet } from 'src/wallets/base'\nimport { WalletId } from 'src/wallets/types'\nimport type { DeflyWalletConnect } from '@blockshake/defly-connect'\nimport type { Store } from '@tanstack/store'\nimport type { SignerTransaction, WalletAccount, WalletConstructor } from 'src/wallets/types'\n\nexport interface DeflyWalletConnectOptions {\n  bridge?: string\n  shouldShowSignTxnToast?: boolean\n  chainId?: 416001 | 416002 | 416003 | 4160\n}\n\nconst ICON = `data:image/svg+xml;base64,${btoa(`\n<svg viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\">\n  <rect width=\"1024\" height=\"1024\" />\n  <path fill=\"#FFFFFF\" d=\"M779.9,684.4L512,230L244.1,684.4L512,529.5L779.9,684.4z\" />\n  <path fill=\"#FFFFFF\" d=\"M733.1,730L512,613.5L290.9,730L512,658L733.1,730z\" />\n</svg>\n`)}`\n\nexport class DeflyWallet extends BaseWallet {\n  private client: DeflyWalletConnect | null = null\n  private options: DeflyWalletConnectOptions\n\n  protected store: Store<State>\n\n  constructor({\n    id,\n    store,\n    subscribe,\n    getAlgodClient,\n    options = {},\n    metadata = {}\n  }: WalletConstructor<WalletId.DEFLY>) {\n    super({ id, metadata, getAlgodClient, store, subscribe })\n    this.options = options\n    this.store = store\n  }\n\n  static defaultMetadata = {\n    name: 'Defly',\n    icon: ICON\n  }\n\n  private async initializeClient(): Promise<DeflyWalletConnect> {\n    this.logger.info('Initializing client...')\n    const { DeflyWalletConnect } = await import('@blockshake/defly-connect')\n    const client = new DeflyWalletConnect(this.options)\n    this.client = client\n    this.logger.info('Client initialized')\n    return client\n  }\n\n  public connect = async (): Promise<WalletAccount[]> => {\n    this.logger.info('Connecting...')\n    const currentActiveWallet = this.store.state.activeWallet\n    if (currentActiveWallet && currentActiveWallet !== this.id) {\n      this.manageWalletConnectSession('backup', currentActiveWallet)\n    }\n    const client = this.client || (await this.initializeClient())\n    const accounts = await client.connect()\n\n    // Listen for disconnect event\n    client.connector?.on('disconnect', this.onDisconnect)\n\n    if (accounts.length === 0) {\n      this.logger.error('No accounts found!')\n      throw new Error('No accounts found!')\n    }\n\n    const walletAccounts = accounts.map((address: string, idx: number) => ({\n      name: `${this.metadata.name} Account ${idx + 1}`,\n      address\n    }))\n\n    const activeAccount = walletAccounts[0]\n\n    const walletState: WalletState = {\n      accounts: walletAccounts,\n      activeAccount\n    }\n\n    addWallet(this.store, {\n      walletId: this.id,\n      wallet: walletState\n    })\n\n    this.logger.info('✅ Connected.', walletState)\n    return walletAccounts\n  }\n\n  public disconnect = async (): Promise<void> => {\n    this.logger.info('Disconnecting...')\n    const client = this.client || (await this.initializeClient())\n\n    const currentActiveWallet = this.store.state.activeWallet\n    if (currentActiveWallet && currentActiveWallet !== this.id) {\n      this.manageWalletConnectSession('backup', currentActiveWallet)\n      this.manageWalletConnectSession('restore', this.id)\n      await client.disconnect()\n      // Wait for the disconnect to complete (race condition)\n      await new Promise((resolve) => setTimeout(resolve, 500))\n      this.manageWalletConnectSession('restore', currentActiveWallet)\n    } else {\n      await client.disconnect()\n    }\n\n    this.onDisconnect()\n    this.logger.info('Disconnected')\n  }\n\n  public setActive = (): void => {\n    this.logger.info(`Set active wallet: ${this.id}`)\n    const currentActiveWallet = this.store.state.activeWallet\n    if (currentActiveWallet && currentActiveWallet === WalletId.PERA) {\n      this.manageWalletConnectSession('backup', currentActiveWallet)\n    }\n    this.manageWalletConnectSession('restore')\n    setActiveWallet(this.store, { walletId: this.id })\n  }\n\n  public resumeSession = async (): Promise<void> => {\n    try {\n      const state = this.store.state\n      const walletState = state.wallets[this.id]\n\n      // No session to resume\n      if (!walletState) {\n        this.logger.info('No session to resume')\n        return\n      }\n\n      // If Pera is active, skip reconnectSession for Defly\n      if (state.activeWallet === WalletId.PERA) {\n        this.logger.info('Skipping reconnectSession for Defly (inactive)')\n        return\n      }\n\n      this.logger.info('Resuming session...')\n\n      const client = this.client || (await this.initializeClient())\n      const accounts = await client.reconnectSession()\n\n      if (accounts.length === 0) {\n        this.logger.error('No accounts found!')\n        throw new Error('No accounts found!')\n      }\n\n      const walletAccounts = accounts.map((address: string, idx: number) => ({\n        name: `${this.metadata.name} Account ${idx + 1}`,\n        address\n      }))\n\n      const match = compareAccounts(walletAccounts, walletState.accounts)\n\n      if (!match) {\n        this.logger.warn('Session accounts mismatch, updating accounts', {\n          prev: walletState.accounts,\n          current: walletAccounts\n        })\n        setAccounts(this.store, {\n          walletId: this.id,\n          accounts: walletAccounts\n        })\n      }\n      this.logger.info('Session resumed')\n    } catch (error: any) {\n      this.logger.error('Error resuming session:', error.message)\n      this.onDisconnect()\n      throw error\n    }\n  }\n\n  private processTxns(\n    txnGroup: algosdk.Transaction[],\n    indexesToSign?: number[]\n  ): SignerTransaction[] {\n    const txnsToSign: SignerTransaction[] = []\n\n    txnGroup.forEach((txn, index) => {\n      const isIndexMatch = !indexesToSign || indexesToSign.includes(index)\n      const signer = txn.sender.toString()\n      const canSignTxn = this.addresses.includes(signer)\n\n      if (isIndexMatch && canSignTxn) {\n        txnsToSign.push({ txn })\n      } else {\n        txnsToSign.push({ txn, signers: [] })\n      }\n    })\n\n    return txnsToSign\n  }\n\n  private processEncodedTxns(\n    txnGroup: Uint8Array[],\n    indexesToSign?: number[]\n  ): SignerTransaction[] {\n    const txnsToSign: SignerTransaction[] = []\n\n    txnGroup.forEach((txnBuffer, index) => {\n      const decodedObj = algosdk.msgpackRawDecode(txnBuffer)\n      const isSigned = isSignedTxn(decodedObj)\n\n      const txn: algosdk.Transaction = isSigned\n        ? algosdk.decodeSignedTransaction(txnBuffer).txn\n        : algosdk.decodeUnsignedTransaction(txnBuffer)\n\n      const isIndexMatch = !indexesToSign || indexesToSign.includes(index)\n      const signer = txn.sender.toString()\n      const canSignTxn = !isSigned && this.addresses.includes(signer)\n\n      if (isIndexMatch && canSignTxn) {\n        txnsToSign.push({ txn })\n      } else {\n        txnsToSign.push({ txn, signers: [] })\n      }\n    })\n\n    return txnsToSign\n  }\n\n  public signTransactions = async <T extends algosdk.Transaction[] | Uint8Array[]>(\n    txnGroup: T | T[],\n    indexesToSign?: number[]\n  ): Promise<(Uint8Array | null)[]> => {\n    try {\n      this.logger.debug('Signing transactions...', { txnGroup, indexesToSign })\n      let txnsToSign: SignerTransaction[] = []\n\n      // Determine type and process transactions for signing\n      if (isTransactionArray(txnGroup)) {\n        const flatTxns: algosdk.Transaction[] = flattenTxnGroup(txnGroup)\n        txnsToSign = this.processTxns(flatTxns, indexesToSign)\n      } else {\n        const flatTxns: Uint8Array[] = flattenTxnGroup(txnGroup as Uint8Array[])\n        txnsToSign = this.processEncodedTxns(flatTxns, indexesToSign)\n      }\n\n      const client = this.client || (await this.initializeClient())\n\n      this.logger.debug('Sending processed transactions to wallet...', [txnsToSign])\n\n      // Sign transactions\n      const signedTxns = await client.signTransaction([txnsToSign])\n      this.logger.debug('Received signed transactions from wallet', signedTxns)\n\n      // ARC-0001 - Return null for unsigned transactions\n      const result = txnsToSign.reduce<(Uint8Array | null)[]>((acc, txn) => {\n        if (txn.signers && txn.signers.length == 0) {\n          acc.push(null)\n        } else {\n          const signedTxn = signedTxns.shift()\n          if (signedTxn) {\n            acc.push(signedTxn)\n          }\n        }\n        return acc\n      }, [])\n\n      this.logger.debug('Transactions signed successfully', result)\n      return result\n    } catch (error: any) {\n      this.logger.error('Error signing transactions:', error.message)\n      throw error\n    }\n  }\n}\n","import algosdk from 'algosdk'\nimport { WalletState, addWallet, setAccounts } from 'src/store'\nimport {\n  base64ToByteArray,\n  byteArrayToBase64,\n  compareAccounts,\n  flattenTxnGroup,\n  isSignedTxn,\n  isTransactionArray\n} from 'src/utils'\nimport { BaseWallet } from 'src/wallets/base'\nimport { WalletId, type WalletAccount, type WalletConstructor } from 'src/wallets/types'\nimport type AVMWebProviderSDK from '@agoralabs-sh/avm-web-provider'\n\nexport function isAVMWebProviderSDKError(error: any): error is AVMWebProviderSDK.BaseARC0027Error {\n  return typeof error === 'object' && 'code' in error && 'message' in error\n}\n\nexport abstract class AVMProvider extends BaseWallet {\n  public avmWebClient: AVMWebProviderSDK.AVMWebClient | null = null\n  protected avmWebProviderSDK: typeof AVMWebProviderSDK | null = null\n  protected providerId: string\n\n  constructor(args: WalletConstructor<WalletId> & { providerId: string }) {\n    super(args)\n    this.providerId = args.providerId\n  }\n\n  protected async _initializeAVMWebProviderSDK(): Promise<typeof AVMWebProviderSDK> {\n    if (!this.avmWebProviderSDK) {\n      this.logger.info('Initializing @agoralabs-sh/avm-web-provider...')\n\n      const module = await import('@agoralabs-sh/avm-web-provider')\n      this.avmWebProviderSDK = module.default ? module.default : module\n\n      if (!this.avmWebProviderSDK) {\n        throw new Error(\n          'Failed to initialize, the @agoralabs-sh/avm-web-provider SDK was not provided'\n        )\n      }\n\n      if (!this.avmWebProviderSDK.AVMWebClient) {\n        throw new Error(\n          'Failed to initialize, AVMWebClient missing from @agoralabs-sh/avm-web-provider SDK'\n        )\n      }\n      this.logger.info('@agoralabs-sh/avm-web-provider SDK initialized')\n    }\n\n    return this.avmWebProviderSDK\n  }\n\n  protected async _initializeAVMWebClient(): Promise<AVMWebProviderSDK.AVMWebClient> {\n    const avmWebProviderSDK = await this._initializeAVMWebProviderSDK()\n\n    if (!avmWebProviderSDK.AVMWebClient) {\n      throw new Error('Failed to initialize, AVMWebClient not found')\n    }\n\n    if (!this.avmWebClient) {\n      this.logger.info('Initializing new AVM Web Client...')\n      this.avmWebClient = avmWebProviderSDK.AVMWebClient.init()\n      this.logger.info('AVM Web Client initialized')\n    }\n\n    return this.avmWebClient\n  }\n\n  protected async _getGenesisHash(): Promise<string> {\n    // First try to get from network config\n    const network = this.activeNetworkConfig\n    if (network.genesisHash) {\n      return network.genesisHash\n    }\n\n    // Fallback to API request\n    const algodClient = this.getAlgodClient()\n    const version = await algodClient.versionsCheck().do()\n    return algosdk.bytesToBase64(version.genesisHashB64)\n  }\n\n  protected _mapAVMWebProviderAccountToWalletAccounts(\n    accounts: AVMWebProviderSDK.IAccount[]\n  ): WalletAccount[] {\n    return accounts.map(({ address, name }, idx) => ({\n      name: name || `[${this.metadata.name}] Account ${idx + 1}`,\n      address\n    }))\n  }\n\n  protected processTxns(\n    txnGroup: algosdk.Transaction[],\n    indexesToSign?: number[]\n  ): AVMWebProviderSDK.IARC0001Transaction[] {\n    const txnsToSign: AVMWebProviderSDK.IARC0001Transaction[] = []\n\n    txnGroup.forEach((txn, index) => {\n      const isIndexMatch = !indexesToSign || indexesToSign.includes(index)\n      const signer = txn.sender.toString()\n      const canSignTxn = this.addresses.includes(signer)\n\n      const txnString = byteArrayToBase64(txn.toByte())\n\n      if (isIndexMatch && canSignTxn) {\n        txnsToSign.push({ txn: txnString })\n      } else {\n        txnsToSign.push({ txn: txnString, signers: [] })\n      }\n    })\n\n    return txnsToSign\n  }\n\n  protected processEncodedTxns(\n    txnGroup: Uint8Array[],\n    indexesToSign?: number[]\n  ): AVMWebProviderSDK.IARC0001Transaction[] {\n    const txnsToSign: AVMWebProviderSDK.IARC0001Transaction[] = []\n\n    txnGroup.forEach((txnBuffer, index) => {\n      const decodedObj = algosdk.msgpackRawDecode(txnBuffer)\n      const isSigned = isSignedTxn(decodedObj)\n\n      const txn: algosdk.Transaction = isSigned\n        ? algosdk.decodeSignedTransaction(txnBuffer).txn\n        : algosdk.decodeUnsignedTransaction(txnBuffer)\n\n      const isIndexMatch = !indexesToSign || indexesToSign.includes(index)\n      const signer = txn.sender.toString()\n      const canSignTxn = !isSigned && this.addresses.includes(signer)\n\n      const txnString = byteArrayToBase64(txn.toByte())\n\n      if (isIndexMatch && canSignTxn) {\n        txnsToSign.push({ txn: txnString })\n      } else {\n        txnsToSign.push({ txn: txnString, signers: [] })\n      }\n    })\n\n    return txnsToSign\n  }\n\n  /**\n   * Abstract methods\n   * These methods must be implemented by specific wallet providers\n   */\n  protected abstract _enable(): Promise<AVMWebProviderSDK.IEnableResult>\n  protected abstract _disable(): Promise<AVMWebProviderSDK.IDisableResult>\n  protected abstract _signTransactions(\n    txns: AVMWebProviderSDK.IARC0001Transaction[]\n  ): Promise<AVMWebProviderSDK.ISignTransactionsResult>\n\n  /**\n   * Common methods\n   * These methods can be overridden by specific wallet providers if needed\n   */\n  public async connect(): Promise<WalletAccount[]> {\n    try {\n      this.logger.info('Connecting...')\n      const result = await this._enable()\n      this.logger.info(`Successfully connected on network \"${result.genesisId}\"`)\n\n      const walletAccounts = this._mapAVMWebProviderAccountToWalletAccounts(result.accounts)\n\n      const walletState: WalletState = {\n        accounts: walletAccounts,\n        activeAccount: walletAccounts[0]\n      }\n\n      addWallet(this.store, {\n        walletId: this.id,\n        wallet: walletState\n      })\n\n      this.logger.info('✅ Connected.', walletState)\n      return walletAccounts\n    } catch (error: any) {\n      this.logger.error(\n        'Error connecting: ',\n        isAVMWebProviderSDKError(error) ? `${error.message} (code: ${error.code})` : error.message\n      )\n      throw error\n    }\n  }\n\n  public async disconnect(): Promise<void> {\n    try {\n      this.logger.info('Disconnecting...')\n      this.onDisconnect()\n\n      const result = await this._disable()\n\n      this.logger.info(\n        `Successfully disconnected${result.sessionIds && result.sessionIds.length ? ` sessions [${result.sessionIds.join(',')}]` : ''} on network \"${result.genesisId}\"`\n      )\n    } catch (error: any) {\n      this.logger.error(\n        'Error disconnecting: ',\n        isAVMWebProviderSDKError(error) ? `${error.message} (code: ${error.code})` : error.message\n      )\n      throw error\n    }\n  }\n\n  public async resumeSession(): Promise<void> {\n    const state = this.store.state\n    const walletState = state.wallets[this.id]\n\n    if (!walletState) {\n      this.logger.info('No session to resume')\n      return\n    }\n\n    try {\n      this.logger.info('Resuming session...')\n\n      const result = await this._enable()\n\n      if (result.accounts.length === 0) {\n        throw new Error('No accounts found!')\n      }\n\n      const walletAccounts = this._mapAVMWebProviderAccountToWalletAccounts(result.accounts)\n      const match = compareAccounts(walletAccounts, walletState.accounts)\n\n      if (!match) {\n        this.logger.warn('Session accounts mismatch, updating accounts', {\n          prev: walletState.accounts,\n          current: walletAccounts\n        })\n\n        setAccounts(this.store, {\n          walletId: this.id,\n          accounts: walletAccounts\n        })\n      }\n      this.logger.info('Session resumed successfully')\n    } catch (error: any) {\n      this.logger.error(\n        'Error resuming session: ',\n        isAVMWebProviderSDKError(error) ? `${error.message} (code: ${error.code})` : error.message\n      )\n      this.onDisconnect()\n      throw error\n    }\n  }\n\n  public async signTransactions<T extends algosdk.Transaction[] | Uint8Array[]>(\n    txnGroup: T | T[],\n    indexesToSign?: number[]\n  ): Promise<(Uint8Array | null)[]> {\n    try {\n      this.logger.debug('Signing transactions...', { txnGroup, indexesToSign })\n      let txnsToSign: AVMWebProviderSDK.IARC0001Transaction[] = []\n\n      // Determine type and process transactions for signing\n      if (isTransactionArray(txnGroup)) {\n        const flatTxns: algosdk.Transaction[] = flattenTxnGroup(txnGroup)\n        txnsToSign = this.processTxns(flatTxns, indexesToSign)\n      } else {\n        const flatTxns: Uint8Array[] = flattenTxnGroup(txnGroup as Uint8Array[])\n        txnsToSign = this.processEncodedTxns(flatTxns, indexesToSign)\n      }\n\n      this.logger.debug('Sending processed transactions to wallet...', txnsToSign)\n\n      // Sign transactions\n      const signTxnsResult = await this._signTransactions(txnsToSign)\n      this.logger.debug('Received signed transactions from wallet', signTxnsResult)\n\n      // Convert base64 to Uint8Array\n      const result = signTxnsResult.stxns.map((value) => {\n        if (value === null) {\n          return null\n        }\n        return base64ToByteArray(value)\n      })\n\n      this.logger.debug('Transactions signed successfully', result)\n      return result\n    } catch (error: any) {\n      this.logger.error(\n        'Error signing transactions: ',\n        isAVMWebProviderSDKError(error) ? `${error.message} (code: ${error.code})` : error.message\n      )\n      throw error\n    }\n  }\n}\n","import { AVMProvider } from 'src/wallets/avm-web-provider'\nimport { WalletId, type WalletConstructor } from 'src/wallets/types'\nimport type AVMWebProviderSDK from '@agoralabs-sh/avm-web-provider'\n\nexport const DEFLY_WEB_PROVIDER_ID = '95426e60-5f2e-49e9-b912-c488577be962'\n\nconst ICON = `data:image/svg+xml;base64,${btoa(`\n<svg viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\">\n  <rect width=\"1024\" height=\"1024\" />\n  <path fill=\"#FFFFFF\" d=\"M779.9,684.4L512,230L244.1,684.4L512,529.5L779.9,684.4z\" />\n  <path fill=\"#FFFFFF\" d=\"M733.1,730L512,613.5L290.9,730L512,658L733.1,730z\" />\n</svg>\n`)}`\n\nexport class DeflyWebWallet extends AVMProvider {\n  constructor({\n    id,\n    store,\n    subscribe,\n    getAlgodClient,\n    metadata = {}\n  }: WalletConstructor<WalletId.DEFLY_WEB>) {\n    super({\n      id,\n      metadata,\n      getAlgodClient,\n      store,\n      subscribe,\n      providerId: DEFLY_WEB_PROVIDER_ID\n    })\n  }\n\n  static defaultMetadata = {\n    name: 'Defly Web Wallet',\n    icon: ICON\n  }\n\n  /**\n   * Calls the \"enable\" method on the provider. This method will timeout after 3 minutes.\n   * @returns {Promise<AVMWebProviderSDK.IEnableResult>} a promise that resolves to the result.\n   * @protected\n   * @throws {MethodCanceledError} if the method was cancelled by the user.\n   * @throws {MethodNotSupportedError} if the method is not supported for the configured network.\n   * @throws {MethodTimedOutError} if the method timed out by lack of response (>= 3 minutes).\n   * @throws {NetworkNotSupportedError} if the network is not supported for the configured network.\n   * @throws {UnknownError} if the response result is empty.\n   */\n  protected async _enable(): Promise<AVMWebProviderSDK.IEnableResult> {\n    const {\n      ARC0027MethodEnum,\n      ARC0027MethodTimedOutError,\n      ARC0027UnknownError,\n      DEFAULT_REQUEST_TIMEOUT\n    } = await this._initializeAVMWebProviderSDK()\n    const avmWebClient = await this._initializeAVMWebClient()\n    const genesisHash = await this._getGenesisHash()\n\n    return new Promise<AVMWebProviderSDK.IEnableResult>((resolve, reject) => {\n      const timerId = window.setTimeout(() => {\n        // remove the listener\n        avmWebClient.removeListener(listenerId)\n        reject(\n          new ARC0027MethodTimedOutError({\n            method: ARC0027MethodEnum.Enable,\n            message: `no response from provider \"${this.metadata.name}\"`,\n            providerId: DEFLY_WEB_PROVIDER_ID\n          })\n        )\n      }, DEFAULT_REQUEST_TIMEOUT)\n      const listenerId = avmWebClient.onEnable(({ error, method, result }) => {\n        // remove the listener, it is not needed\n        avmWebClient.removeListener(listenerId)\n\n        // remove the timeout\n        window.clearTimeout(timerId)\n\n        if (error) {\n          return reject(error)\n        }\n\n        if (!result) {\n          return reject(\n            new ARC0027UnknownError({\n              message: `received response, but \"${method}\" request details were empty for provider \"${this.metadata.name}\"`,\n              providerId: DEFLY_WEB_PROVIDER_ID\n            })\n          )\n        }\n\n        return resolve(result)\n      })\n\n      // send the request\n      avmWebClient.enable({\n        genesisHash,\n        providerId: DEFLY_WEB_PROVIDER_ID\n      })\n    })\n  }\n\n  /**\n   * Calls the \"disable\" method on the provider. This method will timeout after 0.75 seconds.\n   * @returns {Promise<AVMWebProviderSDK.IDisableResult>} a promise that resolves to the result.\n   * @protected\n   * @throws {MethodNotSupportedError} if the method is not supported for the configured network.\n   * @throws {MethodTimedOutError} if the method timed out by lack of response (>= 3 minutes).\n   * @throws {NetworkNotSupportedError} if the network is not supported for the configured network.\n   * @throws {UnknownError} if the response result is empty.\n   */\n  protected async _disable(): Promise<AVMWebProviderSDK.IDisableResult> {\n    const {\n      ARC0027MethodEnum,\n      ARC0027MethodTimedOutError,\n      ARC0027UnknownError,\n      LOWER_REQUEST_TIMEOUT\n    } = await this._initializeAVMWebProviderSDK()\n    const avmWebClient = await this._initializeAVMWebClient()\n    const genesisHash = await this._getGenesisHash()\n\n    return new Promise<AVMWebProviderSDK.IDisableResult>((resolve, reject) => {\n      const timerId = window.setTimeout(() => {\n        // remove the listener\n        avmWebClient.removeListener(listenerId)\n        reject(\n          new ARC0027MethodTimedOutError({\n            method: ARC0027MethodEnum.Disable,\n            message: `no response from provider \"${this.metadata.name}\"`,\n            providerId: DEFLY_WEB_PROVIDER_ID\n          })\n        )\n      }, LOWER_REQUEST_TIMEOUT)\n      const listenerId = avmWebClient.onDisable(({ error, method, result }) => {\n        // remove the listener, it is not needed\n        avmWebClient.removeListener(listenerId)\n\n        // remove the timeout\n        window.clearTimeout(timerId)\n\n        if (error) {\n          return reject(error)\n        }\n\n        if (!result) {\n          return reject(\n            new ARC0027UnknownError({\n              message: `received response, but \"${method}\" request details were empty for provider \"${this.metadata.name}\"`,\n              providerId: DEFLY_WEB_PROVIDER_ID\n            })\n          )\n        }\n\n        this.logger.debug('Disable successful', { result })\n        return resolve(result)\n      })\n\n      this.logger.debug('Sending disable request...', { genesisHash })\n      avmWebClient.disable({\n        genesisHash,\n        providerId: DEFLY_WEB_PROVIDER_ID\n      })\n    })\n  }\n\n  /**\n   * Calls the \"signTransactions\" method to sign the supplied ARC-0001 transactions. This method will timeout after 3\n   * minutes.\n   * @returns {Promise<AVMWebProviderSDK.ISignTransactionsResult>} a promise that resolves to the result.\n   * @protected\n   * @throws {InvalidInputError} if computed group ID for the txns does not match the assigned group ID.\n   * @throws {InvalidGroupIdError} if the unsigned txns is malformed or not conforming to ARC-0001.\n   * @throws {MethodCanceledError} if the method was cancelled by the user.\n   * @throws {MethodNotSupportedError} if the method is not supported for the configured network.\n   * @throws {MethodTimedOutError} if the method timed out by lack of response (>= 3 minutes).\n   * @throws {NetworkNotSupportedError} if the network is not supported for the configured network.\n   * @throws {UnauthorizedSignerError} if a signer in the request is not authorized by the provider.\n   * @throws {UnknownError} if the response result is empty.\n   */\n  protected async _signTransactions(\n    txns: AVMWebProviderSDK.IARC0001Transaction[]\n  ): Promise<AVMWebProviderSDK.ISignTransactionsResult> {\n    const {\n      ARC0027MethodEnum,\n      ARC0027MethodTimedOutError,\n      ARC0027UnknownError,\n      DEFAULT_REQUEST_TIMEOUT\n    } = await this._initializeAVMWebProviderSDK()\n    const avmWebClient = await this._initializeAVMWebClient()\n\n    return new Promise<AVMWebProviderSDK.ISignTransactionsResult>((resolve, reject) => {\n      const timerId = window.setTimeout(() => {\n        // remove the listener\n        avmWebClient.removeListener(listenerId)\n        reject(\n          new ARC0027MethodTimedOutError({\n            method: ARC0027MethodEnum.SignTransactions,\n            message: `no response from provider \"${this.metadata.name}\"`,\n            providerId: DEFLY_WEB_PROVIDER_ID\n          })\n        )\n      }, DEFAULT_REQUEST_TIMEOUT)\n      const listenerId = avmWebClient.onSignTransactions(({ error, method, result }) => {\n        // remove the listener, it is not needed\n        avmWebClient.removeListener(listenerId)\n\n        // remove the timeout\n        window.clearTimeout(timerId)\n\n        if (error) {\n          return reject(error)\n        }\n\n        if (!result) {\n          return reject(\n            new ARC0027UnknownError({\n              message: `received response, but \"${method}\" request details were empty for provider \"${this.metadata.name}\"`,\n              providerId: DEFLY_WEB_PROVIDER_ID\n            })\n          )\n        }\n\n        this.logger.debug('Sign transactions successful', { result })\n        return resolve(result)\n      })\n\n      this.logger.debug('Sending sign transactions request...', { txns })\n      avmWebClient.signTransactions({\n        txns,\n        providerId: DEFLY_WEB_PROVIDER_ID\n      })\n    })\n  }\n}\n","import algosdk from 'algosdk'\nimport { WalletState, addWallet, type State } from 'src/store'\nimport {\n  base64ToByteArray,\n  byteArrayToBase64,\n  flattenTxnGroup,\n  isSignedTxn,\n  isTransactionArray\n} from 'src/utils'\nimport { BaseWallet } from 'src/wallets/base'\nimport type { Store } from '@tanstack/store'\nimport type {\n  WalletAccount,\n  WalletConstructor,\n  WalletId,\n  WalletTransaction\n} from 'src/wallets/types'\n\n/** @see https://docs.exodus.com/api-reference/algorand-provider-arc-api/ */\n\ninterface EnableNetworkOpts {\n  genesisID?: string\n  genesisHash?: string\n}\n\ninterface EnableAccountsOpts {\n  accounts?: string[]\n}\n\nexport type ExodusOptions = EnableNetworkOpts & EnableAccountsOpts\n\ninterface EnableNetworkResult {\n  genesisID: string\n  genesisHash: string\n}\n\ninterface EnableAccountsResult {\n  accounts: string[]\n}\n\nexport type EnableResult = EnableNetworkResult & EnableAccountsResult\n\nexport type SignTxnsResult = (string | null)[]\n\nexport interface Exodus {\n  isConnected: boolean\n  address: string | null\n  enable: (options?: ExodusOptions) => Promise<EnableResult>\n  signTxns: (transactions: WalletTransaction[]) => Promise<SignTxnsResult>\n}\n\nexport type WindowExtended = { algorand: Exodus } & Window & typeof globalThis\n\nconst ICON = `data:image/svg+xml;base64,${btoa(`\n<svg viewBox=\"0 0 300 300\" xmlns=\"http://www.w3.org/2000/svg\">\n  <linearGradient id=\"grad1\" gradientUnits=\"userSpaceOnUse\" x1=\"246.603\" y1=\"9.2212\" x2=\"174.158\" y2=\"308.5426\" gradientTransform=\"matrix(1 0 0 -1 0 302)\">\n    <stop offset=\"0\" stop-color=\"#0B46F9\" />\n    <stop offset=\"1\" stop-color=\"#BBFBE0\" />\n  </linearGradient>\n  <path fill=\"url(#grad1)\" d=\"M274.7,93.9L166.6,23v39.6l69.4,45.1l-8.2,25.8h-61.2v32.9h61.2l8.2,25.8l-69.4,45.1V277l108.2-70.7L257,150.1L274.7,93.9z\" />\n  \n  <linearGradient id=\"grad2\" gradientUnits=\"userSpaceOnUse\" x1=\"129.3516\" y1=\"-19.1573\" x2=\"56.9066\" y2=\"280.1641\" gradientTransform=\"matrix(1 0 0 -1 0 302)\">\n    <stop offset=\"0\" stop-color=\"#0B46F9\" />\n    <stop offset=\"1\" stop-color=\"#BBFBE0\" />\n  </linearGradient>\n  <path fill=\"url(#grad2)\" d=\"M72.5,166.4h61v-32.9H72.2l-7.9-25.8l69.2-45.1V23L25.3,93.9L43,150.1l-17.7,56.2L133.7,277v-39.6l-69.4-45.1L72.5,166.4z\" />\n  \n  <mask id=\"mask1\" maskUnits=\"userSpaceOnUse\" x=\"25.4\" y=\"23\" width=\"247.6\" height=\"254\">\n    <path fill=\"url(#grad1)\" d=\"M274.7,93.9L166.6,23v39.6l69.4,45.1l-8.2,25.8h-61.2v32.9h61.2l8.2,25.8l-69.4,45.1V277l108.2-70.7L257,150.1L274.7,93.9z\" />\n    <path fill=\"url(#grad2)\" d=\"M72.5,166.4h61v-32.9H72.2l-7.9-25.8l69.2-45.1V23L25.3,93.9L43,150.1l-17.7,56.2L133.7,277v-39.6l-69.4-45.1L72.5,166.4z\" />\n  </mask>\n  \n  <linearGradient id=\"grad3\" gradientUnits=\"userSpaceOnUse\" x1=\"46.4662\" y1=\"228.7554\" x2=\"171.8638\" y2=\"135.1039\" gradientTransform=\"matrix(1 0 0 -1 0 302)\">\n    <stop offset=\"0.1198\" stop-color=\"#8952FF\" stop-opacity=\"0.87\" />\n    <stop offset=\"1\" stop-color=\"#DABDFF\" stop-opacity=\"0\" />\n  </linearGradient>\n  <rect x=\"25.4\" y=\"23\" width=\"247.6\" height=\"254\" fill=\"url(#grad3)\" mask=\"url(#mask1)\" />\n</svg>\n`)}`\n\nexport class ExodusWallet extends BaseWallet {\n  private client: Exodus | null = null\n  private options: ExodusOptions\n\n  protected store: Store<State>\n\n  constructor({\n    id,\n    store,\n    subscribe,\n    getAlgodClient,\n    options = {},\n    metadata = {}\n  }: WalletConstructor<WalletId.EXODUS>) {\n    super({ id, metadata, getAlgodClient, store, subscribe })\n    this.options = options\n    this.store = store\n  }\n\n  static defaultMetadata = {\n    name: 'Exodus',\n    icon: ICON\n  }\n\n  private async initializeClient(): Promise<Exodus> {\n    this.logger.info('Initializing client...')\n    if (typeof window === 'undefined' || (window as WindowExtended).algorand === undefined) {\n      this.logger.error('Exodus is not available.')\n      throw new Error('Exodus is not available.')\n    }\n    const client = (window as WindowExtended).algorand\n    this.client = client\n    this.logger.info('Client initialized')\n    return client\n  }\n\n  public connect = async (): Promise<WalletAccount[]> => {\n    this.logger.info('Connecting...')\n    const client = this.client || (await this.initializeClient())\n    const { accounts } = await client.enable(this.options)\n\n    if (accounts.length === 0) {\n      this.logger.error('No accounts found!')\n      throw new Error('No accounts found!')\n    }\n\n    const walletAccounts = accounts.map((address: string, idx: number) => ({\n      name: `${this.metadata.name} Account ${idx + 1}`,\n      address\n    }))\n\n    const activeAccount = walletAccounts[0]\n\n    const walletState: WalletState = {\n      accounts: walletAccounts,\n      activeAccount\n    }\n\n    addWallet(this.store, {\n      walletId: this.id,\n      wallet: walletState\n    })\n\n    this.logger.info('✅ Connected.', walletState)\n    return walletAccounts\n  }\n\n  public disconnect = async (): Promise<void> => {\n    this.logger.info('Disconnecting...')\n    this.onDisconnect()\n    this.logger.info('Disconnected.')\n  }\n\n  public resumeSession = async (): Promise<void> => {\n    try {\n      const state = this.store.state\n      const walletState = state.wallets[this.id]\n\n      // No session to resume\n      if (!walletState) {\n        this.logger.info('No session to resume')\n        return\n      }\n\n      this.logger.info('Resuming session...')\n      const client = await this.initializeClient()\n\n      if (!client.isConnected) {\n        this.logger.error('Exodus is not connected.')\n        throw new Error('Exodus is not connected.')\n      }\n      this.logger.info('Session resumed')\n    } catch (error: any) {\n      this.logger.error('Error resuming session:', error.message)\n      this.onDisconnect()\n      throw error\n    }\n  }\n\n  private processTxns(\n    txnGroup: algosdk.Transaction[],\n    indexesToSign?: number[]\n  ): WalletTransaction[] {\n    const txnsToSign: WalletTransaction[] = []\n\n    txnGroup.forEach((txn, index) => {\n      const isIndexMatch = !indexesToSign || indexesToSign.includes(index)\n      const signer = txn.sender.toString()\n      const canSignTxn = this.addresses.includes(signer)\n\n      const txnString = byteArrayToBase64(txn.toByte())\n\n      if (isIndexMatch && canSignTxn) {\n        txnsToSign.push({ txn: txnString })\n      } else {\n        txnsToSign.push({ txn: txnString, signers: [] })\n      }\n    })\n\n    return txnsToSign\n  }\n\n  private processEncodedTxns(\n    txnGroup: Uint8Array[],\n    indexesToSign?: number[]\n  ): WalletTransaction[] {\n    const txnsToSign: WalletTransaction[] = []\n\n    txnGroup.forEach((txnBuffer, index) => {\n      const decodedObj = algosdk.msgpackRawDecode(txnBuffer)\n      const isSigned = isSignedTxn(decodedObj)\n\n      const txn: algosdk.Transaction = isSigned\n        ? algosdk.decodeSignedTransaction(txnBuffer).txn\n        : algosdk.decodeUnsignedTransaction(txnBuffer)\n\n      const isIndexMatch = !indexesToSign || indexesToSign.includes(index)\n      const signer = txn.sender.toString()\n      const canSignTxn = !isSigned && this.addresses.includes(signer)\n\n      const txnString = byteArrayToBase64(txn.toByte())\n\n      if (isIndexMatch && canSignTxn) {\n        txnsToSign.push({ txn: txnString })\n      } else {\n        txnsToSign.push({ txn: txnString, signers: [] })\n      }\n    })\n\n    return txnsToSign\n  }\n\n  public signTransactions = async <T extends algosdk.Transaction[] | Uint8Array[]>(\n    txnGroup: T | T[],\n    indexesToSign?: number[]\n  ): Promise<(Uint8Array | null)[]> => {\n    try {\n      this.logger.debug('Signing transactions...', { txnGroup, indexesToSign })\n      let txnsToSign: WalletTransaction[] = []\n\n      // Determine type and process transactions for signing\n      if (isTransactionArray(txnGroup)) {\n        const flatTxns: algosdk.Transaction[] = flattenTxnGroup(txnGroup)\n        txnsToSign = this.processTxns(flatTxns, indexesToSign)\n      } else {\n        const flatTxns: Uint8Array[] = flattenTxnGroup(txnGroup as Uint8Array[])\n        txnsToSign = this.processEncodedTxns(flatTxns, indexesToSign)\n      }\n\n      const client = this.client || (await this.initializeClient())\n\n      this.logger.debug('Sending processed transactions to wallet...', txnsToSign)\n\n      // Sign transactions\n      const signTxnsResult = await client.signTxns(txnsToSign)\n      this.logger.debug('Received signed transactions from wallet', signTxnsResult)\n\n      // Convert base64 to Uint8Array\n      const result = signTxnsResult.map((value) => {\n        if (value === null) {\n          return null\n        }\n        return base64ToByteArray(value)\n      })\n\n      this.logger.debug('Transactions signed successfully', result)\n      return result\n    } catch (error: any) {\n      this.logger.error('Error signing transactions:', error.message)\n      throw error\n    }\n  }\n}\n","import { AVMProvider } from 'src/wallets/avm-web-provider'\nimport { WalletId, type WalletConstructor } from 'src/wallets/types'\nimport type AVMWebProviderSDK from '@agoralabs-sh/avm-web-provider'\n\nexport const KIBISIS_AVM_WEB_PROVIDER_ID = 'f6d1c86b-4493-42fb-b88d-a62407b4cdf6'\n\nexport const ICON = `data:image/svg+xml;base64,${btoa(`\n<svg viewBox=\"0 0 480 480\" xmlns=\"http://www.w3.org/2000/svg\">\n  <rect fill=\"#801C96\" width=\"480\" height=\"480\" />\n  <path fill=\"#FFFFFF\" d=\"M393.5,223.2c0-7.3-0.6-14.6-1.6-21.6c-0.9-6.5-2.3-12.8-4-18.9c-18-64.9-77.4-112.5-148-112.5c-70.6,0-130,47.6-148,112.5c-1.7,6.2-3,12.5-4,19c-1,7.1-1.6,14.3-1.6,21.6h0v85.5h19.7v-85.5c0-7.2,0.6-14.4,1.8-21.4c14,1.1,27.6,4.3,40.5,9.5c15.9,6.4,30.3,15.6,42.6,27.3c12.3,11.7,22,25.4,28.7,40.6c6.9,15.6,10.5,32.2,10.5,49.2v81.4h0.1h19.6h0.1v-81.5c0.1-17.1,3.6-33.7,10.5-49.2c6.7-15.2,16.4-28.8,28.7-40.6c4.2-4,8.6-7.7,13.2-11.1v132.2h19.7V223.2h0c0-2.5-0.1-5-0.4-7.4c3.3-1.6,6.6-3.1,10-4.5c12.9-5.2,26.4-8.4,40.4-9.5c1.2,7,1.7,14.2,1.8,21.4v85.5h19.7L393.5,223.2L393.5,223.2z M240.1,277.3c-11.6-29.3-32.7-54.1-59.8-71c2.9-10,8.2-19.1,15.8-26.6c11.8-11.8,27.4-18.2,44-18.2s32.3,6.5,44,18.2c4.1,4.1,7.5,8.7,10.3,13.6c5.6-3.4,11.4-6.4,17.4-9.2c-14-25.2-40.9-42.3-71.8-42.3c-35.9,0-66.3,23-77.5,55.1c-15.5-7.1-32.5-11.8-50.4-13.5c1.3-4,2.7-7.9,4.3-11.8c6.7-15.9,16.4-30.3,28.7-42.6s26.6-22,42.6-28.7c16.5-7,34-10.5,52.1-10.5s35.6,3.5,52.1,10.5c15.9,6.7,30.3,16.4,42.6,28.7s22,26.6,28.7,42.6c1.6,3.9,3.1,7.8,4.3,11.8C309,189.2,260.1,226.5,240.1,277.3z\" />\n  <path fill=\"#FFFFFF\" d=\"M158.1,359.8h19.7V245.5c-6.1-5.4-12.7-10-19.7-14V359.8z\" />\n</svg>\n`)}`\n\nexport class KibisisWallet extends AVMProvider {\n  constructor({\n    id,\n    store,\n    subscribe,\n    getAlgodClient,\n    metadata = {}\n  }: WalletConstructor<WalletId.KIBISIS>) {\n    super({\n      id,\n      metadata,\n      getAlgodClient,\n      store,\n      subscribe,\n      providerId: KIBISIS_AVM_WEB_PROVIDER_ID\n    })\n  }\n\n  static defaultMetadata = {\n    name: 'Kibisis',\n    icon: ICON\n  }\n\n  /**\n   * Calls the \"enable\" method on the provider. This method will timeout after 3 minutes.\n   * @returns {Promise<AVMWebProviderSDK.IEnableResult>} a promise that resolves to the result.\n   * @protected\n   * @throws {MethodCanceledError} if the method was cancelled by the user.\n   * @throws {MethodNotSupportedError} if the method is not supported for the configured network.\n   * @throws {MethodTimedOutError} if the method timed out by lack of response (>= 3 minutes).\n   * @throws {NetworkNotSupportedError} if the network is not supported for the configured network.\n   * @throws {UnknownError} if the response result is empty.\n   */\n  protected async _enable(): Promise<AVMWebProviderSDK.IEnableResult> {\n    const {\n      ARC0027MethodEnum,\n      ARC0027MethodTimedOutError,\n      ARC0027UnknownError,\n      DEFAULT_REQUEST_TIMEOUT\n    } = await this._initializeAVMWebProviderSDK()\n    const avmWebClient = await this._initializeAVMWebClient()\n    const genesisHash = await this._getGenesisHash()\n\n    return new Promise<AVMWebProviderSDK.IEnableResult>((resolve, reject) => {\n      const timerId = window.setTimeout(() => {\n        // remove the listener\n        avmWebClient.removeListener(listenerId)\n        reject(\n          new ARC0027MethodTimedOutError({\n            method: ARC0027MethodEnum.Enable,\n            message: `no response from provider \"${this.metadata.name}\"`,\n            providerId: KIBISIS_AVM_WEB_PROVIDER_ID\n          })\n        )\n      }, DEFAULT_REQUEST_TIMEOUT)\n      const listenerId = avmWebClient.onEnable(({ error, method, result }) => {\n        // remove the listener, it is not needed\n        avmWebClient.removeListener(listenerId)\n\n        // remove the timeout\n        window.clearTimeout(timerId)\n\n        if (error) {\n          return reject(error)\n        }\n\n        if (!result) {\n          return reject(\n            new ARC0027UnknownError({\n              message: `received response, but \"${method}\" request details were empty for provider \"${this.metadata.name}\"`,\n              providerId: KIBISIS_AVM_WEB_PROVIDER_ID\n            })\n          )\n        }\n\n        return resolve(result)\n      })\n\n      // send the request\n      avmWebClient.enable({\n        genesisHash,\n        providerId: KIBISIS_AVM_WEB_PROVIDER_ID\n      })\n    })\n  }\n\n  /**\n   * Calls the \"disable\" method on the provider. This method will timeout after 0.75 seconds.\n   * @returns {Promise<AVMWebProviderSDK.IDisableResult>} a promise that resolves to the result.\n   * @protected\n   * @throws {MethodNotSupportedError} if the method is not supported for the configured network.\n   * @throws {MethodTimedOutError} if the method timed out by lack of response (>= 3 minutes).\n   * @throws {NetworkNotSupportedError} if the network is not supported for the configured network.\n   * @throws {UnknownError} if the response result is empty.\n   */\n  protected async _disable(): Promise<AVMWebProviderSDK.IDisableResult> {\n    const {\n      ARC0027MethodEnum,\n      ARC0027MethodTimedOutError,\n      ARC0027UnknownError,\n      LOWER_REQUEST_TIMEOUT\n    } = await this._initializeAVMWebProviderSDK()\n    const avmWebClient = await this._initializeAVMWebClient()\n    const genesisHash = await this._getGenesisHash()\n\n    return new Promise<AVMWebProviderSDK.IDisableResult>((resolve, reject) => {\n      const timerId = window.setTimeout(() => {\n        // remove the listener\n        avmWebClient.removeListener(listenerId)\n        reject(\n          new ARC0027MethodTimedOutError({\n            method: ARC0027MethodEnum.Disable,\n            message: `no response from provider \"${this.metadata.name}\"`,\n            providerId: KIBISIS_AVM_WEB_PROVIDER_ID\n          })\n        )\n      }, LOWER_REQUEST_TIMEOUT)\n      const listenerId = avmWebClient.onDisable(({ error, method, result }) => {\n        // remove the listener, it is not needed\n        avmWebClient.removeListener(listenerId)\n\n        // remove the timeout\n        window.clearTimeout(timerId)\n\n        if (error) {\n          return reject(error)\n        }\n\n        if (!result) {\n          return reject(\n            new ARC0027UnknownError({\n              message: `received response, but \"${method}\" request details were empty for provider \"${this.metadata.name}\"`,\n              providerId: KIBISIS_AVM_WEB_PROVIDER_ID\n            })\n          )\n        }\n\n        this.logger.debug('Disable successful', { result })\n        return resolve(result)\n      })\n\n      this.logger.debug('Sending disable request...', { genesisHash })\n      avmWebClient.disable({\n        genesisHash,\n        providerId: KIBISIS_AVM_WEB_PROVIDER_ID\n      })\n    })\n  }\n\n  /**\n   * Calls the \"signTransactions\" method to sign the supplied ARC-0001 transactions. This method will timeout after 3\n   * minutes.\n   * @returns {Promise<AVMWebProviderSDK.ISignTransactionsResult>} a promise that resolves to the result.\n   * @protected\n   * @throws {InvalidInputError} if computed group ID for the txns does not match the assigned group ID.\n   * @throws {InvalidGroupIdError} if the unsigned txns is malformed or not conforming to ARC-0001.\n   * @throws {MethodCanceledError} if the method was cancelled by the user.\n   * @throws {MethodNotSupportedError} if the method is not supported for the configured network.\n   * @throws {MethodTimedOutError} if the method timed out by lack of response (>= 3 minutes).\n   * @throws {NetworkNotSupportedError} if the network is not supported for the configured network.\n   * @throws {UnauthorizedSignerError} if a signer in the request is not authorized by the provider.\n   * @throws {UnknownError} if the response result is empty.\n   */\n  protected async _signTransactions(\n    txns: AVMWebProviderSDK.IARC0001Transaction[]\n  ): Promise<AVMWebProviderSDK.ISignTransactionsResult> {\n    const {\n      ARC0027MethodEnum,\n      ARC0027MethodTimedOutError,\n      ARC0027UnknownError,\n      DEFAULT_REQUEST_TIMEOUT\n    } = await this._initializeAVMWebProviderSDK()\n    const avmWebClient = await this._initializeAVMWebClient()\n\n    return new Promise<AVMWebProviderSDK.ISignTransactionsResult>((resolve, reject) => {\n      const timerId = window.setTimeout(() => {\n        // remove the listener\n        avmWebClient.removeListener(listenerId)\n        reject(\n          new ARC0027MethodTimedOutError({\n            method: ARC0027MethodEnum.SignTransactions,\n            message: `no response from provider \"${this.metadata.name}\"`,\n            providerId: KIBISIS_AVM_WEB_PROVIDER_ID\n          })\n        )\n      }, DEFAULT_REQUEST_TIMEOUT)\n      const listenerId = avmWebClient.onSignTransactions(({ error, method, result }) => {\n        // remove the listener, it is not needed\n        avmWebClient.removeListener(listenerId)\n\n        // remove the timeout\n        window.clearTimeout(timerId)\n\n        if (error) {\n          return reject(error)\n        }\n\n        if (!result) {\n          return reject(\n            new ARC0027UnknownError({\n              message: `received response, but \"${method}\" request details were empty for provider \"${this.metadata.name}\"`,\n              providerId: KIBISIS_AVM_WEB_PROVIDER_ID\n            })\n          )\n        }\n\n        this.logger.debug('Sign transactions successful', { result })\n        return resolve(result)\n      })\n\n      this.logger.debug('Sending sign transactions request...', { txns })\n      avmWebClient.signTransactions({\n        txns,\n        providerId: KIBISIS_AVM_WEB_PROVIDER_ID\n      })\n    })\n  }\n}\n","import algosdk from 'algosdk'\nimport { WalletState, addWallet, type State } from 'src/store'\nimport { flattenTxnGroup, isSignedTxn, isTransactionArray } from 'src/utils'\nimport { BaseWallet } from 'src/wallets/base'\nimport type { Store } from '@tanstack/store'\nimport type { WalletAccount, WalletConstructor, WalletId } from 'src/wallets/types'\n\ninterface KmdConstructor {\n  token: string | algosdk.KMDTokenHeader | algosdk.CustomTokenHeader\n  baseServer?: string\n  port?: string | number\n  headers?: Record<string, string>\n  promptForPassword: () => Promise<string>\n}\n\nexport type KmdOptions = Partial<Pick<KmdConstructor, 'token' | 'promptForPassword'>> &\n  Omit<KmdConstructor, 'token' | 'promptForPassword'> & {\n    wallet?: string\n  }\n\ninterface KmdWalletRecord {\n  id: string\n  name: string\n  driver_name?: string\n  driver_version?: number\n  mnemonic_ux?: boolean\n  supported_txs?: Array<any>\n}\n\ninterface ListWalletsResponse {\n  wallets: KmdWalletRecord[]\n  message?: string\n  error?: boolean\n}\n\ninterface InitWalletHandleResponse {\n  wallet_handle_token: string\n  message?: string\n  error?: boolean\n}\n\ninterface ListKeysResponse {\n  addresses: string[]\n  message?: string\n  error?: boolean\n}\n\nconst ICON = `data:image/svg+xml;base64,${btoa(`\n<svg viewBox=\"0 0 400 400\" xmlns=\"http://www.w3.org/2000/svg\">\n  <linearGradient id=\"algokitGradient\" gradientUnits=\"userSpaceOnUse\" x1=\"0\" y1=\"400\" x2=\"400\" y2=\"0\">\n    <stop offset=\"0\" style=\"stop-color:#31D8EE\"/>\n    <stop offset=\"1\" style=\"stop-color:#01DC94\"/>\n  </linearGradient>\n  <rect fill=\"url(#algokitGradient)\" width=\"400\" height=\"400\" />\n  <path fill=\"#FFFFFF\" d=\"M309.2,309.3H275l-22.2-82.7l-47.9,82.7h-38.3l73.9-128l-11.9-44.5l-99.6,172.6H90.8L217.1,90.6 h33.5l14.7,54.3h34.6l-23.6,41L309.2,309.3z\" />\n</svg>\n`)}`\n\nexport class KmdWallet extends BaseWallet {\n  private client: algosdk.Kmd | null = null\n  private options: KmdConstructor\n  private walletName: string\n  private walletId: string = ''\n  private password: string | null = null\n\n  protected store: Store<State>\n\n  constructor({\n    id,\n    store,\n    subscribe,\n    getAlgodClient,\n    options,\n    metadata = {}\n  }: WalletConstructor<WalletId.KMD>) {\n    super({ id, metadata, getAlgodClient, store, subscribe })\n\n    const {\n      token = 'a'.repeat(64),\n      baseServer = 'http://127.0.0.1',\n      port = 4002,\n      wallet = 'unencrypted-default-wallet',\n      promptForPassword = () => Promise.resolve(prompt('KMD password') || '')\n    } = options || {}\n\n    this.options = { token, baseServer, port, promptForPassword }\n    this.walletName = wallet\n    this.store = store\n  }\n\n  static defaultMetadata = {\n    name: 'KMD',\n    icon: ICON\n  }\n\n  private async initializeClient(): Promise<algosdk.Kmd> {\n    this.logger.info('Initializing client...')\n    const { token, baseServer, port } = this.options\n    const client = new algosdk.Kmd(token, baseServer, port)\n    this.client = client\n    this.logger.info('Client initialized')\n    return client\n  }\n\n  public connect = async (): Promise<WalletAccount[]> => {\n    this.logger.info('Connecting...')\n    if (!this.client) {\n      await this.initializeClient()\n    }\n\n    try {\n      // Get token and fetch accounts\n      const token = await this.fetchToken()\n      const accounts = await this.fetchAccounts(token)\n\n      if (accounts.length === 0) {\n        throw new Error('No accounts found!')\n      }\n\n      const walletAccounts = accounts.map((address: string, idx: number) => ({\n        name: `${this.metadata.name} Account ${idx + 1}`,\n        address\n      }))\n\n      const activeAccount = walletAccounts[0]\n\n      const walletState: WalletState = {\n        accounts: walletAccounts,\n        activeAccount\n      }\n\n      addWallet(this.store, {\n        walletId: this.id,\n        wallet: walletState\n      })\n\n      // Release token\n      await this.releaseToken(token)\n\n      this.logger.info('✅ Connected.', walletState)\n      return walletAccounts\n    } catch (error: any) {\n      this.logger.error('Error connecting:', error.message)\n      throw error\n    }\n  }\n\n  public disconnect = async (): Promise<void> => {\n    this.logger.info('Disconnecting...')\n    this.onDisconnect()\n    this.logger.info('Disconnected.')\n  }\n\n  public resumeSession = async (): Promise<void> => {\n    try {\n      const state = this.store.state\n      const walletState = state.wallets[this.id]\n\n      // No session to resume\n      if (!walletState) {\n        this.logger.info('No session to resume')\n        return\n      }\n\n      this.logger.info('Resuming session...')\n      await this.initializeClient()\n      this.logger.info('Session resumed')\n    } catch (error: any) {\n      this.logger.error('Error resuming session:', error.message)\n      this.onDisconnect()\n      throw error\n    }\n  }\n\n  private processTxns(\n    txnGroup: algosdk.Transaction[],\n    indexesToSign?: number[]\n  ): algosdk.Transaction[] {\n    const txnsToSign: algosdk.Transaction[] = []\n\n    txnGroup.forEach((txn, index) => {\n      const isIndexMatch = !indexesToSign || indexesToSign.includes(index)\n      const signer = txn.sender.toString()\n      const canSignTxn = this.addresses.includes(signer)\n\n      if (isIndexMatch && canSignTxn) {\n        txnsToSign.push(txn)\n      }\n    })\n\n    return txnsToSign\n  }\n\n  private processEncodedTxns(\n    txnGroup: Uint8Array[],\n    indexesToSign?: number[]\n  ): algosdk.Transaction[] {\n    const txnsToSign: algosdk.Transaction[] = []\n\n    txnGroup.forEach((txnBuffer, index) => {\n      const decodedObj = algosdk.msgpackRawDecode(txnBuffer)\n      const isSigned = isSignedTxn(decodedObj)\n\n      const txn: algosdk.Transaction = isSigned\n        ? algosdk.decodeSignedTransaction(txnBuffer).txn\n        : algosdk.decodeUnsignedTransaction(txnBuffer)\n\n      const isIndexMatch = !indexesToSign || indexesToSign.includes(index)\n      const signer = txn.sender.toString()\n      const canSignTxn = !isSigned && this.addresses.includes(signer)\n\n      if (isIndexMatch && canSignTxn) {\n        txnsToSign.push(txn)\n      }\n    })\n\n    return txnsToSign\n  }\n\n  public signTransactions = async <T extends algosdk.Transaction[] | Uint8Array[]>(\n    txnGroup: T | T[],\n    indexesToSign?: number[]\n  ): Promise<(Uint8Array | null)[]> => {\n    try {\n      this.logger.debug('Signing transactions...', { txnGroup, indexesToSign })\n      let txnsToSign: algosdk.Transaction[] = []\n\n      // Determine type and process transactions for signing\n      if (isTransactionArray(txnGroup)) {\n        const flatTxns: algosdk.Transaction[] = flattenTxnGroup(txnGroup)\n        txnsToSign = this.processTxns(flatTxns, indexesToSign)\n      } else {\n        const flatTxns: Uint8Array[] = flattenTxnGroup(txnGroup as Uint8Array[])\n        txnsToSign = this.processEncodedTxns(flatTxns, indexesToSign)\n      }\n\n      // Get token and password\n      const token = await this.fetchToken()\n      const password = await this.getPassword()\n\n      const client = this.client || (await this.initializeClient())\n\n      this.logger.debug('Sending processed transactions to wallet...', txnsToSign)\n\n      // Sign transactions\n      const signedTxns = await Promise.all(\n        txnsToSign.map((txn) => client.signTransaction(token, password, txn))\n      )\n\n      this.logger.debug('Received signed transactions from wallet', signedTxns)\n\n      // Release token\n      await this.releaseToken(token)\n\n      this.logger.debug('Transactions signed successfully', signedTxns)\n      return signedTxns\n    } catch (error: any) {\n      this.logger.error('Error signing transactions:', error.message)\n      throw error\n    }\n  }\n\n  private async fetchWalletId(): Promise<string> {\n    this.logger.debug('Fetching wallet data...', { walletName: this.walletName })\n    const client = this.client || (await this.initializeClient())\n\n    const { wallets }: ListWalletsResponse = await client.listWallets()\n    const wallet = wallets.find((wallet: KmdWalletRecord) => wallet.name === this.walletName)\n\n    if (!wallet) {\n      this.logger.error(`Wallet \"${this.walletName}\" not found!`)\n      throw new Error(`Wallet \"${this.walletName}\" not found!`)\n    }\n\n    this.walletId = wallet.id\n    this.logger.debug('Wallet data fetched successfully', { walletId: this.walletId })\n    return wallet.id\n  }\n\n  private async fetchToken(): Promise<string> {\n    this.logger.debug('Fetching token...', { walletId: this.walletId })\n    const client = this.client || (await this.initializeClient())\n\n    const walletId = this.walletId || (await this.fetchWalletId())\n    const password = await this.getPassword()\n\n    const { wallet_handle_token }: InitWalletHandleResponse = await client.initWalletHandle(\n      walletId,\n      password\n    )\n    this.logger.debug('Token fetched successfully')\n    return wallet_handle_token\n  }\n\n  private async releaseToken(token: string): Promise<void> {\n    this.logger.debug('Releasing token...')\n    const client = this.client || (await this.initializeClient())\n    await client.releaseWalletHandle(token)\n    this.logger.debug('Token released successfully')\n  }\n\n  private async getPassword(): Promise<string> {\n    if (this.password !== null) {\n      return this.password\n    }\n    const password = await this.options.promptForPassword()\n    this.password = password\n    return password\n  }\n\n  private async fetchAccounts(token: string): Promise<string[]> {\n    this.logger.debug('Fetching accounts...')\n    const client = this.client || (await this.initializeClient())\n    const { addresses }: ListKeysResponse = await client.listKeys(token)\n    this.logger.debug('Accounts fetched successfully', { addresses })\n    return addresses\n  }\n}\n","import algosdk from 'algosdk'\nimport { WalletState, addWallet, type State } from 'src/store'\nimport { byteArrayToBase64, flattenTxnGroup, isSignedTxn, isTransactionArray } from 'src/utils'\nimport { BaseWallet } from 'src/wallets/base'\nimport type { Store } from '@tanstack/store'\nimport type LuteConnect from 'lute-connect'\nimport type { SignTxnsError as ISignTxnsError, WalletTransaction } from 'lute-connect'\nimport {\n  SignTxnsError,\n  type WalletAccount,\n  type WalletConstructor,\n  type WalletId\n} from 'src/wallets/types'\n\nexport interface LuteConnectOptions {\n  siteName?: string\n}\n\nfunction isSignTxnsError(error: any): error is ISignTxnsError {\n  return error instanceof Error && 'code' in error\n}\n\nconst ICON = `data:image/svg+xml;base64,${btoa(`\n<svg viewBox=\"0 0 400 400\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path fill=\"#AB47BC\" d=\"M283.7,263.6c-0.6,0-1.3-0.1-1.8-0.4c-0.6-0.3-1.1-0.8-1.5-1.3c-0.4-0.6-0.7-1.3-0.8-2 c-0.1-0.8-0.1-1.7,0.1-2.5c0.2-0.9,0.6-1.8,1.2-2.6c0.6-0.8,1.4-1.7,2.2-2.3c0.9-0.7,2.1-1.2,3.2-1.6c1.2-0.4,2.7-0.5,4-0.5 c1.4,0,3,0.3,4.4,0.8c1.5,0.5,3.1,1.4,4.3,2.3c1.4,1,2.8,2.4,3.8,3.7c1.1,1.5,2.1,3.3,2.8,5.1c0.7,1.9,1.2,4.1,1.3,6.1 c0.2,2.1,0,4.6-0.4,6.7c-0.5,2.2-1.4,4.7-2.4,6.7c-1.1,2.1-2.8,4.4-4.4,6.2c-1.8,1.9-4.1,3.7-6.3,5c-2.3,1.4-5.2,2.6-7.9,3.3 c-2.8,0.7-6.1,1.1-8.9,1.1c-3,0-6.5-0.6-9.3-1.4c-3-0.9-6.4-2.4-9.1-4c-2.8-1.7-5.8-4.2-8-6.6c-2.3-2.5-4.6-5.8-6.2-8.9 c-1.7-3.2-3.1-7.1-3.8-10.7c-0.8-3.7-1.1-8-0.9-11.8c0.2-3.9,1.1-8.3,2.3-12c1.3-3.8,3.4-8.1,5.7-11.4c2.3-3.5,5.6-7.1,8.8-9.9 c3.3-2.8,7.5-5.6,11.5-7.5c4.1-1.9,9-3.5,13.5-4.3c4.6-0.8,10-1.1,14.6-0.7c4.8,0.4,10.2,1.6,14.7,3.3c4.7,1.7,9.7,4.4,13.8,7.3 c4.2,3,8.5,7,11.7,10.9c3.3,4.1,6.5,9.2,8.7,14c2.2,4.9,4,10.9,4.9,16.3c0.9,5.5,1,11.9,0.4,17.5c-0.6,5.7-2.2,12.1-4.3,17.4 c-2.1,5.5-5.4,11.4-8.9,16.1c-3.6,4.8-8.4,9.8-13.1,13.6c-4.8,3.8-11,7.5-16.6,9.9c-5.8,2.5-12.8,4.5-19.1,5.4 c-6.4,0.9-13.9,1-20.3,0.2c-6.6-0.8-14-2.7-20.1-5.2c-6.3-2.5-13.1-6.4-18.5-10.5c-5.5-4.2-11.2-9.8-15.4-15.3 c-4.3-5.6-8.4-12.7-11.2-19.2c-2.8-6.7-4.9-14.7-5.9-21.9c-0.9-5.9-2.8-12.6-5.2-18.1c-2.3-5.4-5.9-11.2-9.5-15.8 c-3.6-4.5-8.3-9-13-12.4c-4.5-3.3-10.1-6.4-15.3-8.3c-5-1.9-11.1-3.4-16.5-3.9c-5.2-0.5-11.3-0.3-16.5,0.5c-5,0.8-10.7,2.6-15.3,4.7 c-4.5,2.1-9.4,5.1-13.2,8.3c-3.7,3.1-7.5,7.2-10.2,11.1c-2.7,3.8-5.2,8.6-6.7,13c-1.5,4.2-2.6,9.3-3,13.8c-0.3,4.3-0.1,9.4,0.7,13.7 c0.8,4.1,2.3,8.8,4.2,12.5c1.8,3.6,4.4,7.6,7.1,10.6c2.6,2.9,6,5.9,9.3,8.1c3.1,2.1,7.1,4,10.6,5.1c3.4,1.1,7.5,1.9,11.1,2 c3.5,0.2,7.4-0.2,10.8-1c3.2-0.7,6.8-2.1,9.7-3.6c2.8-1.5,5.7-3.6,8-5.8c2.2-2.1,4.3-4.8,5.9-7.4c1.5-2.5,2.8-5.5,3.5-8.3 c0.7-2.6,1.1-5.7,1.1-8.5c0-2.6-0.5-5.5-1.2-8c-0.7-2.3-1.8-4.9-3.1-6.9c-1.2-1.9-2.9-3.9-4.6-5.4c-1.6-1.4-3.6-2.8-5.5-3.7 c-1.8-0.9-4-1.6-5.9-1.9c-1.8-0.3-3.9-0.4-5.8-0.1c-1.7,0.2-3.6,0.7-5.1,1.4c-1.4,0.6-2.9,1.6-4.1,2.6c-1.1,0.9-2.1,2.2-2.9,3.4 c-0.7,1.1-1.2,2.5-1.5,3.7c-0.3,1.1-0.4,2.4-0.3,3.6c0.1,1,0.4,2.2,0.8,3.1c0.4,0.8,1,1.7,1.6,2.3c0.6,0.5,1.3,1,2.1,1.3 c0.6,0.2,1.5,0.4,2.1,0.3c0.6-0.1,1.3-0.3,1.8-0.6c0.5-0.3,1-0.8,1.2-1.4c0.3-0.5,0.7-1,1.2-1.4c0.5-0.3,1.2-0.6,1.8-0.6 c0.7-0.1,1.5,0.1,2.1,0.3c0.7,0.3,1.5,0.8,2.1,1.3c0.6,0.6,1.3,1.5,1.6,2.3c0.4,0.9,0.7,2.1,0.8,3.1c0.1,1.1,0,2.5-0.3,3.6 c-0.3,1.2-0.9,2.6-1.5,3.7c-0.7,1.2-1.8,2.4-2.9,3.4c-1.2,1-2.7,2-4.1,2.6c-1.5,0.7-3.4,1.2-5.1,1.4c-1.8,0.2-4,0.2-5.8-0.1 c-2-0.3-4.1-1-5.9-1.9c-1.9-0.9-4-2.3-5.5-3.7c-1.7-1.5-3.4-3.5-4.6-5.4c-1.3-2-2.4-4.6-3.1-6.9c-0.7-2.5-1.2-5.4-1.2-8 c0-2.7,0.4-5.8,1.1-8.5c0.7-2.8,2-5.8,3.5-8.3c1.5-2.6,3.7-5.3,5.9-7.4c2.3-2.2,5.2-4.3,8-5.8c2.9-1.6,6.5-2.9,9.7-3.6 c3.4-0.8,7.4-1.1,10.8-1c3.6,0.2,7.7,0.9,11.1,2c3.6,1.2,7.5,3.1,10.6,5.1c3.3,2.1,6.7,5.1,9.3,8.1c2.7,3,5.3,7,7.1,10.6 c1.8,3.8,3.4,8.4,4.2,12.5c0.8,4.3,1.1,9.3,0.7,13.7c-0.4,4.5-1.5,9.6-3,13.8c-1.6,4.4-4.1,9.2-6.7,13c-2.8,3.9-6.5,8-10.2,11.1 c-3.8,3.2-8.7,6.2-13.2,8.3c-4.6,2.1-10.3,3.8-15.3,4.7c-5.2,0.9-11.3,1-16.5,0.5c-5.4-0.5-11.5-2-16.5-3.9 c-5.2-2-10.8-5.1-15.3-8.3c-4.6-3.4-9.4-7.9-13-12.4c-3.7-4.6-7.2-10.4-9.5-15.8c-2.4-5.5-4.3-12.2-5.2-18.1 c-0.9-6.1-1-13.2-0.3-19.3c0.7-6.3,2.5-13.4,4.9-19.2c2.4-6,6.1-12.5,10-17.7c4-5.3,9.3-10.7,14.6-14.8c5.3-4.2,12.1-8.1,18.3-10.7 c6.4-2.7,14.1-4.8,21-5.7c7-1,15.2-1,22.2-0.1c7.2,0.9,15.2,3.1,21.9,5.8c5.6,2.2,12.3,3.9,18.3,4.6c5.8,0.7,12.6,0.5,18.4-0.4 c5.6-0.9,12-2.7,17.2-5c5.1-2.3,10.6-5.6,14.9-9.1c4.2-3.4,8.5-8,11.7-12.3c3.1-4.3,6-9.6,7.8-14.5c1.8-4.8,3.1-10.5,3.6-15.6 c0.5-4.9,0.3-10.7-0.6-15.6c-0.8-4.7-2.5-10.1-4.5-14.4c-2-4.2-4.9-8.8-7.9-12.3c-2.9-3.4-6.8-6.9-10.5-9.5 c-3.6-2.5-8.1-4.8-12.2-6.2c-4-1.4-8.7-2.4-12.9-2.7c-4-0.3-8.7,0-12.7,0.8c-3.8,0.8-8.1,2.2-11.6,4c-3.4,1.7-7,4.1-9.7,6.6 c-2.7,2.4-5.4,5.6-7.3,8.6c-1.9,2.9-3.6,6.5-4.6,9.8c-1,3.2-1.6,6.9-1.7,10.2c-0.1,3.2,0.3,6.8,1,9.9c0.7,2.9,2,6.2,3.5,8.8 c1.4,2.5,3.4,5.1,5.4,7.2c1.9,1.9,4.4,3.8,6.8,5.2c2.2,1.3,5,2.4,7.5,3c2.3,0.6,5.1,0.9,7.6,0.8c2.3-0.1,4.9-0.5,7-1.3 c2-0.7,4.2-1.7,6-2.9c1.6-1.1,3.3-2.7,4.6-4.2c1.2-1.4,2.3-3.2,3-4.9c0.7-1.6,1.2-3.5,1.3-5.1c0.2-1.5,0.1-3.3-0.2-4.9 c-0.3-1.4-0.8-2.9-1.5-4.2c-0.6-1.1-1.5-2.3-2.4-3.2c-0.8-0.8-1.9-1.5-3-2c-0.9-0.4-2.1-0.7-3.1-0.8c-0.9-0.1-1.9,0-2.8,0.3 c-0.7,0.2-1.6,0.6-2.2,1.1c-0.5,0.4-1,1.1-1.3,1.7c-0.3,0.6-0.4,1.3-0.4,1.9c0,0.6,0.2,1.2,0.6,1.7c0.3,0.5,0.5,1.2,0.6,1.7 c0,0.6-0.1,1.3-0.4,1.9c-0.3,0.6-0.8,1.3-1.3,1.7c-0.6,0.5-1.4,0.9-2.2,1.1c-0.9,0.3-1.9,0.3-2.8,0.3c-1-0.1-2.2-0.4-3.1-0.8 c-1-0.5-2.1-1.2-3-2c-0.9-0.9-1.8-2.1-2.4-3.2c-0.7-1.2-1.2-2.8-1.5-4.2c-0.3-1.5-0.4-3.3-0.2-4.9c0.2-1.7,0.7-3.6,1.3-5.1 c0.7-1.7,1.8-3.5,3-4.9c1.3-1.5,3-3.1,4.6-4.2c1.8-1.2,4-2.3,6-2.9c2.2-0.7,4.8-1.2,7-1.3c2.4-0.1,5.2,0.2,7.6,0.8 c2.5,0.6,5.3,1.7,7.5,3c2.4,1.3,4.9,3.2,6.8,5.2c2,2,4,4.7,5.4,7.2c1.5,2.6,2.7,5.9,3.5,8.8c0.8,3.1,1.1,6.7,1,9.9 c-0.1,3.3-0.7,7.1-1.7,10.2c-1,3.3-2.7,6.9-4.6,9.8c-1.9,3-4.7,6.2-7.3,8.6c-2.8,2.5-6.4,5-9.7,6.6c-3.5,1.8-7.8,3.2-11.6,4 c-4,0.8-8.7,1.1-12.7,0.8c-4.2-0.3-9-1.3-12.9-2.7c-4.1-1.4-8.6-3.7-12.2-6.2c-3.7-2.6-7.6-6.1-10.5-9.5c-3-3.6-5.9-8.1-7.9-12.3 c-2-4.4-3.7-9.7-4.5-14.4c-0.8-4.9-1.1-10.6-0.6-15.6c0.5-5.1,1.8-10.8,3.6-15.6c1.8-4.9,4.7-10.3,7.8-14.5 c3.2-4.4,7.5-8.9,11.7-12.3c4.3-3.5,9.8-6.9,14.9-9.1c5.2-2.3,11.6-4.2,17.2-5c5.8-0.9,12.6-1,18.4-0.4c6,0.7,12.7,2.4,18.3,4.6 c5.7,2.3,12,5.7,16.9,9.4c5.1,3.8,10.3,8.9,14.2,13.8c4,5.1,7.8,11.5,10.3,17.5c2.6,6.1,4.6,13.5,5.5,20c0.9,6.7,1,14.5,0.1,21.2 c-0.9,6.9-2.9,14.6-5.5,21c-2.7,6.5-6.8,13.6-11,19.3c-4.4,5.7-10.3,11.7-16,16c-4.7,3.7-9.5,8.7-13.1,13.6 c-3.5,4.7-6.8,10.7-8.9,16.1c-2.1,5.3-3.6,11.7-4.3,17.4c-0.6,5.5-0.4,12,0.4,17.5c0.9,5.3,2.6,11.3,4.9,16.3c2.2,4.8,5.4,10,8.7,14 c3.2,3.9,7.6,8,11.7,10.9c4,2.9,9.1,5.6,13.8,7.3c4.5,1.7,9.9,2.9,14.7,3.3c4.6,0.4,10,0.2,14.6-0.7c4.4-0.8,9.4-2.4,13.5-4.3 c3.9-1.9,8.2-4.6,11.5-7.5c3.2-2.7,6.4-6.4,8.8-9.9c2.3-3.4,4.4-7.6,5.7-11.4c1.2-3.7,2.1-8.1,2.3-12c0.2-3.7-0.1-8.1-0.9-11.8 c-0.8-3.5-2.2-7.5-3.8-10.7c-1.6-3.1-3.9-6.3-6.2-8.9c-2.2-2.4-5.2-4.9-8-6.6c-2.7-1.7-6-3.2-9.1-4c-2.9-0.8-6.3-1.4-9.3-1.4 c-2.9,0-6.2,0.4-8.9,1.1c-2.6,0.7-5.5,1.9-7.9,3.3c-2.2,1.3-4.5,3.2-6.3,5c-1.7,1.8-3.3,4-4.4,6.2c-1.1,2-2,4.5-2.4,6.7 c-0.4,2.1-0.6,4.5-0.4,6.7c0.2,2,0.6,4.2,1.3,6.1c0.6,1.7,1.7,3.6,2.8,5.1c1,1.3,2.4,2.7,3.8,3.7c1.3,0.9,2.8,1.8,4.3,2.3 c1.3,0.5,2.9,0.8,4.4,0.8c1.3,0,2.7-0.1,4-0.5c1.1-0.3,2.3-0.9,3.2-1.6c0.8-0.6,1.7-1.4,2.2-2.3c0.5-0.7,0.9-1.7,1.2-2.6 c0.2-0.8,0.2-1.7,0.1-2.5c-0.1-0.7-0.4-1.4-0.8-2c-0.4-0.5-0.9-1-1.5-1.3C285,263.7,284.3,263.6,283.7,263.6L283.7,263.6z\" />\n</svg>\n`)}`\n\nexport class LuteWallet extends BaseWallet {\n  private client: LuteConnect | null = null\n  private options: LuteConnectOptions\n\n  protected store: Store<State>\n\n  constructor({\n    id,\n    store,\n    subscribe,\n    getAlgodClient,\n    options = {},\n    metadata = {}\n  }: WalletConstructor<WalletId.LUTE>) {\n    super({ id, metadata, getAlgodClient, store, subscribe })\n    this.options = options\n    this.store = store\n  }\n\n  static defaultMetadata = {\n    name: 'Lute',\n    icon: ICON\n  }\n\n  private async initializeClient(): Promise<LuteConnect> {\n    this.logger.info('Initializing client...')\n    const module = await import('lute-connect')\n    const LuteConnect = module.default\n\n    const client = new LuteConnect(this.options?.siteName)\n    this.client = client\n    this.logger.info('Client initialized')\n    return client\n  }\n\n  private async getGenesisId(): Promise<string> {\n    const network = this.activeNetworkConfig\n    if (network.genesisId) {\n      return network.genesisId\n    }\n\n    const algodClient = this.getAlgodClient()\n    const genesisStr = await algodClient.genesis().do()\n    const genesis = algosdk.parseJSON(genesisStr, {\n      intDecoding: algosdk.IntDecoding.MIXED\n    })\n    return `${genesis.network}-${genesis.id}`\n  }\n\n  public connect = async (): Promise<WalletAccount[]> => {\n    this.logger.info('Connecting...')\n    const client = this.client || (await this.initializeClient())\n    const genesisId = await this.getGenesisId()\n    const accounts = await client.connect(genesisId)\n\n    if (accounts.length === 0) {\n      this.logger.error('No accounts found!')\n      throw new Error('No accounts found!')\n    }\n\n    const walletAccounts = accounts.map((address: string, idx: number) => ({\n      name: `${this.metadata.name} Account ${idx + 1}`,\n      address\n    }))\n\n    const activeAccount = walletAccounts[0]\n\n    const walletState: WalletState = {\n      accounts: walletAccounts,\n      activeAccount\n    }\n\n    addWallet(this.store, {\n      walletId: this.id,\n      wallet: walletState\n    })\n\n    this.logger.info('Connected successfully', walletState)\n    return walletAccounts\n  }\n\n  public disconnect = async (): Promise<void> => {\n    this.onDisconnect()\n    this.logger.info('Disconnected')\n  }\n\n  public resumeSession = async (): Promise<void> => {\n    try {\n      const state = this.store.state\n      const walletState = state.wallets[this.id]\n\n      // No session to resume\n      if (!walletState) {\n        this.logger.info('No session to resume')\n        return\n      }\n\n      this.logger.info('Resuming session...')\n      await this.initializeClient()\n      this.logger.info('Session resumed successfully')\n    } catch (error: any) {\n      this.logger.error('Error resuming session:', error.message)\n      this.onDisconnect()\n      throw error\n    }\n  }\n\n  private processTxns(\n    txnGroup: algosdk.Transaction[],\n    indexesToSign?: number[]\n  ): WalletTransaction[] {\n    const txnsToSign: WalletTransaction[] = []\n\n    txnGroup.forEach((txn, index) => {\n      const isIndexMatch = !indexesToSign || indexesToSign.includes(index)\n      const signer = txn.sender.toString()\n      const canSignTxn = this.addresses.includes(signer)\n\n      const txnString = byteArrayToBase64(txn.toByte())\n\n      if (isIndexMatch && canSignTxn) {\n        txnsToSign.push({ txn: txnString })\n      } else {\n        txnsToSign.push({ txn: txnString, signers: [] })\n      }\n    })\n\n    return txnsToSign\n  }\n\n  private processEncodedTxns(\n    txnGroup: Uint8Array[],\n    indexesToSign?: number[]\n  ): WalletTransaction[] {\n    const txnsToSign: WalletTransaction[] = []\n\n    txnGroup.forEach((txnBuffer, index) => {\n      const decodedObj = algosdk.msgpackRawDecode(txnBuffer)\n      const isSigned = isSignedTxn(decodedObj)\n\n      const txn: algosdk.Transaction = isSigned\n        ? algosdk.decodeSignedTransaction(txnBuffer).txn\n        : algosdk.decodeUnsignedTransaction(txnBuffer)\n\n      const isIndexMatch = !indexesToSign || indexesToSign.includes(index)\n      const signer = txn.sender.toString()\n      const canSignTxn = !isSigned && this.addresses.includes(signer)\n\n      const txnString = byteArrayToBase64(txn.toByte())\n\n      if (isIndexMatch && canSignTxn) {\n        txnsToSign.push({ txn: txnString })\n      } else {\n        txnsToSign.push({ txn: txnString, signers: [] })\n      }\n    })\n\n    return txnsToSign\n  }\n\n  public signTransactions = async <T extends algosdk.Transaction[] | Uint8Array[]>(\n    txnGroup: T | T[],\n    indexesToSign?: number[]\n  ): Promise<(Uint8Array | null)[]> => {\n    try {\n      this.logger.debug('Signing transactions...', { txnGroup, indexesToSign })\n      let txnsToSign: WalletTransaction[] = []\n\n      // Determine type and process transactions for signing\n      if (isTransactionArray(txnGroup)) {\n        const flatTxns: algosdk.Transaction[] = flattenTxnGroup(txnGroup)\n        txnsToSign = this.processTxns(flatTxns, indexesToSign)\n      } else {\n        const flatTxns: Uint8Array[] = flattenTxnGroup(txnGroup as Uint8Array[])\n        txnsToSign = this.processEncodedTxns(flatTxns, indexesToSign)\n      }\n\n      const client = this.client || (await this.initializeClient())\n\n      this.logger.debug('Sending processed transactions to wallet...', txnsToSign)\n\n      // Sign transactions\n      const signTxnsResult = await client.signTxns(txnsToSign)\n\n      this.logger.debug('Transactions signed successfully', signTxnsResult)\n      return signTxnsResult\n    } catch (error) {\n      if (isSignTxnsError(error)) {\n        this.logger.error('Error signing transactions:', error.message, `(code: ${error.code})`)\n        throw new SignTxnsError(error.message, error.code)\n      }\n      this.logger.error('Unknown error signing transactions:', error)\n      throw error\n    }\n  }\n}\n","import algosdk from 'algosdk'\nimport { WalletState, addWallet, setAccounts, type State } from 'src/store'\nimport {\n  base64ToByteArray,\n  byteArrayToBase64,\n  flattenTxnGroup,\n  isSignedTxn,\n  isTransactionArray\n} from 'src/utils'\nimport { BaseWallet } from 'src/wallets/base'\nimport type { Store } from '@tanstack/store'\nimport type { InstanceWithExtensions, SDKBase } from '@magic-sdk/provider'\nimport type { AlgorandExtension } from '@magic-ext/algorand'\nimport type { MagicUserMetadata } from 'magic-sdk'\nimport type {\n  WalletAccount,\n  WalletConstructor,\n  WalletId,\n  WalletTransaction\n} from 'src/wallets/types'\n\n/** @see https://magic.link/docs/blockchains/other-chains/other/algorand */\n\nexport interface MagicAuthOptions {\n  apiKey?: string\n}\n\nexport type MagicAuthClient = InstanceWithExtensions<\n  SDKBase,\n  {\n    algorand: AlgorandExtension\n  }\n>\n\n// @todo: export after switching to namespace exports (collides with Exodus.SignTxnsResult)\ntype SignTxnsResult = (string | undefined)[]\n\nconst ICON = `data:image/svg+xml;base64,${btoa(`\n<svg viewBox=\"0 0 47 47\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path fill=\"#6851FF\" d=\"M 23.960861 1.80769 C 25.835077 4.103153 27.902216 6.23489 30.137539 8.178169 C 28.647968 13.009323 27.846092 18.142094 27.846092 23.462154 C 27.846092 28.782307 28.648062 33.915169 30.13763 38.746368 C 27.902216 40.689724 25.835077 42.821476 23.960861 45.116985 C 22.086554 42.821476 20.019415 40.689632 17.783998 38.746368 C 19.273476 33.915169 20.075445 28.7824 20.075445 23.462337 C 20.075445 18.142277 19.273476 13.009506 17.783998 8.178318 C 20.019415 6.235001 22.086554 4.10321 23.960861 1.80769 Z M 13.511427 35.406403 C 11.145139 33.747814 8.633816 32.282063 6.000269 31.031937 C 6.730776 28.637476 7.123754 26.095783 7.123754 23.462429 C 7.123754 20.828892 6.730762 18.287201 6.000235 15.892738 C 8.633816 14.642616 11.145175 13.176861 13.511501 11.518276 C 14.416311 15.352554 14.895074 19.351414 14.895074 23.462154 C 14.895074 27.572985 14.416283 31.571938 13.511427 35.406403 Z M 33.027046 23.462337 C 33.027046 27.572985 33.505753 31.571846 34.410553 35.406124 C 36.776859 33.747631 39.288094 32.281876 41.921539 31.031845 C 41.191017 28.637384 40.798061 26.095692 40.798061 23.462246 C 40.798061 20.8288 41.191017 18.287201 41.921539 15.89283 C 39.288094 14.642708 36.776768 13.177048 34.410553 11.518555 C 33.505753 15.352831 33.027046 19.351692 33.027046 23.462337 Z\" />\n</svg>\n`)}`\n\nexport class MagicAuth extends BaseWallet {\n  private client: MagicAuthClient | null = null\n  private options: MagicAuthOptions\n\n  protected store: Store<State>\n  public userInfo: MagicUserMetadata | null = null\n\n  constructor({\n    id,\n    store,\n    subscribe,\n    getAlgodClient,\n    options,\n    metadata = {}\n  }: WalletConstructor<WalletId.MAGIC>) {\n    super({ id, metadata, getAlgodClient, store, subscribe })\n    if (!options?.apiKey) {\n      this.logger.error('Missing required option: apiKey')\n      throw new Error('Missing required option: apiKey')\n    }\n    this.options = options\n    this.store = store\n  }\n\n  static defaultMetadata = {\n    name: 'Magic',\n    icon: ICON\n  }\n\n  private async initializeClient(): Promise<MagicAuthClient> {\n    this.logger.info('Initializing client...')\n    const Magic = (await import('magic-sdk')).Magic\n    const AlgorandExtension = (await import('@magic-ext/algorand')).AlgorandExtension\n    const client = new Magic(this.options.apiKey as string, {\n      extensions: {\n        algorand: new AlgorandExtension({\n          rpcUrl: ''\n        })\n      }\n    })\n    this.client = client\n    this.logger.info('Client initialized')\n    return client\n  }\n\n  public connect = async (args?: Record<string, any>): Promise<WalletAccount[]> => {\n    this.logger.info('Connecting...')\n    if (!args?.email || typeof args.email !== 'string') {\n      this.logger.error('Magic Link provider requires an email (string) to connect')\n      throw new Error('Magic Link provider requires an email (string) to connect')\n    }\n\n    const { email } = args\n\n    const client = this.client || (await this.initializeClient())\n\n    this.logger.info(`Logging in ${email}...`)\n    await client.auth.loginWithMagicLink({ email })\n\n    const userInfo = await client.user.getInfo()\n\n    if (!userInfo) {\n      this.logger.error('User info not found!')\n      throw new Error('User info not found!')\n    }\n\n    if (!userInfo.publicAddress) {\n      this.logger.error('No account found!')\n      throw new Error('No account found!')\n    }\n\n    this.userInfo = userInfo\n\n    this.logger.info('Login successful', userInfo)\n    const walletAccount: WalletAccount = {\n      name: userInfo.email ?? 'Magic Wallet 1',\n      address: userInfo.publicAddress\n    }\n\n    const walletState: WalletState = {\n      accounts: [walletAccount],\n      activeAccount: walletAccount\n    }\n\n    addWallet(this.store, {\n      walletId: this.id,\n      wallet: walletState\n    })\n\n    this.logger.info('Connected successfully', walletState)\n    return [walletAccount]\n  }\n\n  public disconnect = async (): Promise<void> => {\n    this.logger.info('Disconnecting...')\n    this.onDisconnect()\n    const client = this.client || (await this.initializeClient())\n    this.logger.info(`Logging out ${this.userInfo?.email || 'user'}...`)\n    await client.user.logout()\n    this.logger.info('Disconnected')\n  }\n\n  public resumeSession = async (): Promise<void> => {\n    try {\n      const state = this.store.state\n      const walletState = state.wallets[this.id]\n\n      // No session to resume\n      if (!walletState) {\n        this.logger.info('No session to resume')\n        return\n      }\n\n      this.logger.info('Resuming session...')\n      const client = this.client || (await this.initializeClient())\n      const isLoggedIn = await client.user.isLoggedIn()\n\n      if (!isLoggedIn) {\n        this.logger.warn('Not logged in, please reconnect...')\n        this.onDisconnect()\n        return\n      }\n\n      const userInfo = await client.user.getInfo()\n\n      if (!userInfo) {\n        await client.user.logout()\n        this.logger.error('User info not found!')\n        throw new Error('User info not found!')\n      }\n\n      if (!userInfo.publicAddress) {\n        await client.user.logout()\n        this.logger.error('No account found!')\n        throw new Error('No account found!')\n      }\n\n      this.userInfo = userInfo\n\n      const walletAccount: WalletAccount = {\n        name: userInfo.email ?? `${this.metadata.name} Account 1`,\n        address: userInfo.publicAddress\n      }\n\n      const storedAccount = walletState.accounts[0]\n\n      const { name, address } = walletAccount\n      const { name: storedName, address: storedAddress } = storedAccount\n\n      const match = name === storedName && address === storedAddress\n\n      if (!match) {\n        this.logger.warn('Session account mismatch, updating account', {\n          prev: storedAccount,\n          current: walletAccount\n        })\n        setAccounts(this.store, {\n          walletId: this.id,\n          accounts: [walletAccount]\n        })\n      }\n      this.logger.info('Session resumed successfully')\n    } catch (error: any) {\n      this.logger.error('Error resuming session:', error.message)\n      this.onDisconnect()\n      throw error\n    }\n  }\n\n  private processTxns(\n    txnGroup: algosdk.Transaction[],\n    indexesToSign?: number[]\n  ): WalletTransaction[] {\n    const txnsToSign: WalletTransaction[] = []\n\n    txnGroup.forEach((txn, index) => {\n      const isIndexMatch = !indexesToSign || indexesToSign.includes(index)\n      const signer = txn.sender.toString()\n      const canSignTxn = this.addresses.includes(signer)\n\n      const txnString = byteArrayToBase64(txn.toByte())\n\n      if (isIndexMatch && canSignTxn) {\n        txnsToSign.push({ txn: txnString })\n      } else {\n        txnsToSign.push({ txn: txnString, signers: [] })\n      }\n    })\n\n    return txnsToSign\n  }\n\n  private processEncodedTxns(\n    txnGroup: Uint8Array[],\n    indexesToSign?: number[]\n  ): WalletTransaction[] {\n    const txnsToSign: WalletTransaction[] = []\n\n    txnGroup.forEach((txnBuffer, index) => {\n      const decodedObj = algosdk.msgpackRawDecode(txnBuffer)\n      const isSigned = isSignedTxn(decodedObj)\n\n      const txn: algosdk.Transaction = isSigned\n        ? algosdk.decodeSignedTransaction(txnBuffer).txn\n        : algosdk.decodeUnsignedTransaction(txnBuffer)\n\n      const isIndexMatch = !indexesToSign || indexesToSign.includes(index)\n      const signer = txn.sender.toString()\n      const canSignTxn = !isSigned && this.addresses.includes(signer)\n\n      const txnString = byteArrayToBase64(txn.toByte())\n\n      if (isIndexMatch && canSignTxn) {\n        txnsToSign.push({ txn: txnString })\n      } else {\n        txnsToSign.push({ txn: txnString, signers: [] })\n      }\n    })\n\n    return txnsToSign\n  }\n\n  public signTransactions = async <T extends algosdk.Transaction[] | Uint8Array[]>(\n    txnGroup: T | T[],\n    indexesToSign?: number[]\n  ): Promise<(Uint8Array | null)[]> => {\n    try {\n      this.logger.debug('Signing transactions...', { txnGroup, indexesToSign })\n      let txnsToSign: WalletTransaction[] = []\n\n      // Determine type and process transactions for signing\n      if (isTransactionArray(txnGroup)) {\n        const flatTxns: algosdk.Transaction[] = flattenTxnGroup(txnGroup)\n        txnsToSign = this.processTxns(flatTxns, indexesToSign)\n      } else {\n        const flatTxns: Uint8Array[] = flattenTxnGroup(txnGroup as Uint8Array[])\n        txnsToSign = this.processEncodedTxns(flatTxns, indexesToSign)\n      }\n\n      const client = this.client || (await this.initializeClient())\n\n      this.logger.debug('Sending processed transactions to wallet...', txnsToSign)\n\n      // Sign transactions\n      const signTxnsResult = (await client.algorand.signGroupTransactionV2(\n        txnsToSign\n      )) as SignTxnsResult\n\n      this.logger.debug('Received signed transactions from wallet', signTxnsResult)\n\n      // Convert base64 to Uint8Array, undefined to null\n      const result = signTxnsResult.map((value) => {\n        if (value === undefined) {\n          return null\n        }\n        return base64ToByteArray(value)\n      })\n\n      this.logger.debug('Transactions signed successfully', result)\n      return result\n    } catch (error: any) {\n      this.logger.error('Error signing transactions:', error.message)\n      throw error\n    }\n  }\n}\n","import algosdk from 'algosdk'\nimport { StorageAdapter } from 'src/storage'\nimport { LOCAL_STORAGE_KEY, WalletState, addWallet, type State } from 'src/store'\nimport { flattenTxnGroup, isSignedTxn, isTransactionArray } from 'src/utils'\nimport { BaseWallet } from 'src/wallets/base'\nimport type { Store } from '@tanstack/store'\nimport type { WalletAccount, WalletConstructor, WalletId } from 'src/wallets/types'\n\ninterface MnemonicConstructor {\n  persistToStorage?: boolean\n  promptForMnemonic: () => Promise<string | null>\n}\n\nexport type MnemonicOptions = Partial<Pick<MnemonicConstructor, 'promptForMnemonic'>> &\n  Omit<MnemonicConstructor, 'promptForMnemonic'>\n\nexport const LOCAL_STORAGE_MNEMONIC_KEY = `${LOCAL_STORAGE_KEY}_mnemonic`\n\nconst ICON = `data:image/svg+xml;base64,${btoa(`\n<svg viewBox=\"0 0 400 400\" xmlns=\"http://www.w3.org/2000/svg\">\n  <rect fill=\"#525252\" width=\"400\" height=\"400\" />\n  <path fill=\"#FFFFFF\" d=\"M309.2,309.3H275l-22.2-82.7l-47.9,82.7h-38.3l73.9-128l-11.9-44.5l-99.6,172.6H90.8L217.1,90.6 h33.5l14.7,54.3h34.6l-23.6,41L309.2,309.3z\" />\n</svg>\n`)}`\n\nexport class MnemonicWallet extends BaseWallet {\n  private account: algosdk.Account | null = null\n  private options: MnemonicConstructor\n\n  protected store: Store<State>\n\n  constructor({\n    id,\n    store,\n    subscribe,\n    getAlgodClient,\n    options,\n    metadata = {}\n  }: WalletConstructor<WalletId.MNEMONIC>) {\n    super({ id, metadata, getAlgodClient, store, subscribe })\n\n    const {\n      persistToStorage = false,\n      promptForMnemonic = () => Promise.resolve(prompt('Enter 25-word mnemonic passphrase:'))\n    } = options || {}\n    this.options = { persistToStorage, promptForMnemonic }\n\n    this.store = store\n\n    if (this.options.persistToStorage) {\n      this.logger.warn(\n        'Persisting mnemonics to storage is insecure. Any private key mnemonics used should never hold real Algos (i.e., on MainNet). Use with caution!'\n      )\n    }\n  }\n\n  static defaultMetadata = {\n    name: 'Mnemonic',\n    icon: ICON\n  }\n\n  private loadMnemonicFromStorage(): string | null {\n    return StorageAdapter.getItem(LOCAL_STORAGE_MNEMONIC_KEY)\n  }\n\n  private saveMnemonicToStorage(mnemonic: string): void {\n    StorageAdapter.setItem(LOCAL_STORAGE_MNEMONIC_KEY, mnemonic)\n  }\n\n  private removeMnemonicFromStorage(): void {\n    StorageAdapter.removeItem(LOCAL_STORAGE_MNEMONIC_KEY)\n  }\n\n  private checkMainnet(): void {\n    try {\n      const network = this.activeNetworkConfig\n      if (!network.isTestnet) {\n        this.logger.warn(\n          'The Mnemonic wallet provider is insecure and intended for testing only. Any private key mnemonics used should never hold real Algos (i.e., on MainNet).'\n        )\n        throw new Error('Production network detected. Aborting.')\n      }\n    } catch (error) {\n      this.disconnect()\n      throw error\n    }\n  }\n\n  private async initializeAccount(): Promise<algosdk.Account> {\n    let mnemonic = this.loadMnemonicFromStorage()\n    if (!mnemonic) {\n      mnemonic = await this.options.promptForMnemonic()\n      if (!mnemonic) {\n        this.account = null\n        this.logger.error('No mnemonic provided')\n        throw new Error('No mnemonic provided')\n      }\n\n      if (this.options.persistToStorage) {\n        this.logger.warn('Mnemonic saved to localStorage.')\n        this.saveMnemonicToStorage(mnemonic)\n      }\n    }\n\n    const account = algosdk.mnemonicToSecretKey(mnemonic)\n    this.account = account\n    return account\n  }\n\n  public connect = async (): Promise<WalletAccount[]> => {\n    // Throw error if MainNet is active\n    this.checkMainnet()\n\n    this.logger.info('Connecting...')\n    const account = await this.initializeAccount()\n\n    const walletAccount = {\n      name: `${this.metadata.name} Account`,\n      address: account.addr.toString()\n    }\n\n    const walletState: WalletState = {\n      accounts: [walletAccount],\n      activeAccount: walletAccount\n    }\n\n    addWallet(this.store, {\n      walletId: this.id,\n      wallet: walletState\n    })\n\n    this.logger.info('Connected successfully', walletState)\n    return [walletAccount]\n  }\n\n  public disconnect = async (): Promise<void> => {\n    this.logger.info('Disconnecting...')\n    this.onDisconnect()\n    this.account = null\n    this.removeMnemonicFromStorage()\n    this.logger.info('Disconnected')\n  }\n\n  public resumeSession = async (): Promise<void> => {\n    // Throw error if MainNet is active\n    this.checkMainnet()\n\n    const state = this.store.state\n    const walletState = state.wallets[this.id]\n\n    // No session to resume\n    if (!walletState) {\n      this.logger.info('No session to resume')\n      return\n    }\n\n    this.logger.info('Resuming session...')\n\n    // If persisting to storage is enabled, then resume session\n    if (this.options.persistToStorage) {\n      try {\n        await this.initializeAccount()\n        this.logger.info('Session resumed successfully')\n      } catch (error: any) {\n        this.logger.error('Error resuming session:', error.message)\n        this.disconnect()\n        throw error\n      }\n    } else {\n      // Otherwise, do not resume session, disconnect instead\n      this.logger.info('No session to resume, disconnecting...')\n      this.disconnect()\n    }\n  }\n\n  private processTxns(\n    txnGroup: algosdk.Transaction[],\n    indexesToSign?: number[]\n  ): algosdk.Transaction[] {\n    const txnsToSign: algosdk.Transaction[] = []\n\n    txnGroup.forEach((txn, index) => {\n      const isIndexMatch = !indexesToSign || indexesToSign.includes(index)\n      const signer = txn.sender.toString()\n      const canSignTxn = signer === this.account!.addr.toString()\n\n      if (isIndexMatch && canSignTxn) {\n        txnsToSign.push(txn)\n      }\n    })\n\n    return txnsToSign\n  }\n\n  private processEncodedTxns(\n    txnGroup: Uint8Array[],\n    indexesToSign?: number[]\n  ): algosdk.Transaction[] {\n    const txnsToSign: algosdk.Transaction[] = []\n\n    txnGroup.forEach((txnBuffer, index) => {\n      const decodedObj = algosdk.msgpackRawDecode(txnBuffer)\n      const isSigned = isSignedTxn(decodedObj)\n\n      const txn: algosdk.Transaction = isSigned\n        ? algosdk.decodeSignedTransaction(txnBuffer).txn\n        : algosdk.decodeUnsignedTransaction(txnBuffer)\n\n      const isIndexMatch = !indexesToSign || indexesToSign.includes(index)\n      const signer = txn.sender.toString()\n      const canSignTxn = !isSigned && signer === this.account!.addr.toString()\n\n      if (isIndexMatch && canSignTxn) {\n        txnsToSign.push(txn)\n      }\n    })\n\n    return txnsToSign\n  }\n\n  public signTransactions = async <T extends algosdk.Transaction[] | Uint8Array[]>(\n    txnGroup: T | T[],\n    indexesToSign?: number[]\n  ): Promise<(Uint8Array | null)[]> => {\n    // Throw error if MainNet is active\n    this.checkMainnet()\n\n    try {\n      this.logger.debug('Signing transactions...', { txnGroup, indexesToSign })\n      let txnsToSign: algosdk.Transaction[] = []\n\n      // Determine type and process transactions for signing\n      if (isTransactionArray(txnGroup)) {\n        const flatTxns: algosdk.Transaction[] = flattenTxnGroup(txnGroup)\n        txnsToSign = this.processTxns(flatTxns, indexesToSign)\n      } else {\n        const flatTxns: Uint8Array[] = flattenTxnGroup(txnGroup as Uint8Array[])\n        txnsToSign = this.processEncodedTxns(flatTxns, indexesToSign)\n      }\n\n      // Sign transactions\n      const signedTxns = txnsToSign.map((txn) => txn.signTxn(this.account!.sk))\n      this.logger.debug('Transactions signed successfully', { signedTxns })\n      return signedTxns\n    } catch (error: any) {\n      this.logger.error('Error signing transactions:', error.message)\n      throw error\n    }\n  }\n}\n","import algosdk from 'algosdk'\nimport { WalletState, addWallet, setAccounts, setActiveWallet, type State } from 'src/store'\nimport { compareAccounts, flattenTxnGroup, isSignedTxn, isTransactionArray } from 'src/utils'\nimport { BaseWallet } from 'src/wallets/base'\nimport { WalletId } from 'src/wallets/types'\nimport type { PeraWalletConnect } from '@perawallet/connect'\nimport type { Store } from '@tanstack/store'\nimport type { SignerTransaction, WalletAccount, WalletConstructor } from 'src/wallets/types'\n\nexport interface PeraWalletConnectOptions {\n  bridge?: string\n  shouldShowSignTxnToast?: boolean\n  chainId?: 416001 | 416002 | 416003 | 4160\n  compactMode?: boolean\n}\n\nconst ICON = `data:image/svg+xml;base64,${btoa(`\n<svg viewBox=\"0 0 200 200\" xmlns=\"http://www.w3.org/2000/svg\">\n  <rect fill=\"#FFEE55\" width=\"200\" height=\"200\" />\n  <path fill=\"#1C1C1C\" d=\"M106.1,64.3c2.2,9.1,1.5,17-1.7,17.8c-3.1,0.8-7.4-6-9.6-15c-2.2-9.1-1.5-17,1.7-17.8 C99.6,48.5,103.9,55.2,106.1,64.3z\" />\n  <path fill=\"#1C1C1C\" d=\"M142.2,72.1c-4.8-5.1-14.5-3.7-21.6,3.1c-7,6.9-8.8,16.6-4,21.7c4.8,5.1,14.5,3.7,21.6-3.1 C145.3,86.9,147.1,77.2,142.2,72.1z\" />\n  <path fill=\"#1C1C1C\" d=\"M103.7,150.8c3.1-0.8,3.7-9.2,1.4-18.8c-2.3-9.6-6.7-16.8-9.8-16c-3.1,0.8-3.7,9.2-1.4,18.8 C96.2,144.3,100.6,151.5,103.7,150.8z\" />\n  <path fill=\"#1C1C1C\" d=\"M72.1,76.8c9,2.6,15.5,7.3,14.6,10.3c-0.9,3.1-8.9,3.4-17.8,0.8s-15.5-7.3-14.6-10.3 C55.1,74.5,63.1,74.1,72.1,76.8z\" />\n  <path fill=\"#1C1C1C\" d=\"M130.2,111.5c9.5,2.8,16.5,7.6,15.6,10.6c-0.9,3.1-9.3,3.3-18.8,0.5c-9.5-2.8-16.5-7.6-15.6-10.6 C112.2,108.9,120.7,108.7,130.2,111.5z\" />\n  <path fill=\"#1C1C1C\" d=\"M82.1,105c-2.2-2.3-9.5,1-16.3,7.5c-6.8,6.4-10.4,13.5-8.2,15.8c2.2,2.3,9.5-1,16.3-7.5 C80.7,114.4,84.3,107.3,82.1,105z\" />\n</svg>\n`)}`\n\nexport class PeraWallet extends BaseWallet {\n  private client: PeraWalletConnect | null = null\n  private options: PeraWalletConnectOptions\n\n  protected store: Store<State>\n\n  constructor({\n    id,\n    store,\n    subscribe,\n    getAlgodClient,\n    options = {},\n    metadata = {}\n  }: WalletConstructor<WalletId.PERA>) {\n    super({ id, metadata, getAlgodClient, store, subscribe })\n    this.options = options\n    this.store = store\n  }\n\n  static defaultMetadata = {\n    name: 'Pera',\n    icon: ICON\n  }\n\n  private async initializeClient(): Promise<PeraWalletConnect> {\n    this.logger.info('Initializing client...')\n    const { PeraWalletConnect } = await import('@perawallet/connect')\n    const client = new PeraWalletConnect(this.options)\n    this.client = client\n    this.logger.info('Client initialized')\n    return client\n  }\n\n  public connect = async (): Promise<WalletAccount[]> => {\n    this.logger.info('Connecting...')\n    const currentActiveWallet = this.store.state.activeWallet\n    if (currentActiveWallet && currentActiveWallet !== this.id) {\n      this.manageWalletConnectSession('backup', currentActiveWallet)\n    }\n    const client = this.client || (await this.initializeClient())\n    const accounts = await client.connect()\n\n    // Listen for disconnect event\n    client.connector?.on('disconnect', this.onDisconnect)\n\n    if (accounts.length === 0) {\n      this.logger.error('No accounts found!')\n      throw new Error('No accounts found!')\n    }\n\n    const walletAccounts = accounts.map((address: string, idx: number) => ({\n      name: `${this.metadata.name} Account ${idx + 1}`,\n      address\n    }))\n\n    const activeAccount = walletAccounts[0]\n\n    const walletState: WalletState = {\n      accounts: walletAccounts,\n      activeAccount\n    }\n\n    addWallet(this.store, {\n      walletId: this.id,\n      wallet: walletState\n    })\n\n    this.logger.info('Connected successfully', walletState)\n    return walletAccounts\n  }\n\n  public disconnect = async (): Promise<void> => {\n    this.logger.info('Disconnecting...')\n    const client = this.client || (await this.initializeClient())\n\n    const currentActiveWallet = this.store.state.activeWallet\n    if (currentActiveWallet && currentActiveWallet !== this.id) {\n      this.manageWalletConnectSession('backup', currentActiveWallet)\n      this.manageWalletConnectSession('restore', this.id)\n      await client.disconnect()\n      // Wait for the disconnect to complete (race condition)\n      await new Promise((resolve) => setTimeout(resolve, 500))\n      this.manageWalletConnectSession('restore', currentActiveWallet)\n    } else {\n      await client.disconnect()\n    }\n\n    this.onDisconnect()\n    this.logger.info('Disconnected')\n  }\n\n  public setActive = (): void => {\n    this.logger.info(`Set active wallet: ${this.id}`)\n    const currentActiveWallet = this.store.state.activeWallet\n    if (currentActiveWallet && currentActiveWallet === WalletId.DEFLY) {\n      this.manageWalletConnectSession('backup', currentActiveWallet)\n    }\n    this.manageWalletConnectSession('restore')\n    setActiveWallet(this.store, { walletId: this.id })\n  }\n\n  public resumeSession = async (): Promise<void> => {\n    try {\n      const state = this.store.state\n      const walletState = state.wallets[this.id]\n\n      // Check for Pera Discover browser and auto-connect if no other wallet is active\n      if (typeof window !== 'undefined' && window.navigator) {\n        const isPeraDiscover = window.navigator.userAgent.includes('pera')\n        if (isPeraDiscover && !walletState && !state.activeWallet) {\n          this.logger.info('Pera Discover browser detected, attempting auto-connect...')\n          try {\n            await this.connect()\n            this.logger.info('Auto-connect successful')\n            return\n          } catch (error: any) {\n            this.logger.warn('Auto-connect failed:', error.message)\n          }\n        }\n      }\n\n      // No session to resume\n      if (!walletState) {\n        this.logger.info('No session to resume')\n        return\n      }\n\n      // If Defly is active, skip reconnectSession for Pera\n      if (state.activeWallet === WalletId.DEFLY) {\n        this.logger.info('Skipping reconnectSession for Pera (inactive)')\n        return\n      }\n\n      this.logger.info('Resuming session...')\n\n      const client = this.client || (await this.initializeClient())\n      const accounts = await client.reconnectSession()\n\n      if (accounts.length === 0) {\n        this.logger.error('No accounts found!')\n        throw new Error('No accounts found!')\n      }\n\n      const walletAccounts = accounts.map((address: string, idx: number) => ({\n        name: `${this.metadata.name} Account ${idx + 1}`,\n        address\n      }))\n\n      const match = compareAccounts(walletAccounts, walletState.accounts)\n\n      if (!match) {\n        this.logger.warn('Session accounts mismatch, updating accounts', {\n          prev: walletState.accounts,\n          current: walletAccounts\n        })\n        setAccounts(this.store, {\n          walletId: this.id,\n          accounts: walletAccounts\n        })\n      }\n      this.logger.info('Session resumed successfully')\n    } catch (error: any) {\n      this.logger.error('Error resuming session:', error.message)\n      this.onDisconnect()\n      throw error\n    }\n  }\n\n  private processTxns(\n    txnGroup: algosdk.Transaction[],\n    indexesToSign?: number[]\n  ): SignerTransaction[] {\n    const txnsToSign: SignerTransaction[] = []\n\n    txnGroup.forEach((txn, index) => {\n      const isIndexMatch = !indexesToSign || indexesToSign.includes(index)\n      const signer = txn.sender.toString()\n      const canSignTxn = this.addresses.includes(signer)\n\n      if (isIndexMatch && canSignTxn) {\n        txnsToSign.push({ txn })\n      } else {\n        txnsToSign.push({ txn, signers: [] })\n      }\n    })\n\n    return txnsToSign\n  }\n\n  private processEncodedTxns(\n    txnGroup: Uint8Array[],\n    indexesToSign?: number[]\n  ): SignerTransaction[] {\n    const txnsToSign: SignerTransaction[] = []\n\n    txnGroup.forEach((txnBuffer, index) => {\n      const decodedObj = algosdk.msgpackRawDecode(txnBuffer)\n      const isSigned = isSignedTxn(decodedObj)\n\n      const txn: algosdk.Transaction = isSigned\n        ? algosdk.decodeSignedTransaction(txnBuffer).txn\n        : algosdk.decodeUnsignedTransaction(txnBuffer)\n\n      const isIndexMatch = !indexesToSign || indexesToSign.includes(index)\n      const signer = txn.sender.toString()\n      const canSignTxn = !isSigned && this.addresses.includes(signer)\n\n      if (isIndexMatch && canSignTxn) {\n        txnsToSign.push({ txn })\n      } else {\n        txnsToSign.push({ txn, signers: [] })\n      }\n    })\n\n    return txnsToSign\n  }\n\n  public signTransactions = async <T extends algosdk.Transaction[] | Uint8Array[]>(\n    txnGroup: T | T[],\n    indexesToSign?: number[]\n  ): Promise<(Uint8Array | null)[]> => {\n    try {\n      this.logger.debug('Signing transactions...', { txnGroup, indexesToSign })\n      let txnsToSign: SignerTransaction[] = []\n\n      // Determine type and process transactions for signing\n      if (isTransactionArray(txnGroup)) {\n        const flatTxns: algosdk.Transaction[] = flattenTxnGroup(txnGroup)\n        txnsToSign = this.processTxns(flatTxns, indexesToSign)\n      } else {\n        const flatTxns: Uint8Array[] = flattenTxnGroup(txnGroup as Uint8Array[])\n        txnsToSign = this.processEncodedTxns(flatTxns, indexesToSign)\n      }\n\n      const client = this.client || (await this.initializeClient())\n\n      this.logger.debug('Sending processed transactions to wallet...', [txnsToSign])\n\n      // Sign transactions\n      const signedTxns = await client.signTransaction([txnsToSign])\n      this.logger.debug('Received signed transactions from wallet', signedTxns)\n\n      // ARC-0001 - Return null for unsigned transactions\n      const result = txnsToSign.reduce<(Uint8Array | null)[]>((acc, txn) => {\n        if (txn.signers && txn.signers.length == 0) {\n          acc.push(null)\n        } else {\n          const signedTxn = signedTxns.shift()\n          if (signedTxn) {\n            acc.push(signedTxn)\n          }\n        }\n        return acc\n      }, [])\n\n      this.logger.debug('Transactions signed successfully', result)\n      return result\n    } catch (error: any) {\n      this.logger.error('Error signing transactions:', error.message)\n      throw error\n    }\n  }\n}\n","/**\n * Fallback configuration for Webpack to handle optional wallet dependencies.\n * This allows applications to build without these packages installed,\n * enabling users to include only the wallet packages they need.\n * Each package is set to 'false', which means Webpack will provide an empty module\n * if the package is not found, preventing build errors for unused wallets.\n */\nexport const webpackFallback = {\n  '@agoralabs-sh/avm-web-provider': false,\n  '@blockshake/defly-connect': false,\n  '@magic-ext/algorand': false,\n  '@perawallet/connect': false,\n  '@walletconnect/modal': false,\n  '@walletconnect/sign-client': false,\n  'lute-connect': false,\n  'magic-sdk': false\n}\n"],"mappings":"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","names":["SDKErrorCode","SDKWarningCode","RPCErrorCode","LocalStorageKeys","ThirdPartyWalletEvents","MagicPayloadMethod","routeToMagicMethods","MagicIncomingWindowMessage","MagicOutgoingWindowMessage","DeepLinkPage","LoginWithMagicLinkEventEmit","LoginWithMagicLinkEventOnReceived","LoginWithEmailOTPEventEmit","LoginWithSmsOTPEventEmit","LoginWithSmsOTPEventOnReceived","LoginWithEmailOTPEventOnReceived","DeviceVerificationEventEmit","DeviceVerificationEventOnReceived","RecencyCheckEventEmit","RecencyCheckEventOnReceived","UpdateEmailEventEmit","UpdateEmailEventOnReceived","AuthEventOnReceived","FarcasterLoginEventEmit","EnableMFAEventOnReceived","EnableMFAEventEmit","DisableMFAEventOnReceived","DisableMFAEventEmit","EthChainType","UserEventsEmit","UserEventsOnReceived","RecoveryFactorEventOnReceived","RecoveryFactorEventEmit","RecoveryMethodType","RecoverAccountEventOnReceived","RecoverAccountEventEmit","NftCheckoutIntermediaryEvents","WalletEventOnReceived","UiEventsEmit","createCommonjsModule","e","r","percentToByte","p","byteToPercent","b","btoaUTF8","str","atobUTF8","encodeJSON","options","decodeJSON","queryString","isUndefined","value","isNull","isNil","isJsonRpcResponsePayload","isJsonRpcErrorCode","RPCErrorCode","isEmpty","key","createSDK","SDKBaseCtor","environment","SDKEnvironment","createMissingApiKeyError","MagicSDKError","SDKErrorCode","createModalNotReadyError","createMalformedResponseError","createExtensionNotInitializedError","member","createIncompatibleExtensionsError","extensions","msg","ext","compat","createInvalidArgumentError","ordinalSuffix","i","iAdjusted","j","k","createDuplicateIframeWarning","MagicSDKWarning","SDKWarningCode","createSynchronousWeb3MethodWarning","createReactNativeEndpointConfigurationWarning","createDeprecationWarning","method","removalVersions","useInstead","removalVersion","useInsteadSuffix","message","createIntGenerator","index","getPayloadId","intGenerator","markPayloadAsPreprocessed","payload","payloadPreprocessedSymbol","isPayloadPreprocessed","standardizeJsonRpcRequestPayload","_a","_b","_c","createJsonRpcRequestPayload","params","createTypedEmitter","emitter","TypedEmitter","source","args","isPromiEvent","promiEventBrand","createPromiEvent","executor","promise","createPromise","createBoundEmitterMethod","createChainingEmitterMethod","thenSymbol","catchSymbol","finallySymbol","createChainingPromiseMethod","nextPromise","promiEvent","result","resolved","err","UserEventsOnReceived","UserEventsEmit","resolve","reject","isMajorVersionAtLeast","version","majorVersion","major","proxyLocalForageMethod","__async","lf","uuid","u","uid","isWebCryptoSupported","hasCrypto","hasSubtleCrypto","createJwt","publicJwk","getPublicKey","subtle","privateJwk","getItem","STORE_KEY_PRIVATE_KEY","claims","headers","jws","strToUrlBase64","data","strToUint8","sigType","ALGO_NAME","sig","uint8ToUrlBase64","STORE_KEY_PUBLIC_JWK","generateWCKP","kp","EC_GEN_PARAMS","jwkPublicKey","setItem","binToUrlBase64","utf8ToBinaryString","bin","_","p1","uint8","code","clearDeviceShares","keysToRemove","iterate","iterationNumber","DEVICE_SHARE_KEY","removeItem","arrayBufferToBase64","buffer","binary","bytes","len","base64ToArrayBuffer","base64","binaryString","getOrCreateInitVector","crypto","existingIv","INITIALIZATION_VECTOR_KEY","getOrCreateEncryptionKey","existingKey","ENCRYPTION_KEY_KEY","ALGO_LENGTH","encryptAndPersistDeviceShare","deviceShareBase64","networkHash","iv","encryptionKey","decodedDeviceShare","encryptedData","encryptedDeviceShare","getDecryptedDeviceShare","ab","createURL","url","base","getPrototypeChain","instance","currentProto","protos","BaseModule","checkExtensionCompat","satisfies","coerce","getNetworkHash","apiKey","network","extConfig","prepareExtensions","incompatibleExtensions","Extension","name","getRequestPayloadFromBatch","requestPayload","id","standardizeResponse","event","requestPayloadResolved","response","JsonRpcResponse","createMagicRequest","msgType","rt","jwt","request","decryptedDeviceShare","persistMagicEventRefreshToken","require_eventemitter3","MAX_SAFE_INTEGER$1","constants","debug","debug_1","re_1","numeric","compareIdentifiers$1","rcompareIdentifiers","identifiers","MAX_LENGTH$1","MAX_SAFE_INTEGER","re$4","t$4","compareIdentifiers","SemVer","compare","compare_1","eq","eq_1","neq","neq_1","gt","gt_1","gte","gte_1","lt","lt_1","lte","lte_1","cmp","cmp_1","ANY","Comparator","re$3","t$3","Range","re$2","t$2","comparatorTrimReplace","tildeTrimReplace","caretTrimReplace","isSatisfiable","parseComparator","isX","replaceTildes","replaceTilde","replaceCarets","replaceCaret","replaceXRanges","replaceXRange","replaceStars","replaceGTE0","hyphenReplace","testSet","MAX_LENGTH","re$1","t$1","parse","parse_1","re","t","sdkNameToEnvName","MagicRPCError","MagicExtensionError","MagicExtensionWarning","import_eventemitter3","ProductConsolidationMethodRemovalVersions","AuthModule","storage_exports","clear","length","keys","ALGO_CURVE","UserModule","WalletModule","ThirdPartyWalletsModule","RPCProviderModule","sdkAccessFields","BaseExtension","InternalExtension","NFTModule","_SDKBase","SDKBase","ViewController","__commonJSMin","exports","module","has","prefix","Events","EE","fn","context","once","addListener","listener","evt","clearEvent","EventEmitter","names","events","handlers","l","ee","listeners","a1","a2","a3","a4","a5","s","o","a","n","E","c","$","h","rawMessage","sourceError","codeNormalized","responseOrPayload","error","sdk","routeToMagicMethods","responsePromise","MagicOutgoingWindowMessage","res","cleanupEvents","MagicIncomingWindowMessage","eventType","payloadId","MagicPayloadMethod","configuration","isRNMobilePackage","email","showUI","redirectURI","overrides","lifespan","phoneNumber","handle","LoginWithSmsOTPEventEmit","otp","deviceCheckUI","DeviceVerificationEventEmit","LoginWithEmailOTPEventEmit","mfa","recoveryCode","credentialOrQueryString","credentialResolved","urlWithoutQuery","RecencyCheckEventEmit","UpdateEmailEventEmit","newEmail","__export","cachedIsLoggedIn","isLoggedInResponse","scope","RecoveryFactorEventEmit","phone_number","RecoverAccountEventEmit","callback","EnableMFAEventEmit","totp","DisableMFAEventEmit","loggedOut","loginRequestPayload","__spreadValues","loginRequest","config","address","transaction","LocalStorageKeys","provider","walletStatus","unsubscribeFromProviderEvents","status","walletType","userAddress","onRequestComplete","standardizedPayload","batchResponse","__spreadProps","finalPayload","payloadOrMethod","onRequestCompleteOrParams","warning","testModePrefix","allSources","prop","allDescriptors","sourceIndex","x","isPrototypeField","descriptor","isThirdPartyWalletConnected","NftCheckoutIntermediaryEvents","rawTransaction","hash","defaultEndpoint","controller","endpoint","parameters","batchData","batchIds","acknowledgeResponse","removeEventListener","deviceShare","removeResponseListener","handler","boundHandler","unsubscribe","init_es","applyOverlayStyles","elem","cssProperty","value","overlayStyles","checkForSameSrcInstances","parameters","iframes","iframe","require_localforage","rr","import_localforage","memoryDriver","SECOND","MINUTE","RESPONSE_DELAY","PING_INTERVAL","INITIAL_HEARTBEAT_DELAY","IframeController","Magic","init_es","__commonJSMin","exports","module","f","g","define","e","t","n","r","s","o","u","a","__require","i","l","_dereq_","global","Mutation","scheduleDrain","called","observer","nextTick","element","channel","scriptEl","draining","queue","oldQueue","len","immediate","task","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","Promise","resolver","safelyResolveThenable","onRejected","onFulfilled","promise","unwrap","QueueItem","func","returnValue","self","result","tryCatch","getThen","thenable","error","obj","then","onError","onSuccess","tryToUnwrap","out","resolve","reject","reason","all","iterable","values","resolved","allResolver","resolveFromAll","outValue","race","response","_typeof","_classCallCheck","instance","Constructor","getIDB","idb","isIndexedDBValid","isSafari","hasFetch","createBlob","parts","properties","Builder","builder","Promise$1","executeCallback","callback","executeTwoCallbacks","errorCallback","normalizeKey","key","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","toString","READ_ONLY","READ_WRITE","_binStringToArrayBuffer","bin","length","buf","arr","_checkBlobSupportWithoutCaching","txn","blob","matchedChrome","matchedEdge","_checkBlobSupport","_deferReadiness","dbInfo","dbContext","deferredOperation","_advanceReadiness","_rejectReadiness","err","_getConnection","upgradeNeeded","createDbContext","dbArgs","openreq","db","ex","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","isDowngrade","isUpgrade","incVersion","_encodeBlob","reader","base64","_decodeBlob","encodedBlob","arrayBuff","_isEncodedBlob","_fullyReady","_tryReconnect","forages","forage","createTransaction","mode","retries","tx","_initStorage","options","initPromises","ignoreErrors","j","k","getItem","transaction","store","req","iterate","iterator","iterationNumber","cursor","setItem","blobSupport","removeItem","clear","advanced","keys","dropInstance","currentConfig","isCurrentDb","dbPromise","newVersion","dropObjectPromise","_forage2","dropDBPromise","_forage","asyncStorage","isWebSQLValid","BASE_CHARS","BLOB_TYPE_PREFIX","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","bufferLength","p","encoded1","encoded2","encoded3","encoded4","buffer","bytes","bufferToString","base64String","serialize","valueType","marker","fileReader","str","deserialize","type","blobType","matcher","localforageSerializer","createDbTable","_initStorage$1","dbInfoPromise","tryExecuteSql","sqlStatement","args","results","getItem$1","iterate$1","rows","item","_setItem","retriesLeft","originalValue","sqlError","setItem$1","removeItem$1","clear$1","length$1","key$1","keys$1","getAllStoreNames","storeNames","dropInstance$1","operationInfo","dropTable","storeName","operations","webSQLStorage","isLocalStorageValid","_getKeyPrefix","defaultConfig","keyPrefix","checkIfLocalStorageThrows","localStorageTestKey","_isLocalStorageUsable","_initStorage$2","clear$2","getItem$2","iterate$2","keyPrefixLength","key$2","keys$2","itemKey","length$2","removeItem$2","setItem$2","dropInstance$2","localStorageWrapper","sameValue","x","y","includes","array","searchElement","isArray","arg","DefinedDrivers","DriverSupport","DefaultDrivers","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","DefaultConfig","callWhenReady","localForageInstance","libraryMethod","_args","extend","_key","LocalForage","driverTypeKey","driver","driverName","driverObject","complianceError","driverMethods","driverMethodName","isRequired","configureMissingMethods","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","setDriverSupport","support","getDriverPromise","serializerPromise","drivers","supportedDrivers","setDriverToConfig","extendSelfWithDriver","initDriver","currentDriverIndex","driverPromiseLoop","oldDriverSetDone","libraryMethodsAndProperties","localforage_js","ye","er","b","T","_driver","_","v","clone","e_1","_a","temp","_b","__values","_c","e_1_1","getKeyPrefix","dropInstanceCommon","_this","normaliseKey","serialiser","stores","Store","kp","idx","opts","_options","_cb","outPromise","key$","keys$","value$","_support","oe","te","h","D","E","C","G","X","Q","ViewController","createURL","onload","createDuplicateIframeWarning","__async","event","MagicIncomingWindowMessage","handler","data","createModalNotReadyError","message","MagicOutgoingWindowMessage","createSDK","SDKBase","lf","ge","localForage","Ne","AlgorandExtension","init_es","Extension","algorandConfig","txn","__async","txns","ICON","LogLevel","import_store","import_algosdk","NetworkId","WalletId","algosdk","a","import_algosdk","import_algosdk","name","icons","description","algosdk","ICON","ICON","import_algosdk","ICON","algosdk","import_algosdk","module","algosdk","ICON","import_algosdk","ICON","algosdk","ICON","import_algosdk","ICON","algosdk","wallet","import_algosdk","ICON","module","algosdk","import_algosdk","ICON","algosdk","import_algosdk","ICON","algosdk","import_algosdk","ICON","algosdk","algosdk","algosdk"]}